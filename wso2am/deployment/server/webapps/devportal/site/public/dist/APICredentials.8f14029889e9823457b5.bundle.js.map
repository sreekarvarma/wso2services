{"version":3,"file":"APICredentials.8f14029889e9823457b5.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Shared/GenericDisplayDialog.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/OriginalDevportalDetails.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/SubscriptionTableRow.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Credentials.jsx"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\n\nconst PREFIX = 'genericDisplayDialog';\n\nconst classes = {\n    appContent: `${PREFIX}-appContent`,\n    button: `${PREFIX}-button`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.appContent}`]: {\n        margin: theme.spacing(2),\n    },\n\n    [`& .${classes.button}`]: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    }\n}));\n\nconst genericDisplayDialog = (props) => {\n    const {\n        handleClick, heading, caption, buttonText,\n    } = props;\n\n    return (\n        <Root className={classes.appContent}>\n            <InlineMessage type='info' className={classes.dialogContainer}>\n                <Typography variant='h5' component='h2'>\n                    {heading}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                    {caption}\n                </Typography>\n                <ScopeValidation resourcePath={resourcePaths.APPLICATIONS} resourceMethod={resourceMethods.POST}>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        className={classes.button}\n                        onClick={handleClick}\n                        id='start-key-gen-wizard-btn'\n                    >\n                        {buttonText}\n                    </Button>\n                </ScopeValidation>\n            </InlineMessage>\n        </Root>\n    );\n};\n\nexport default genericDisplayDialog;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You maRefactor code of AsyncApiUIy obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Paper, Typography } from '@mui/material';\nimport Link from '@mui/material/Link';\nimport LaunchIcon from '@mui/icons-material/Launch';\n\nconst OriginalDevportalDetails = (props) => {\n    const {\n        classes, originalDevPortalUrl,\n    } = props;\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Typography variant='h5' component='h2'>\n                <FormattedMessage\n                    id={'Apis.Details.Credentials.OriginalDevportalDetails.'\n                    + 'original.developer.portal.title'}\n                    defaultMessage='Original Developer Portal'\n                />\n            </Typography>\n            <Link\n                target='_blank'\n                rel='noopener noreferrer'\n                href={originalDevPortalUrl}\n                variant='body2'\n                underline='hover'\n            >\n                <div className={classes.originalDevPortalLink} data-testid='itest-original-devportal-link'>\n                    <FormattedMessage\n                        id='Apis.Details.Credentials.OriginalDevportalDetails.visit.original.developer.portal'\n                        defaultMessage='Visit Original Developer Portal'\n                    />\n                    <LaunchIcon className={classes.launchIcon} />\n                </div>\n            </Link>\n        </Paper>\n    );\n};\n\nexport default OriginalDevportalDetails;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link as MUILink, useTheme } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport TokenManager from 'AppComponents/Shared/AppsAndKeys/TokenManager';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst subscriptionTableRow = (props) => {\n    const {\n        loadInfo, handleSubscriptionDelete, isKeyManagerAllowed,\n        selectedAppId, updateSubscriptionData, selectedKeyType, app, applicationOwner, hashEnabled,\n    } = props;\n    const theme = useTheme();\n    return (\n        <>\n            <tr>\n                <td\n                    id={app.label}\n                >\n                    <Typography variant='body2'>\n                        {app.label}\n                    </Typography>\n                </td>\n                <td>\n                    <Typography variant='body2'>\n                        {app.policy}\n                    </Typography>\n                </td>\n                <td>\n                    <Typography variant='body2'>\n                        {app.status}\n                    </Typography>\n                </td>\n                <td>\n                    <Box sx={{\n                        display: 'flex',\n                        textAlign: 'right',\n                        direction: 'rtl',\n                    }}\n                    >\n                        <MUILink\n                            sx={(themeValue) => ({\n                                padding: themeValue.spacing(1),\n                                color: themeValue.palette.getContrastText(themeValue.palette.background.default),\n                                display: 'flex',\n                                alignItems: 'center',\n                                fontSize: '11px',\n                                cursor: 'pointer',\n                                '& span': {\n                                    paddingLeft: 1,\n                                    display: 'inline-block',\n                                },\n                            })}\n                            to={'/applications/' + app.value}\n                            id={app.label + '-MA'}\n                            aria-labelledby={app.label + '-MA ' + app.label}\n                            component={Link}\n                            underline='hover'\n                        >\n                            <span>\n                                <FormattedMessage\n                                    id='Apis.Details.Credentials.SubscriptionTableRow.manage.app'\n                                    defaultMessage='MANAGE APP'\n                                />\n                            </span>\n                            <CustomIcon\n                                width={16}\n                                height={16}\n                                strokeColor={theme.palette.primary.main}\n                                icon='applications'\n                            />\n                        </MUILink>\n                        <ScopeValidation\n                            resourcePath={resourcePaths.SINGLE_SUBSCRIPTION}\n                            resourceMethod={resourceMethods.DELETE}\n                        >\n                            <MUILink\n                                sx={(themeValue) => ({\n                                    padding: themeValue.spacing(1),\n                                    color: themeValue.palette.getContrastText(themeValue.palette.background.default),\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    fontSize: '11px',\n                                    cursor: 'pointer',\n                                    '& span': {\n                                        paddingLeft: 1,\n                                        display: 'inline-block',\n                                    },\n                                })}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    handleSubscriptionDelete(\n                                        app.subscriptionId,\n                                        updateSubscriptionData,\n                                    );\n                                }}\n                                id={app.label + '-UN'}\n                                aria-labelledby={app.label + '-UN ' + app.label}\n                                underline='hover'\n                            >\n                                <span>\n                                    <FormattedMessage\n                                        id='Apis.Details.Credentials.SubscriptionTableRow.unsubscribe'\n                                        defaultMessage='UNSUBSCRIBE'\n                                    />\n                                </span>\n                                <CustomIcon\n                                    width={16}\n                                    height={16}\n                                    strokeColor={theme.palette.primary.main}\n                                    icon='subscriptions'\n                                />\n                            </MUILink>\n                        </ScopeValidation>\n                        <MUILink\n                            sx={(themeValue) => ({\n                                padding: themeValue.spacing(1),\n                                color: themeValue.palette.getContrastText(themeValue.palette.background.default),\n                                display: 'flex',\n                                alignItems: 'center',\n                                fontSize: '11px',\n                                cursor: 'pointer',\n                                '& span': {\n                                    paddingLeft: 1,\n                                    display: 'inline-block',\n                                },\n                            })}\n                            onClick={() => loadInfo('PRODUCTION', app.value)}\n                            id={app.label + '-PK'}\n                            aria-labelledby={app.label + '-PK ' + app.label}\n                            underline='hover'\n                        >\n                            <span>\n                                <FormattedMessage\n                                    id='Apis.Details.Credentials.SubscriptionTableRow.prod.keys'\n                                    defaultMessage='PROD KEYS'\n                                />\n                            </span>\n                            <CustomIcon\n                                width={16}\n                                height={16}\n                                strokeColor={theme.palette.primary.main}\n                                icon='productionkeys'\n                            />\n                        </MUILink>\n                        <MUILink\n                            sx={(themeValue) => ({\n                                padding: themeValue.spacing(1),\n                                color: themeValue.palette.getContrastText(themeValue.palette.background.default),\n                                display: 'flex',\n                                alignItems: 'center',\n                                fontSize: '11px',\n                                cursor: 'pointer',\n                                '& span': {\n                                    paddingLeft: 1,\n                                    display: 'inline-block',\n                                },\n                            })}\n                            onClick={() => loadInfo('SANDBOX', app.value)}\n                            id={app.label + '-SB'}\n                            aria-labelledby={app.label + '-SB ' + app.label}\n                            underline='hover'\n                        >\n                            <span>\n                                <FormattedMessage\n                                    id='Apis.Details.Credentials.SubscriptionTableRow.sandbox.keys'\n                                    defaultMessage='SANDBOX KEYS'\n                                />\n                            </span>\n                            <CustomIcon\n                                width={16}\n                                height={16}\n                                strokeColor={theme.palette.primary.main}\n                                icon='productionkeys'\n                            />\n                        </MUILink>\n                    </Box>\n                </td>\n            </tr>\n            {app.value === selectedAppId && (selectedKeyType === 'PRODUCTION' || selectedKeyType === 'SANDBOX') && (\n                <tr>\n                    <td colSpan='4'>\n                        <Box sx={(themeValue) => ({\n                            borderLeft: 'solid 2px ' + themeValue.palette.primary.main,\n                        })}\n                        >\n                            <TokenManager\n                                isKeyManagerAllowed={isKeyManagerAllowed}\n                                keyType={selectedKeyType}\n                                selectedApp={{\n                                    appId: app.value,\n                                    label: app.label,\n                                    owner: applicationOwner,\n                                    hashEnabled,\n                                }}\n                                updateSubscriptionData={updateSubscriptionData}\n                            />\n                        </Box>\n                    </td>\n                </tr>\n            )}\n        </>\n    );\n};\nsubscriptionTableRow.propTypes = {\n    classes: PropTypes.shape({\n        td: PropTypes.shape({}),\n        actionColumn: PropTypes.shape({}),\n        button: PropTypes.shape({}),\n        activeLink: PropTypes.shape({}),\n        selectedWrapper: PropTypes.shape({}),\n    }).isRequired,\n    theme: PropTypes.shape({\n\n    }).isRequired,\n    handleSubscriptionDelete: PropTypes.func.isRequired,\n    loadInfo: PropTypes.func.isRequired,\n    selectedAppId: PropTypes.string.isRequired,\n    updateSubscriptionData: PropTypes.func.isRequired,\n    selectedKeyType: PropTypes.string.isRequired,\n    applicationOwner: PropTypes.string.isRequired,\n    app: PropTypes.shape({\n        label: PropTypes.string,\n        policy: PropTypes.string,\n        status: PropTypes.string,\n        value: PropTypes.string,\n        subscriptionId: PropTypes.string,\n    }).isRequired,\n};\nexport default (subscriptionTableRow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Subscription from 'AppData/Subscription';\nimport GenericDisplayDialog from 'AppComponents/Shared/GenericDisplayDialog';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Icon from '@mui/material/Icon';\nimport Link from '@mui/material/Link';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Application from 'AppData/Application';\nimport AuthManager from 'AppData/AuthManager';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport OriginalDevportalDetails from './OriginalDevportalDetails';\nimport { ApiContext } from '../ApiContext';\nimport SubscriptionTableRow from './SubscriptionTableRow';\n\nconst PREFIX = 'Credentials';\n\nconst classes = {\n    contentWrapper: `${PREFIX}-contentWrapper`,\n    titleSub: `${PREFIX}-titleSub`,\n    generateCredentialWrapper: `${PREFIX}-generateCredentialWrapper`,\n    tableMain: `${PREFIX}-tableMain`,\n    expansion: `${PREFIX}-expansion`,\n    summary: `${PREFIX}-summary`,\n    subscribeRoot: `${PREFIX}-subscribeRoot`,\n    activeLink: `${PREFIX}-activeLink`,\n    appBar: `${PREFIX}-appBar`,\n    toolbar: `${PREFIX}-toolbar`,\n    subscribeTitle: `${PREFIX}-subscribeTitle`,\n    paper: `${PREFIX}-paper`,\n    descWrapper: `${PREFIX}-descWrapper`,\n    credentialBoxWrapper: `${PREFIX}-credentialBoxWrapper`,\n    credentialBox: `${PREFIX}-credentialBox`,\n    addLinkWrapper: `${PREFIX}-addLinkWrapper`,\n    subsListTitle: `${PREFIX}-subsListTitle`,\n    subsListDesc: `${PREFIX}-subsListDesc`,\n    buttonElm: `${PREFIX}-buttonElm`,\n    launchIcon: `${PREFIX}-launchIcon`,\n    originalDevPortalLink: `${PREFIX}-originalDevPortalLink`,\n};\n\nconst StyledGrid = styled(Grid)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.contentWrapper}`]: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(3),\n        paddingTop: theme.spacing(3),\n    },\n\n    [`& .${classes.titleSub}`]: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n\n    [`& .${classes.generateCredentialWrapper}`]: {\n        marginLeft: 0,\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        '& span, & h5, & label, & td, & li, & div': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n\n    [`& .${classes.tableMain}`]: {\n        '& > table': {\n            width: '100%',\n            borderCollapse: 'collapse',\n            marginTop: theme.spacing(3),\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(1),\n        },\n        '& table > tr td': {\n            paddingLeft: theme.spacing(1),\n        },\n        '&  table > tr:nth-child(even)': {\n            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n            '& td, & a, & .material-icons': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n            },\n        },\n        '&  table > tr:nth-child(odd)': {\n            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n            '& td, & a, & .material-icons': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n            },\n        },\n        '&  table > tr > th': {\n            backgroundColor: theme.custom.listView.tableHeadBackground,\n            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n            paddingLeft: theme.spacing(1),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A400,\n            borderTop: 'solid 1px ' + theme.palette.grey.A400,\n            textAlign: 'left',\n            fontSize: '11px',\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n        },\n        '& table > tr > th:last-child': {\n            textAlign: 'right',\n        },\n\n    },\n\n    [`& .${classes.expansion}`]: {\n        background: 'transparent',\n        boxShadow: 'none',\n    },\n\n    [`& .${classes.summary}`]: {\n        alignItems: 'center',\n    },\n\n    [`& .${classes.subscribeRoot}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.activeLink}`]: {\n        background: theme.palette.grey.A300,\n    },\n\n    [`& .${classes.appBar}`]: {\n        background: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n\n    [`& .${classes.toolbar}`]: {\n        marginLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.subscribeTitle}`]: {\n        flex: 1,\n    },\n\n    [`& .${classes.paper}`]: {\n        marginLeft: theme.spacing(3),\n        padding: theme.spacing(2),\n    },\n\n    [`& .${classes.descWrapper}`]: {\n        marginBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n\n    [`& .${classes.credentialBoxWrapper}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.credentialBox}`]: {\n        padding: theme.spacing(1),\n        border: 'solid 1px #ccc',\n        borderRadius: 5,\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.addLinkWrapper}`]: {\n        marginLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.subsListTitle}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n\n    [`& .${classes.subsListDesc}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n\n    [`& .${classes.buttonElm}`]: {\n        '& span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n\n    [`& .${classes.launchIcon}`]: {\n        paddingLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.originalDevPortalLink}`]: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n/**\n * @class Credentials\n * @extends {React.Component}\n */\nclass Credentials extends React.Component {\n    /**\n     *Creates an instance of Credentials.\n     * @param JSON props\n     * @memberof Credentials\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            selectedAppId: false,\n            selectedKeyType: false,\n            subscriptionRequest: {\n                applicationId: '',\n                apiId: '',\n                throttlingPolicy: '',\n            },\n            throttlingPolicyList: [],\n            applicationOwner: '',\n            hashEnabled: false,\n            isSubscribing: false,\n        };\n        this.api = new Api();\n    }\n\n    /**\n     *  Set the initial values for subscription request\n     */\n    componentDidMount() {\n        const { api, updateSubscriptionData } = this.context;\n        if (api) {\n            this.updateData();\n        } else {\n            updateSubscriptionData(this.updateData);\n        }\n    }\n\n    updateData = () => {\n        const { api, applicationsAvailable } = this.context;\n        const { subscriptionRequest } = this.state;\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: api.id };\n        const throttlingPolicyList = api.tiers.sort((a, b) => {\n            // Sort by 'COMMERCIAL' tier plan first\n            if (a.tierPlan === 'COMMERCIAL' && b.tierPlan !== 'COMMERCIAL') {\n                return -1;\n            } else if (a.tierPlan !== 'COMMERCIAL' && b.tierPlan === 'COMMERCIAL') {\n                return 1;\n            }\n            // For options within the same tier plan, sort alphabetically\n            return a.tierName.localeCompare(b.tierName);\n        });\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            newSubscriptionRequest.throttlingPolicy = throttlingPolicyList[0].tierName;\n        }\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            newSubscriptionRequest.applicationId = applicationsAvailable[0].value;\n        }\n        this.setState({ subscriptionRequest: newSubscriptionRequest, throttlingPolicyList });\n    };\n\n    /**\n     * @memberof Credentials\n     */\n    handleExpandClick = () => {\n        this.setState((state) => ({ expanded: !state.expanded }));\n    };\n\n    /**\n     * @param {*} updateSubscriptionData method to update global subscription data\n     * @memberof Credentials\n     */\n    handleSubscribe = () => {\n        const { updateSubscriptionData, apiType } = this.context;\n        const { subscriptionRequest } = this.state;\n        const { intl } = this.props;\n        const api = new Api();\n        this.setState({ isSubscribing: true });\n        api.subscribe(\n            subscriptionRequest.apiId,\n            subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n            apiType,\n        )\n            .then((response) => {\n                if (response.body.status === 'ON_HOLD') {\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Your subscription request has been submitted and is now awaiting approval.',\n                        id: 'subscription.pending',\n                    }));\n                } else {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Credentials.subscribed.successfully',\n                    }));\n                }\n                if (updateSubscriptionData) updateSubscriptionData(this.updateData);\n                this.setState({ isSubscribing: false });\n            })\n            .catch((error) => {\n                Alert.error(intl.formatMessage({\n                    id: 'Applications.Details.Subscriptions.error.occurred.during.subscription.not.201',\n                    defaultMessage: 'Error occurred during subscription',\n                }));\n                console.log('Error while creating the subscription.');\n                console.error(error);\n                this.setState({ isSubscribing: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @memberof Credentials\n     */\n    goToWizard = () => {\n        const { history } = this.props;\n        history.push('credentials/wizard');\n    };\n\n    /**\n     * used to load the token manager component when\n     * key type is selected in the applicaiton list\n     * @param {*} selectedKeyType key type\n     * @param {*} selectedAppId  application id\n     * @memberof Credentials\n     */\n    loadInfo = (selectedKeyType, selectedAppId) => {\n        this.setState({ selectedKeyType, selectedAppId });\n\n        Application.get(selectedAppId)\n            .then((result) => {\n                this.setState({ applicationOwner: result.owner, hashEnabled: result.hashEnabled });\n            });\n    };\n\n    /**\n     * used to check if key manager is in the allowed list for an API\n     * @param {*} name name of the key manager\n     * @memberof Credentials\n     */\n    isKeyManagerAllowed = (name) => {\n        const { api } = this.context;\n        return api && ((api.keyManagers && api.keyManagers.includes('all'))\n        || (api.keyManagers && api.keyManagers.includes(name)));\n    };\n\n    /**\n     * Update subscription Request state\n     * @param {Object} subscriptionRequest parameters requried for subscription\n     */\n    updateSubscriptionRequest = (subscriptionRequest) => {\n        this.setState({ subscriptionRequest });\n    };\n\n    /**\n     *\n     * @param {*} subscriptionId subscription id\n     * @param {*} updateSubscriptionData method to update global subscription data\n     * @memberof Subscriptions\n     */\n    handleSubscriptionDelete = (subscriptionId, updateSubscriptionData) => {\n        const { intl } = this.props;\n        const client = new Subscription();\n        const promisedDelete = client.deleteSubscription(subscriptionId);\n        promisedDelete.then((response) => {\n            if (response.status === 200) {\n                Alert.info(intl.formatMessage({\n                    defaultMessage: 'Subscription deleted successfully!',\n                    id: 'Apis.Details.Credentials.Credentials.subscription.deleted.successfully',\n                }));\n            }\n            if (response.status === 201) {\n                Alert.info(intl.formatMessage({\n                    defaultMessage: 'Subscription Deletion Request Created!',\n                    id: 'Apis.Details.Credentials.Credentials.subscription.request.created',\n                }));\n            }\n            if (response.status !== 200 && response.status !== 201) {\n                console.log(response);\n                Alert.info(intl.formatMessage({\n                    defaultMessage: 'Something went wrong while deleting the Subscription!',\n                    id: 'Apis.Details.Credentials.Credentials.something.went.wrong.with.subscription',\n                }));\n                return;\n            }\n            if (updateSubscriptionData) updateSubscriptionData(this.updateData);\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { intl } = this.props;\n        const {\n            api, updateSubscriptionData, applicationsAvailable, subscribedApplications,\n        } = this.context;\n        const {\n            selectedKeyType,\n            selectedAppId,\n            subscriptionRequest,\n            throttlingPolicyList,\n            applicationOwner,\n            hashEnabled,\n            isSubscribing,\n        } = this.state;\n        const user = AuthManager.getUser();\n        const isOnlyMutualSSL = api.securityScheme.includes('mutualssl') && !api.securityScheme.includes('oauth2')\n        && !api.securityScheme.includes('api_key') && !api.securityScheme.includes('basic_auth');\n        const isOnlyBasicAuth = api.securityScheme.includes('basic_auth') && !api.securityScheme.includes('oauth2')\n         && !api.securityScheme.includes('api_key');\n        const isSetAllorResidentKeyManagers = (api.keyManagers && api.keyManagers.includes('all'))\n            || (api.keyManagers && api.keyManagers.includes('Resident Key Manager'));\n        const renderCredentialInfo = () => {\n            if (isOnlyMutualSSL || isOnlyBasicAuth) {\n                return (\n                    <InlineMessage type='info' className={classes.dialogContainer}>\n                        <Typography component='p'>\n                            <FormattedMessage\n                                id='Apis.Details.Creadentials.credetials.mutualssl'\n                                defaultMessage={'Subscription is not required for Mutual SSL APIs'\n                                        + ' or APIs with only Basic Authentication.'}\n                            />\n                        </Typography>\n                    </InlineMessage>\n                );\n            } else if (applicationsAvailable.length === 0 && subscribedApplications.length === 0) {\n                return (\n                    <GenericDisplayDialog\n                        classes={classes}\n                        handleClick={this.goToWizard}\n                        heading={user ? intl.formatMessage({\n                            defaultMessage: 'Subscribe',\n                            id: 'Apis.Details.Credentials.Credentials.subscribe.to.application',\n                        })\n                            : intl.formatMessage({\n                                defaultMessage: 'Sign In to Subscribe',\n                                id: 'Apis.Details.Credentials.Credentials.subscribe.to.application.sign.in',\n                            })}\n                        caption={intl.formatMessage({\n                            defaultMessage: 'You need to subscribe to an application to access this API',\n                            id:\n                            'Apis.Details.Credentials.Credentials.subscribe.to.application.msg',\n                        })}\n                        buttonText={intl.formatMessage({\n                            defaultMessage: 'Subscribe',\n                            id: 'Apis.Details.Credentials.Credentials.generate',\n                        })}\n                    />\n                );\n            } else {\n                return (\n                    <>\n                        <div className={classes.generateCredentialWrapper}>\n                            <ScopeValidation\n                                resourcePath={resourcePaths.SUBSCRIPTIONS}\n                                resourceMethod={resourceMethods.POST}\n                            >\n                                <Typography variant='h5' component='h2'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Credentials.'\n                                        + 'subscribe.to.application'}\n                                        defaultMessage='Subscribe'\n                                    />\n                                </Typography>\n                                <div className={classes.credentialBoxWrapper}>\n                                    {applicationsAvailable.length === 0 && (\n                                        <div className={classes.credentialBox}>\n                                            <Typography variant='body2'>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.Credentials.'\n                                                    + 'api.credentials.with.wizard.message'}\n                                                    defaultMessage={\n                                                        'Use the Subscription and Key Generation Wizard. '\n                                                        + 'Create a new application -> '\n                                                        + 'Subscribe -> Generate keys and '\n                                                        + 'Access Token to invoke this API.'\n                                                    }\n                                                />\n                                            </Typography>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                className={classes.buttonElm}\n                                                to={(isOnlyMutualSSL || isOnlyBasicAuth\n                                                    || !isSetAllorResidentKeyManagers) ? null\n                                                    : `/apis/${api.id}/credentials/wizard`}\n                                                component={RouterLink}\n                                                disabled={!api.isSubscriptionAvailable || isOnlyMutualSSL\n                                                    || isOnlyBasicAuth || !isSetAllorResidentKeyManagers}\n                                            >\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.'\n                                                    + 'SubscibeButtonPanel.subscribe.wizard.with.new.app'}\n                                                    defaultMessage='Subscription & Key Generation Wizard'\n                                                />\n                                            </Button>\n                                        </div>\n                                    ) }\n                                    {applicationsAvailable.length > 0 && (\n                                        <div className={classes.credentialBox}>\n                                            <Typography variant='body2'>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.Credentials'\n                                                    + '.api.credentials.with.subscribe.message'}\n                                                    defaultMessage={'Subscribe to an application'\n                                                    + ' and generate credentials'}\n                                                />\n                                            </Typography>\n                                            <SubscribeToApi\n                                                applicationsAvailable={applicationsAvailable}\n                                                subscriptionRequest={subscriptionRequest}\n                                                throttlingPolicyList={throttlingPolicyList}\n                                                updateSubscriptionRequest={this.updateSubscriptionRequest}\n                                                renderSmall\n                                            />\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                className={classes.buttonElm}\n                                                onClick={() => this.handleSubscribe()}\n                                                disabled={!api.isSubscriptionAvailable || isSubscribing}\n                                                id='subscribe-to-api-btn'\n                                            >\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.'\n                                                    + 'SubscibeButtonPanel.subscribe.btn'}\n                                                    defaultMessage='Subscribe'\n                                                />\n                                                {isSubscribing && <CircularProgress size={24} />}\n                                            </Button>\n                                        </div>\n                                    )}\n                                </div>\n                            </ScopeValidation>\n                        </div>\n                        {/*\n                                    ****************************\n                                    Subscription List\n                                    ***************************\n                                    */}\n                        {subscribedApplications && subscribedApplications.length > 0 && (\n                            <>\n                                <Typography variant='h5' component='h2' className={classes.subsListTitle}>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Credentials.'\n                                        + 'api.credentials.subscribed.apps.title'}\n                                        defaultMessage='Subscriptions'\n                                    />\n                                </Typography>\n                                <Typography variant='body2' className={classes.subsListDesc}>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Credentials.'\n                                        + 'api.credentials.subscribed.apps.description'}\n                                        defaultMessage='( Applications Subscribed to this Api )'\n                                    />\n                                </Typography>\n                                <div className={classes.tableMain}>\n                                    <table id='subscription-table'>\n                                        <tr>\n                                            <th className={classes.th}>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.Credentials.'\n                                                    + 'api.credentials.subscribed.apps.name'}\n                                                    defaultMessage='Application Name'\n                                                />\n                                            </th>\n                                            <th className={classes.th}>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.Credentials.api.'\n                                                    + 'credentials.subscribed.apps.tier'}\n                                                    defaultMessage='Throttling Tier'\n                                                />\n                                            </th>\n                                            <th className={classes.th}>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.Credentials.'\n                                                    + 'api.credentials.subscribed.apps.status'}\n                                                    defaultMessage='Application Status'\n                                                />\n                                            </th>\n                                            <th className={classes.th}>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Credentials.Credentials.'\n                                                    + 'api.credentials.subscribed.apps.action'}\n                                                    defaultMessage='Actions'\n                                                />\n                                            </th>\n                                        </tr>\n                                        {subscribedApplications.map((app, index) => (\n                                            <SubscriptionTableRow\n                                                key={app.id}\n                                                loadInfo={this.loadInfo}\n                                                isKeyManagerAllowed={this.isKeyManagerAllowed}\n                                                handleSubscriptionDelete={this.handleSubscriptionDelete}\n                                                selectedAppId={selectedAppId}\n                                                updateSubscriptionData={updateSubscriptionData}\n                                                selectedKeyType={selectedKeyType}\n                                                app={app}\n                                                index={index}\n                                                applicationOwner={applicationOwner}\n                                                hashEnabled={hashEnabled}\n                                            />\n                                        ))}\n                                    </table>\n                                </div>\n                            </>\n                        )}\n                    </>\n                );\n            }\n        };\n        return (\n            <StyledGrid container>\n                <Grid item md={12} lg={11}>\n                    <Grid container spacing={2}>\n                        <Grid item md={12}>\n                            {api.advertiseInfo && api.advertiseInfo.advertised\n                                && api.advertiseInfo.originalDevPortalUrl && (\n                                <OriginalDevportalDetails\n                                    classes={classes}\n                                    originalDevPortalUrl={api.advertiseInfo.originalDevPortalUrl}\n                                />\n                            )}\n                            {api.tiers.length > 0 ? (\n                                <>\n                                    <Typography\n                                        onClick={this.handleExpandClick}\n                                        variant='h4'\n                                        component='div'\n                                        className={classes.titleSub}\n                                    >\n                                        {applicationsAvailable.length > 0 && (\n                                            <Link\n                                                to={(isOnlyMutualSSL || isOnlyBasicAuth\n                                                    || !isSetAllorResidentKeyManagers) ? null\n                                                    : `/apis/${api.id}/credentials/wizard`}\n                                                style={!api.isSubscriptionAvailable\n                                                    ? { pointerEvents: 'none' } : null}\n                                                className={classes.addLinkWrapper}\n                                                component={RouterLink}\n                                                underline='hover'\n                                            >\n                                                <Button\n                                                    color='secondary'\n                                                    disabled={!api.isSubscriptionAvailable || isOnlyMutualSSL\n                                                    || isOnlyBasicAuth\n                                                    || !isSetAllorResidentKeyManagers}\n                                                    size='small'\n                                                    id='start-key-gen-wizard-btn'\n                                                >\n                                                    <Icon>add_circle_outline</Icon>\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Credentials.'\n                                                        + 'SubscibeButtonPanel.subscribe.wizard.with.new.app'}\n                                                        defaultMessage='Subscription & Key Generation Wizard'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        )}\n                                    </Typography>\n                                    <Paper elevation={0} className={classes.paper}>\n                                        <Typography variant='body2' className={classes.descWrapper}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Credentials.'\n                                                defaultMessage={`An application is primarily used to decouple the \n                                                consumer from the APIs. It allows you to generate and use a single \n                                                key for multiple APIs and subscribe multiple times to a single API \n                                                with different SLA levels.`}\n                                            />\n                                        </Typography>\n                                        {renderCredentialInfo()}\n                                    </Paper>\n                                </>\n                            ) : (\n                                <Paper elevation={0} className={classes.paper}>\n                                    <InlineMessage type='info' className={classes.dialogContainer}>\n                                        <Typography component='p' data-testid='itest-no-tier-dialog'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Creadentials.credetials.no.tiers'\n                                                defaultMessage='No tiers are available for the API.'\n                                            />\n                                        </Typography>\n                                    </InlineMessage>\n                                </Paper>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </StyledGrid>\n        );\n    }\n}\n\nCredentials.propTypes = {\n    classes: PropTypes.shape({\n        contentWrapper: PropTypes.string,\n        titleSub: PropTypes.string,\n        tableMain: PropTypes.string,\n        th: PropTypes.string,\n        paper: PropTypes.string,\n        descWrapper: PropTypes.string,\n        generateCredentialWrapper: PropTypes.string,\n        credentialBoxWrapper: PropTypes.string,\n        credentialBox: PropTypes.string,\n        buttonElm: PropTypes.string,\n        dialogContainer: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\nCredentials.contextType = ApiContext;\n\nexport default injectIntl((Credentials));\n"],"names":["PREFIX","classes","appContent","button","Root","styled","_ref","theme","margin","spacing","color","palette","getContrastText","primary","main","props","handleClick","heading","caption","buttonText","React","className","InlineMessage","type","dialogContainer","Typography","variant","component","gutterBottom","ScopeValidation","resourcePath","resourcePaths","APPLICATIONS","resourceMethod","resourceMethods","POST","Button","onClick","id","originalDevPortalUrl","Paper","elevation","paper","FormattedMessage","defaultMessage","Link","target","rel","href","underline","originalDevPortalLink","LaunchIcon","launchIcon","subscriptionTableRow","loadInfo","handleSubscriptionDelete","isKeyManagerAllowed","selectedAppId","updateSubscriptionData","selectedKeyType","app","applicationOwner","hashEnabled","useTheme","label","policy","status","Box","sx","display","textAlign","direction","MUILink","themeValue","padding","background","default","alignItems","fontSize","cursor","paddingLeft","to","value","CustomIcon","width","height","strokeColor","icon","SINGLE_SUBSCRIPTION","DELETE","e","preventDefault","subscriptionId","colSpan","borderLeft","TokenManager","keyType","selectedApp","appId","owner","propTypes","PropTypes","td","actionColumn","activeLink","selectedWrapper","isRequired","contentWrapper","titleSub","generateCredentialWrapper","tableMain","expansion","summary","subscribeRoot","appBar","toolbar","subscribeTitle","descWrapper","credentialBoxWrapper","credentialBox","addLinkWrapper","subsListTitle","subsListDesc","buttonElm","StyledGrid","Grid","maxWidth","custom","contentAreaWidth","paddingTop","marginLeft","paddingBottom","borderCollapse","marginTop","marginRight","backgroundColor","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","borderBottom","grey","A400","borderTop","boxShadow","A300","flex","marginBottom","border","borderRadius","Credentials","constructor","super","_defineProperty","api","applicationsAvailable","this","context","subscriptionRequest","state","newSubscriptionRequest","_objectSpread","apiId","throttlingPolicyList","tiers","sort","a","b","tierPlan","tierName","localeCompare","throttlingPolicy","applicationId","setState","expanded","apiType","intl","Api","isSubscribing","subscribe","then","response","body","Alert","info","formatMessage","console","log","updateData","catch","error","history","push","Application","get","result","name","keyManagers","includes","Subscription","deleteSubscription","componentDidMount","render","subscribedApplications","user","AuthManager","getUser","isOnlyMutualSSL","securityScheme","isOnlyBasicAuth","isSetAllorResidentKeyManagers","container","item","md","lg","advertiseInfo","advertised","OriginalDevportalDetails","length","handleExpandClick","style","isSubscriptionAvailable","pointerEvents","RouterLink","disabled","size","Icon","renderCredentialInfo","GenericDisplayDialog","goToWizard","SUBSCRIPTIONS","SubscribeToApi","updateSubscriptionRequest","renderSmall","handleSubscribe","CircularProgress","th","map","index","SubscriptionTableRow","key","contextType","ApiContext","injectIntl"],"sourceRoot":""}