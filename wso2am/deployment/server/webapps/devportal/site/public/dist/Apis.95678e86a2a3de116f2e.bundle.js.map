{"version":3,"file":"Apis.95678e86a2a3de116f2e.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/DocThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICards/DefThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Base/Errors/SubscriptionNotFound.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/SolaceApi/SolaceTopicsInfo.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Breadcrumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/index.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatIcon.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatInput.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatMessage.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/Loader.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatMessages.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/Header.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/SimilaritySearch.js","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/ChatWindow.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Chat/AISearchAssistant.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Apis.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/withSettingsContext.jsx"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@mui/material/Paper';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@mui/material/Icon';\n\nconst PREFIX = 'ApiBreadcrumbs';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    link: `${PREFIX}-link`,\n    linkNotActive: `${PREFIX}-linkNotActive`,\n    icon: `${PREFIX}-icon`,\n    selectedTagText: `${PREFIX}-selectedTagText`,\n    apiGroup: `${PREFIX}-apiGroup`,\n};\n\nconst StyledPaper = styled(Paper)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        padding: theme.spacing(1, 3),\n    },\n\n    [`& .${classes.link}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.linkNotActive}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n\n    [`& .${classes.icon}`]: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n\n    [`& .${classes.selectedTagText}`]: {\n        textIndent: 4,\n    },\n\n    [`& .${classes.apiGroup}`]: {\n        color: theme.palette.grey[800],\n    },\n}));\n\n/**\n * Render no api breadcrumb section.\n * @param {JSON} props properties passed down from the parent.\n * @returns {JSX} Api breadcrumb section.\n */\nexport default function ApiBreadcrumbs(props) {\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <StyledPaper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link} underline='hover'>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && (\n                    <Link color='inherit' className={classes.linkNotActive} underline='hover'>\n                        <CustomIcon width={16} height={16} icon='api' />\n                        <span className={classes.selectedTagText}>{selectedTag}</span>\n                    </Link>\n                )}\n            </Breadcrumbs>\n        </StyledPaper>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { FormattedMessage } from 'react-intl';\nimport ImageGenerator from './ImageGenerator';\n\nconst PREFIX = 'DocThumbLegacy';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    media: `${PREFIX}-media`,\n    content: `${PREFIX}-content`,\n    actions: `${PREFIX}-actions`,\n    header: `${PREFIX}-header`,\n    info: `${PREFIX}-info`,\n    apiName: `${PREFIX}-apiName`,\n    version: `${PREFIX}-version`,\n    subtitle: `${PREFIX}-subtitle`,\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        width: theme.custom.thumbnail.width,\n        backgroundColor: '#f5f5f5',\n        minHeight: 330,\n        margin: theme.spacing(2),\n        cursor: 'pointer',\n        transition: 'background-color 0.3s ease',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n    },\n    [`& .${classes.media}`]: {\n        height: 200,\n    },\n    [`& .${classes.content}`]: {\n        paddingBottom: theme.spacing(1),\n    },\n    [`& .${classes.actions}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: theme.spacing(1),\n    },\n    [`& .${classes.header}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    [`& .${classes.info}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    [`& .${classes.apiName}`]: {\n        flex: 1,\n    },\n    [`& .${classes.version}`]: {\n        flex: 1,\n        textAlign: 'right',\n    },\n    [`& .${classes.subtitle}`]: {\n        color: theme.palette.grey[600],\n        fontSize: '0.75rem',\n    },\n}));\n\nconst DocThumbLegacy = ({ doc }) => {\n    const [state] = useState({\n        category: null,\n        selectedIcon: null,\n        color: null,\n        backgroundIndex: null,\n        imageObj: null,\n    });\n\n    const theme = useTheme();\n    const history = useHistory();\n    const detailsLink = `/apis/${doc.apiUUID}/documents/${doc.id}/details`;\n    const {\n        category, selectedIcon, color, backgroundIndex,\n    } = state;\n    const {\n        name, sourceType, apiName, apiVersion,\n    } = doc;\n\n    useEffect(() => {\n        return () => {\n            if (state.imageObj) {\n                window.URL.revokeObjectURL(state.imageObj);\n            }\n        };\n    }, [state.imageObj]);\n\n    const handleCardClick = () => {\n        history.push(detailsLink);\n    };\n\n    return (\n        <StyledCard className={classes.root} onClick={handleCardClick}>\n            {theme.custom.thumbnail.defaultApiImage ? (\n                <CardMedia\n                    className={classes.media}\n                    image={theme.custom.thumbnail.defaultApiImage}\n                    title='Document Image'\n                />\n            ) : (\n                <ImageGenerator\n                    width={theme.custom.thumbnail.width}\n                    height={140}\n                    api={doc}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        doc,\n                    }}\n                />\n            )}\n            <CardContent className={classes.content}>\n                <Typography\n                    variant='h5'\n                    component='div'\n                    className={classes.header}\n                    title={name}\n                >\n                    {name}\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage defaultMessage='Source Type: ' id='Apis.Listing.DocThumb.sourceType' />\n                    {sourceType}\n                </Typography>\n                <div className={classes.info}>\n                    <Typography variant='subtitle1' className={classes.apiName}>\n                        {apiName}\n                    </Typography>\n                    <Typography variant='subtitle1' className={classes.version}>\n                        {apiVersion}\n                    </Typography>\n                </div>\n                <div className={classes.info}>\n                    <Typography className={classes.subtitle}>\n                        <FormattedMessage defaultMessage='API Name' id='Apis.Listing.DocThumb.apiName' />\n                    </Typography>\n                    <Typography className={classes.subtitle} style={{ textAlign: 'right' }}>\n                        <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                    </Typography>\n                </div>\n            </CardContent>\n        </StyledCard>\n    );\n};\n\nDocThumbLegacy.propTypes = {\n    doc: PropTypes.shape({\n        name: PropTypes.string,\n        sourceType: PropTypes.string,\n        apiName: PropTypes.string,\n        apiVersion: PropTypes.string,\n        id: PropTypes.string,\n        apiUUID: PropTypes.string,\n    }).isRequired,\n};\n\nexport default DocThumbLegacy;\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { FormattedMessage } from 'react-intl';\nimport ImageGenerator from './ImageGenerator';\n\nconst PREFIX = 'DefinitionThumb';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    media: `${PREFIX}-media`,\n    content: `${PREFIX}-content`,\n    actions: `${PREFIX}-actions`,\n    header: `${PREFIX}-header`,\n    info: `${PREFIX}-info`,\n    apiName: `${PREFIX}-apiName`,\n    version: `${PREFIX}-version`,\n    subtitle: `${PREFIX}-subtitle`,\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        width: theme.custom.thumbnail.width,\n        backgroundColor: '#f5f5f5',\n        minHeight: 330,\n        margin: theme.spacing(2),\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'background-color 0.3s ease',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n    },\n    [`& .${classes.media}`]: {\n        height: 200,\n    },\n    [`& .${classes.content}`]: {\n        flexGrow: 1,\n        paddingBottom: theme.spacing(1),\n    },\n    [`& .${classes.actions}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: theme.spacing(1),\n    },\n    [`& .${classes.header}`]: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n    },\n    [`& .${classes.info}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    [`& .${classes.apiName}`]: {\n        flex: 1,\n    },\n    [`& .${classes.version}`]: {\n        flex: 1,\n        textAlign: 'right',\n    },\n    [`& .${classes.subtitle}`]: {\n        color: theme.palette.grey[600],\n        fontSize: '0.75rem',\n    },\n}));\n\nconst DefinitionThumb = ({ def }) => {\n    const [state] = useState({\n        category: null,\n        selectedIcon: null,\n        color: null,\n        backgroundIndex: null,\n        imageObj: null,\n    });\n\n    const theme = useTheme();\n    const history = useHistory();\n    const detailsLink = `/apis/${def.apiUUID}/overview`;\n    const {\n        name, apiName, apiVersion,\n    } = def;\n    const {\n        category, selectedIcon, color, backgroundIndex,\n    } = state;\n\n    useEffect(() => {\n        return () => {\n            if (state.imageObj) {\n                window.URL.revokeObjectURL(state.imageObj);\n            }\n        };\n    }, [state.imageObj]);\n\n    const handleCardClick = () => {\n        history.push(detailsLink);\n    };\n\n    return (\n        <StyledCard className={classes.root} onClick={handleCardClick}>\n            {theme.custom.thumbnail.defaultApiImage ? (\n                <CardMedia\n                    className={classes.media}\n                    image={theme.custom.thumbnail.defaultApiImage}\n                    title='API Definition Image'\n                />\n            ) : (\n                <ImageGenerator\n                    width={theme.custom.thumbnail.width}\n                    height={140}\n                    api={def}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        def,\n                    }}\n                />\n            )}\n            <CardContent className={classes.content}>\n                <Typography\n                    variant='h5'\n                    component='div'\n                    className={classes.header}\n                    title={name}\n                >\n                    {name}\n                </Typography>\n                <div className={classes.info}>\n                    <Typography variant='subtitle1' className={classes.apiName}>\n                        {apiName}\n                    </Typography>\n                    <Typography variant='subtitle1' className={classes.version}>\n                        {apiVersion}\n                    </Typography>\n                </div>\n                <div className={classes.info}>\n                    <Typography className={classes.subtitle}>\n                        <FormattedMessage defaultMessage='API Name' id='Apis.Listing.DefThumb.apiName' />\n                    </Typography>\n                    <Typography className={classes.subtitle} style={{ textAlign: 'right' }}>\n                        <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DefThumb.apiVersion' />\n                    </Typography>\n                </div>\n            </CardContent>\n        </StyledCard>\n    );\n};\n\nDefinitionThumb.propTypes = {\n    def: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiName: PropTypes.string,\n        apiVersion: PropTypes.string,\n        apiContext: PropTypes.string,\n        apiUUID: PropTypes.string,\n        apiProvider: PropTypes.string,\n        apiType: PropTypes.string,\n    }).isRequired,\n};\n\nexport default DefinitionThumb;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    styled,\n    createTheme,\n    ThemeProvider,\n    StyledEngineProvider,\n    adaptV4Theme,\n} from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport Typography from '@mui/material/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@mui/material/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from 'AppData/defaultTheme';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './APICards/DocThumb';\nimport DefinitionThumb from './APICards/DefThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst PREFIX = 'ApiTableViewLegacy';\n\nconst classes = {\n    apiNameLink: `${PREFIX}-apiNameLink`,\n};\n\nconst StyledStyledEngineProvider = styled(StyledEngineProvider)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.apiNameLink}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n}));\n\n/**\n * Table view for api listing\n *\n * @class ApiTableViewLegacy\n * @extends {React.Component}\n */\nclass ApiTableViewLegacy extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableViewLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    /**\n     * Component mount call back\n     * @returns {void}\n     */\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    /**\n     * Component update call back\n     * @param {JSON} prevProps properties from previous state of the component\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        const muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n\n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    },\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        },\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, { custom: cloneDeep(theme.custom) });\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createTheme(adaptV4Theme(dataTableTheme));\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch(() => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableViewLegacy\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                } else if (artifact.type === 'DEFINITION') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + apiId + '/overview'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>code</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.def.flag'\n                                                    defaultMessage='[Def] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9] && tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage='(Business Owner)'\n                                                id='Apis.Listing.ApiTableView.business.owner.caption'\n                                            />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        {value\n                                        && (\n                                            <>\n                                                <div>{value}</div>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                        defaultMessage='(Provider)'\n                                                        id='Apis.Listing.ApiTableView.provider.caption'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                    </>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC' && artifact.type !== 'DEFINITION') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page: pageInner, count: countInner } = this;\n                if (pageInner * numberOfRows > countInner) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n                toolbar: {\n                    downloadCsv: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.download.csv',\n                        defaultMessage: 'Download CSV',\n                    }),\n                    print: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.print',\n                        defaultMessage: 'Print',\n                    }),\n                    viewColumns: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.view.columns',\n                        defaultMessage: 'View Columns',\n                    }),\n                },\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (_data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else if (artifact.type === 'DEFINITION') {\n                        return <tr key={rowIndex}><td><DefinitionThumb def={artifact} /></td></tr>;\n                    } else {\n                        return (\n                            <tr key={rowIndex}>\n                                <td>\n                                    <ApiThumb\n                                        api={artifact}\n                                        customHeight={theme.custom.thumbnail.height}\n                                        customWidth={theme.custom.thumbnail.width}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <StyledStyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.getMuiTheme()}>\n                    <MUIDataTable title='' data={data} columns={columns} options={options} />\n                </ThemeProvider>\n            </StyledStyledEngineProvider>\n        );\n    }\n}\n\nApiTableViewLegacy.contextType = ApiContext;\n\nfunction ApiTableView(props) {\n    const {\n        query, selectedTag, gridView, intl, setTenantDomain,\n    } = props;\n    const theme = useTheme();\n    return (\n        <ApiTableViewLegacy\n            query={query}\n            selectedTag={selectedTag}\n            gridView={gridView}\n            intl={intl}\n            setTenantDomain={setTenantDomain}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl(ApiTableView));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport classNames from 'classnames';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PREFIX = 'APICategoryThumb';\n\nconst classes = {\n    textWrapper: `${PREFIX}-textWrapper`,\n    listItemText: `${PREFIX}-listItemText`,\n};\n\nconst StyledLink = styled(Link)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.listItemText}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\n/**\n * Get APICategoryThumb\n * @param {JSON} props properties\n * @returns {JSX} category link\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    let categoryDesc = category.description;\n    if (categoryDesc.length > 50) {\n        categoryDesc = categoryDesc.substring(0, 50) + '...';\n    }\n    return (\n        <StyledLink to={categoryLink} className={classes.textWrapper}>\n            <Tooltip placement='right' title={category.description.length <= 50 ? '' : category.description}>\n                <ListItem button alignItems='flex-start'>\n                    <ListItemIcon className='category-listing-icon'>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={category.name}\n                        secondary={categoryDesc}\n                        classes={{\n                            primary: classNames(classes.listItemText, 'category-listing-primary'),\n                            secondary: 'category-listing-secondary',\n                        }}\n                    />\n                </ListItem>\n            </Tooltip>\n        </StyledLink>\n    );\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    category: PropTypes.shape({}).isRequired,\n    path: PropTypes.shape({}).isRequired,\n};\n\nexport default (APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst PREFIX = 'CategoryListingCategories';\n\nconst classes = {\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    tagWiseThumbWrapper: `${PREFIX}-tagWiseThumbWrapper`,\n    filterTitle: `${PREFIX}-filterTitle`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.mainTitle}`]: {\n        paddingTop: 0,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.tagWiseThumbWrapper}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                style,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <Root className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-cat-title')}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders' className='category-listing-categories'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </Root>\n        )\n    ) : (\n        <Root className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </Root>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n    allCategories: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst PREFIX = 'ApiTagCloud';\n\nconst classes = {\n    clickablePointer: `${PREFIX}-clickablePointer`,\n    filterTitle: `${PREFIX}-filterTitle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.clickablePointer}`]: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n\n    '& .tag-cloud-tag': {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        display: 'inline-block',\n        maxWidth: '-webkit-fill-available',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {JSON} props @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remove the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter((item) => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <Root>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={(tag) => handleOnClick(tag)}\n                />\n            </Root>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Chip from '@mui/material/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport classNames from 'classnames';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst PREFIX = 'RecommendedApiThumbLegacy';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    apiDetails: `${PREFIX}-apiDetails`,\n    suppressLinkStyles: `${PREFIX}-suppressLinkStyles`,\n    row: `${PREFIX}-row`,\n    thumbBy: `${PREFIX}-thumbBy`,\n    media: `${PREFIX}-media`,\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n    chipWrapper: `${PREFIX}-chipWrapper`,\n    ratingWrapper: `${PREFIX}-ratingWrapper`,\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.card}`]: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n\n    [`& .${classes.apiDetails}`]: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n\n    [`& .${classes.suppressLinkStyles}`]: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'inline-block',\n    },\n\n    [`& .${classes.thumbBy}`]: {\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.media}`]: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        alignSelf: 'flex-end',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n\n    [`& .${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n    },\n\n    [`& .${classes.chipWrapper}`]: {\n        marginTop: '15px',\n    },\n\n    [`& .${classes.ratingWrapper}`]: {\n        marginTop: '20px',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumbLegacy\n * @extends {Component}\n */\nclass RecommendedApiThumbLegacy extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumbLegacy.\n     * @param {*} props\n     * @memberof RecommendedApiThumbLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumbLegacy\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumbLegacy\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumbLegacy\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumbLegacy\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name } = api;\n\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <StyledCard\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </StyledCard>\n        );\n    }\n}\nRecommendedApiThumbLegacy.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumbLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumbLegacy.contextType = ApiContext;\n\nfunction RecommendedApiThumb(props) {\n    const { api } = props;\n    const theme = useTheme();\n    return (\n        <RecommendedApiThumbLegacy\n            api={api}\n            theme={theme}\n        />\n    );\n}\n\nexport default (RecommendedApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport {\n    styled,\n    createTheme,\n    ThemeProvider,\n    StyledEngineProvider,\n    adaptV4Theme,\n} from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { useTheme } from '@mui/material';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst PREFIX = 'RecommendationsLegacy';\n\nconst classes = {\n    rowImageOverride: `${PREFIX}-rowImageOverride`,\n    apiNameLink: `${PREFIX}-apiNameLink`,\n};\n\nconst StyledStyledEngineProvider = styled(StyledEngineProvider)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.rowImageOverride}`]: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n\n    [`& .${classes.apiNameLink}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n}));\n\n/**\n * Table view for api listing\n *\n * @class RecommendationsLegacy\n * @extends {React.Component}\n */\nclass RecommendationsLegacy extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof RecommendationsLegacy\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    /**\n     * @memberof RecommendationsLegacy\n    */\n    componentDidMount() {\n        this.getData();\n    }\n\n    /**\n     * @memberof RecommendationsLegacy\n     * @param {JSON} prevProps previous props\n    */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createTheme(adaptV4Theme(muiTheme));\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof RecommendationsLegacy\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                } else {\n                                    return (<span />);\n                                }\n                            } else {\n                                return (<span />);\n                            }\n                        } else {\n                            return (<span />);\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            // eslint-disable-next-line no-shadow\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <StyledStyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.getMuiTheme()}>\n                    <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n                </ThemeProvider>\n            </StyledStyledEngineProvider>\n        );\n    }\n}\n\nRecommendationsLegacy.contextType = ApiContext;\n\nfunction Recommendations(props) {\n    const {\n        query, selectedTag, gridView, intl, setTenantDomain,\n    } = props;\n    const theme = useTheme();\n    return (\n        <RecommendationsLegacy\n            query={query}\n            selectedTag={selectedTag}\n            gridView={gridView}\n            intl={intl}\n            setTenantDomain={setTenantDomain}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl(Recommendations));\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport { useTheme } from '@mui/material';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst PREFIX = 'CommonListingLegacy';\n\nconst classes = {\n    rightIcon: `${PREFIX}-rightIcon`,\n    button: `${PREFIX}-button`,\n    buttonRight: `${PREFIX}-buttonRight`,\n    ListingWrapper: `${PREFIX}-ListingWrapper`,\n    appBar: `${PREFIX}-appBar`,\n    mainIconWrapper: `${PREFIX}-mainIconWrapper`,\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    iconDefault: `${PREFIX}-iconDefault`,\n    iconSelected: `${PREFIX}-iconSelected`,\n    content: `${PREFIX}-content`,\n    contentWithTags: `${PREFIX}-contentWithTags`,\n    contentWithoutTags: `${PREFIX}-contentWithoutTags`,\n    contentWithTagsHidden: `${PREFIX}-contentWithTagsHidden`,\n    LeftMenu: `${PREFIX}-LeftMenu`,\n    LeftMenuForSlider: `${PREFIX}-LeftMenuForSlider`,\n    sliderButton: `${PREFIX}-sliderButton`,\n    rotatedText: `${PREFIX}-rotatedText`,\n    recommendationsBar: `${PREFIX}-recommendationsBar`,\n    apiListingWrapper: `${PREFIX}-apiListingWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.rightIcon}`]: {\n        marginLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.button}`]: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n\n    [`& .${classes.buttonRight}`]: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n\n    [`& .${classes.ListingWrapper}`]: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n\n    [`& .${classes.appBar}`]: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.mainIconWrapper}`]: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n        display: 'flex',\n        marginLeft: -40,\n    },\n\n    [`& .${classes.iconDefault}`]: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n\n    [`& .${classes.iconSelected}`]: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n\n    [`& .${classes.content}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n\n    [`& .${classes.contentWithTags}`]: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n\n    [`& .${classes.contentWithoutTags}`]: {\n        marginLeft: -4,\n    },\n\n    [`& .${classes.contentWithTagsHidden}`]: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n\n    [`& .${classes.LeftMenu}`]: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n\n    [`& .${classes.LeftMenuForSlider}`]: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n\n    [`& .${classes.sliderButton}`]: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.rotatedText}`]: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.recommendationsBar}`]: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`&.${classes.apiListingWrapper}`]: {\n        width: '100%',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CommonListingLegacy\n * @extends {Component}\n */\nclass CommonListingLegacy extends React.Component {\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListingLegacy\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const tagsLimit = -1;\n        const promisedTags = restApiClient.getAllTags(tagsLimit);\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n        promisedCategories\n            .then((response) => {\n                this.setState({ allCategories: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListingLegacy\n     */\n     setListType = (value) => {\n         localStorage.setItem('portal.listType', value);\n         this.setState({ listType: value });\n     };\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListingLegacy\n     */\n    render() {\n        const {\n            theme,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled,\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) !== -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <Root className={classNames(classes.apiListingWrapper, 'api-listing-wrapper')}>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classNames(classes.LeftMenu, 'api-listing-left-menu')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classNames(classes.LeftMenuForSlider, 'api-listing-left-menu-hidden')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div\n                            className={classNames(classes.rotatedText, 'api-listing-title-section-hidden')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <FormattedMessage\n                                defaultMessage='Tags / API Categories'\n                                id='Apis.Listing.Listing.ApiTagCloud.title'\n                            />\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                        'content-section',\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classNames(classes.mainIconWrapper, 'main-icon-wrapper')}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (\n                            <div className={classes.buttonRight} id='listGridWrapper'>\n                                <IconButton\n                                    aria-label='Change to list view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('list')}\n                                    disabled={listType === 'list'}\n                                    size='large'\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'list' },\n                                            { [classes.iconDefault]: listType === 'grid' },\n                                        )}\n                                    >\n                                        list\n                                    </Icon>\n                                </IconButton>\n                                <IconButton\n                                    aria-label='Change to grid view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('grid')}\n                                    disabled={listType === 'grid'}\n                                    size='large'\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'grid' },\n                                            { [classes.iconDefault]: listType === 'list' },\n                                        )}\n                                    >\n                                        grid_on\n                                    </Icon>\n                                </IconButton>\n                            </div>\n                        )}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user\n                        && (\n                            <div>\n                                {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                                <div className={classes.listContentWrapper}>\n                                    {listType === 'grid' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                    {listType === 'list' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </Root>\n        );\n    }\n}\nCommonListingLegacy.contextType = Settings;\n\nCommonListingLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListingLegacy.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nfunction CommonListing(props) {\n    const theme = useTheme();\n    return (\n        <CommonListingLegacy\n            {...props}\n            theme={theme}\n        />\n    );\n}\n\nexport default (CommonListing);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@mui/material/Grid';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Image404 from './Custom404Image';\n\nconst SubscriptionNotFound = (props) => {\n    return (\n        <Container maxWidth='md'>\n            <Box padding={4}>\n                <Paper elevation={0}>\n                    <Box padding={4}>\n                        <Grid container alignItems='center' justifyContent='center' style={{ height: '100%' }}>\n                            <Grid item xs={12} md={6}>\n                                <Typography variant='h5' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.SubscriptionNotFound.default_title'\n                                        defaultMessage='Solace Info Page is not displayed without subscriptions to the API.\n                                        Please Subscribed to the API'\n                                    />\n                                </Typography>\n                                <Typography variant='subtitle1' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.ResourceNotfound.default_body'\n                                        defaultMessage='The page you are looking for is not available'\n                                    />\n                                    <span style={{ color: 'green' }}>\n                                        {' '}\n                                        {props.response ? props.response.statusText : ''}\n                                        {' '}\n                                    </span>\n                                </Typography>\n                                <Box py={5}>\n                                    <Box pb={2}>\n                                        <Typography variant='subtitle1'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.more.links'\n                                                defaultMessage='You may check the links below'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Link to='/apis/' style={{ marginRight: 8 }}>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.api.list'\n                                                defaultMessage='API List'\n                                            />\n                                        </Button>\n                                    </Link>\n                                    <Link to='/applications/'>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.applications'\n                                                defaultMessage='Applications'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                {/* Image */}\n                                <Image404 style={{ fontSize: 400, fill: '#ccc' }} />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default SubscriptionNotFound;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    Divider, Grid, TextField,\n    useTheme,\n} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport InputBase from '@mui/material/InputBase';\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\nimport Chip from '@mui/material/Chip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport API from 'AppData/api';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Button from '@mui/material/Button';\nimport SubscriptionNotFound from '../../../Base/Errors/SubscriptionNotFound';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\n\nfunction VerbElement(props) {\n    const {\n        verb,\n    } = props;\n    const theme = useTheme();\n    const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n\n    return (\n        <Button\n            disableFocusRipple\n            variant='outlined'\n            className={{\n                backgroundColor: '#ffffff',\n                borderColor: backgroundColor,\n                color: backgroundColor,\n                width: theme.spacing(2),\n            }}\n            size='small'\n        >\n            {verb.toUpperCase()}\n        </Button>\n    );\n}\n\nconst PREFIX = 'SolaceTopicsInfo';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    table: `${PREFIX}-table`,\n    centerItems: `${PREFIX}-centerItems`,\n    leftCol: `${PREFIX}-leftCol`,\n    iconAligner: `${PREFIX}-iconAligner`,\n    iconTextWrapper: `${PREFIX}-iconTextWrapper`,\n    iconEven: `${PREFIX}-iconEven`,\n    iconOdd: `${PREFIX}-iconOdd`,\n    heading: `${PREFIX}-heading`,\n    heading1: `${PREFIX}-heading1`,\n    emptyBox: `${PREFIX}-emptyBox`,\n    summaryRoot: `${PREFIX}-summaryRoot`,\n    actionPanel: `${PREFIX}-actionPanel`,\n    Paper: `${PREFIX}-Paper`,\n    Box2: `${PREFIX}-Box2`,\n    Box3: `${PREFIX}-Box3`,\n    list: `${PREFIX}-list`,\n    urlPaper: `${PREFIX}-urlPaper`,\n    input: `${PREFIX}-input`,\n    avatar: `${PREFIX}-avatar`,\n    iconStyle: `${PREFIX}-iconStyle`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        '& option': {\n            padding: '5px 0px 5px 0px',\n        },\n        background: theme.custom.infoBar.background,\n    },\n\n    [`& .${classes.table}`]: {\n        minWidth: '100%',\n    },\n\n    [`& .${classes.centerItems}`]: {\n        margin: 'auto',\n    },\n\n    [`& .${classes.leftCol}`]: {\n        width: 200,\n    },\n\n    [`& .${classes.iconAligner}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.iconTextWrapper}`]: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n\n    [`& .${classes.iconEven}`]: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n\n    [`& .${classes.iconOdd}`]: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n\n    [`& .${classes.heading}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.heading1}`]: {\n        marginRight: 20,\n    },\n\n    [`& .${classes.emptyBox}`]: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.summaryRoot}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.actionPanel}`]: {\n        justifyContent: 'flex-start',\n    },\n\n    [`& .${classes.Paper}`]: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n\n    [`& .${classes.Box2}`]: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n\n    [`& .${classes.Box3}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.list}`]: {\n        width: '100%',\n        maxWidth: 800,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 175,\n    },\n\n    [`& .${classes.urlPaper}`]: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n\n    [`& .${classes.input}`]: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n\n    [`& .${classes.avatar}`]: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n\n    [`& .${classes.iconStyle}`]: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n}));\n\nfunction SolaceTopicsInfo() {\n    const { apiUuid } = useParams();\n    const [application, setApplication] = useState(null);\n    const [environment, setEnvironment] = useState(null);\n    const [selectedProtocol, setSelectedProtocol] = useState(null);\n    const [envsListOfApplication, setEnvsListOfApplication] = useState(null);\n    const [selectedEndpoint, setSelectedEndpoint] = useState(null);\n    const [protocolsListOfEnvironments, setProtocolsListOfEnvironments] = useState(null);\n    const [topics, setTopics] = useState(null);\n    const [applicationList, setApplicationList] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [topicCopied, setTopicCopied] = useState(false);\n    const [apiTopics, setApiTopics] = useState(null);\n    const [apiPubTopics, setApiPubTopics] = useState(null);\n    const [apiSubTopics, setApiSubTopics] = useState(null);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const onTopicCopy = () => {\n        setTopicCopied(true);\n        const caller = function () {\n            setTopicCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    function setPubAndSubTopics(allTopics, allApiTopics) {\n        const apiPubTopicList = [];\n        allTopics.publishTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiPubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiPubTopics(apiPubTopicList);\n\n        const apiSubTopicList = [];\n        allTopics.subscribeTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiSubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiSubTopics(apiSubTopicList);\n    }\n\n    useEffect(() => {\n        const client = new API();\n\n        const promisedApi = client.getAllTopics(apiUuid);\n        const apiTopicList = [];\n        promisedApi\n            .then((response) => {\n                response.obj.list.map((entry) => {\n                    const parts = entry.name.split('{')[0];\n                    apiTopicList.push(parts);\n                    return null;\n                });\n                setApiTopics(apiTopicList);\n                return null;\n            });\n\n        const infoPromise = client.getSubscriptionAdditionalInfo(apiUuid);\n        infoPromise\n            .then((response) => {\n                setApplicationList(response.body.list);\n                // Get application\n                const appInner = response.body.list[0];\n                if (appInner != null) {\n                    setApplication(appInner.applicationName);\n                    if (appInner.solaceDeployedEnvironments !== null) {\n                        // Set default deployed environments of application\n                        setEnvsListOfApplication(appInner.solaceDeployedEnvironments);\n                        setEnvironment(appInner.solaceDeployedEnvironments[0]);\n                        // Set default protocols of deployed environment\n                        setProtocolsListOfEnvironments(appInner.solaceDeployedEnvironments[0].solaceURLs);\n                        setSelectedProtocol(appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol);\n                        setSelectedEndpoint(appInner.solaceDeployedEnvironments[0].solaceURLs[0].endpointURL);\n                        // Set default topics of deployed solace environment\n                        if (appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol === 'mqtt') {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax, apiTopicList);\n                        } else {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax, apiTopicList);\n                        }\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, [apiUuid]);\n\n    // Handle resource not found error\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    // Handle topic changes with protocol change\n    function setProtocolTopics(protocol, selectedEnv) {\n        if (protocol === 'mqtt') {\n            setTopics(selectedEnv.SolaceTopicsObject.mqttSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.mqttSyntax, apiTopics);\n        } else {\n            setTopics(selectedEnv.SolaceTopicsObject.defaultSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.defaultSyntax, apiTopics);\n        }\n    }\n    // Handle application selection change\n    const handleChangeApplication = (event) => {\n        setApplication(event.target.value);\n        let selectedApp;\n        applicationList.map((app) => {\n            if (app.applicationName === event.target.value) {\n                selectedApp = app;\n            }\n            return null;\n        });\n        const selectedEnv = selectedApp.solaceDeployedEnvironments[0];\n        setEnvsListOfApplication(selectedApp.solaceDeployedEnvironments);\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle environment selection change\n    const handleChangeEnvironment = (event) => {\n        setEnvironment(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === event.target.value) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        setProtocolsListOfEnvironments(selectedEnv.solaceURLs);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle protocol selection change\n    const handleChangeProtocol = (event) => {\n        setSelectedProtocol(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === environment.environmentDisplayName) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        let protocol;\n        protocolsListOfEnvironments.map((e) => {\n            if (e.protocol === event.target.value) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n\n    if (!applicationList) {\n        return <Loading />;\n    }\n\n    return (\n        <Root>\n            { !application && <SubscriptionNotFound /> }\n            { environment && topics && apiTopics && applicationList && (\n                <div className={classes.root}>\n                    <Typography id='itest-api-details-bushiness-plans-head' variant='h5'>\n                        <FormattedMessage\n                            id='solace.application.available.topics.heading'\n                            defaultMessage='Available Topics'\n                        />\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='solace.application.available.topics.subheading'\n                            defaultMessage='Topics permitted to access from solace applications'\n                        />\n                    </Typography>\n                    <Box mt={2} />\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeApplication}\n                                value={application}\n                                variant='outlined'\n                                label='Application'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Subscribed applications'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.subscribed.\n                                                    application'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {applicationList.map((e) => (\n                                    <option key={e} value={e.applicationName}>\n                                        {e.applicationName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeEnvironment}\n                                value={environment.environmentDisplayName}\n                                variant='outlined'\n                                label='Environment Name'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Deployed Environments'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        deployed.environment'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {envsListOfApplication.map((e) => (\n                                    <option key={e} value={e.environmentDisplayName}>\n                                        {e.environmentDisplayName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeProtocol}\n                                value={selectedProtocol}\n                                variant='outlined'\n                                label='Protocol'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Available Protocols'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        environment.protocol'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {protocolsListOfEnvironments.map((e) => (\n                                    <option key={e.protocol} value={e.protocol}>\n                                        {upperCaseString(e.protocol)}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Box pt={2}>\n                        <Divider />\n                    </Box>\n                    <Box pt={5} pb={5}>\n                        <Grid container>\n                            <Grid\n                                xs={12}\n                                md={7}\n                                item\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                }}\n                            >\n\n                                <Box\n                                    id='gateway-envirounment'\n                                    component='form'\n                                    className={classes.Box3}\n                                >\n                                    <Box mr={3}>\n                                        <Chip\n                                            label={upperCaseString(selectedProtocol)}\n                                            color='primary'\n                                            style={{\n                                                width: '70px',\n                                            }}\n                                        />\n                                    </Box>\n                                    <InputBase\n                                        className={classes.input}\n                                        inputProps={{ 'aria-label': 'api url' }}\n                                        value={selectedEndpoint}\n                                    />\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy the API URL to clipboard'\n                                                size='large'\n                                                onClick={() => {\n                                                    navigator.clipboard\n                                                        .writeText(selectedEndpoint).then(onCopy('urlCopied'));\n                                                }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.publish'\n                                        defaultMessage='Publish Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiPubTopics && apiPubTopics.length > 0) ? apiPubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='PUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.PubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.PubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                                size='large'\n                                                                onClick={() => {\n                                                                    navigator.clipboard\n                                                                        .writeText(t).then(onTopicCopy('topicCopied'));\n                                                                }}\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.publish.empty'\n                                                        defaultMessage='No Publish Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.subscribe'\n                                        defaultMessage='Subscribe Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiSubTopics && apiSubTopics.length > 0) ? apiSubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='SUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.SubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.SubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                                size='large'\n                                                                onClick={() => {\n                                                                    navigator.clipboard\n                                                                        .writeText(t).then(onTopicCopy('topicCopied'));\n                                                                }}\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.subscribe.empty'\n                                                        defaultMessage='No Subscribe Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </Root>\n    );\n}\n\nSolaceTopicsInfo.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceTopicsInfo;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useHistory, Link } from 'react-router-dom';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Typography from '@mui/material/Typography';\nimport { Link as MUILink } from '@mui/material';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport Box from '@mui/material/Box';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst PREFIX = 'Breadcrumb';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n        paddingLeft: theme.spacing(3),\n        background: theme.custom.infoBar.background || '#ffffff',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background || '#ffffff'),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\n/**\n * @returns {JSX} breadcrumb\n */\nexport default function Breadcrumb(props) {\n    const { api } = useContext(ApiContext);\n    const { breadcrumbDocument } = props;\n\n    const history = useHistory();\n    const intl = useIntl();\n    const pages = [\n        {\n            route: 'overview',\n            text: intl.formatMessage({\n                defaultMessage: 'Overview',\n                id: 'Apis.Details.Breadcrumb.overview',\n            }),\n        },\n        {\n            route: 'credentials',\n            text: intl.formatMessage({\n                defaultMessage: 'Subscriptions',\n                id: 'Apis.Details.Breadcrumb.subscriptions',\n            }),\n        },\n        {\n            route: 'api-console',\n            text: intl.formatMessage({\n                defaultMessage: 'API Console',\n                id: 'Apis.Details.Breadcrumb.try.out.api-console',\n            }),\n        },\n        {\n            route: 'api-chat',\n            text: intl.formatMessage({\n                defaultMessage: 'API Chat',\n                id: 'Apis.Details.Breadcrumb.try.out.api-chat',\n            }),\n        },\n        {\n            route: 'comments',\n            text: intl.formatMessage({\n                defaultMessage: 'Comments',\n                id: 'Apis.Details.Breadcrumb.comments',\n            }),\n        },\n        {\n            route: 'documents',\n            text: intl.formatMessage({\n                defaultMessage: 'Documents',\n                id: 'Apis.Details.Breadcrumb.documents',\n            }),\n        },\n        {\n            route: 'sdk',\n            text: intl.formatMessage({\n                defaultMessage: 'SDKs',\n                id: 'Apis.Details.Breadcrumb.sdks',\n            }),\n        },\n    ];\n\n    const [selected, setSelected] = useState(pages[0]);\n\n    const detectCurrentMenu = (location = null) => {\n        let locationLocal = location;\n        if (!locationLocal) {\n            locationLocal = window.location;\n        }\n        const { pathname } = locationLocal;\n        for (let i = 0; i < pages.length; i++) {\n            const test1 = new RegExp('/' + pages[i].route + '$', 'g');\n            const test2 = new RegExp('/' + pages[i].route + '/', 'g');\n            if (pathname.match(test1) || pathname.match(test2)) {\n                setSelected(pages[i]);\n            }\n        }\n    };\n    useEffect(() => {\n        detectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        detectCurrentMenu(location);\n    });\n    useEffect(() => {\n        detectCurrentMenu();\n    }, [breadcrumbDocument]);\n    return (\n        <Root className={classes.root}>\n            <Box display='flex' flexDirection='row' alignItems='center'>\n                <Typography color='textPrimary' component='h1' variant='h6'>{selected.text}</Typography>\n                <VerticalDivider height={15} />\n                <Breadcrumbs separator={<NavigateNextIcon fontSize='small' />} aria-label='breadcrumb'>\n                    <MUILink\n                        color='textPrimary'\n                        to={'/apis/' + api.id + '/overview'}\n                        component={Link}\n                        underline='hover'\n                    >\n                        {api.name}\n                    </MUILink>\n                    {(selected.route === 'api-console' || selected.route === 'api-chat') && (\n                        <Typography color='textPrimary'>\n                            <FormattedMessage\n                                id='Apis.Details.Breadcrumb.route.try.out'\n                                defaultMessage='Try Out'\n                            />\n                        </Typography>\n                    )}\n                    { (selected.route === 'documents' && document) && (\n                        <MUILink\n                            color='textPrimary'\n                            to={'/apis/' + api.id + '/documents/default'}\n                            component={Link}\n                            underline='hover'\n                        >\n                            {selected.text}\n                        </MUILink>\n                    ) }\n                    { (selected.route === 'documents' && !document) && <Typography color='textPrimary'>{selected.text}</Typography> }\n                    { (selected.route === 'documents' && document) && (\n                        <Typography color='textPrimary' data-testid='breadcrumbDocument'>{breadcrumbDocument}</Typography>\n                    )}\n                    { (selected.route !== 'documents') && <Typography color='textPrimary'>{selected.text}</Typography> }\n                </Breadcrumbs>\n            </Box>\n\n        </Root>\n    );\n}\n","import React, { useContext } from 'react';\nimport Button from '@mui/material/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/api-console`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                        color='grey'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                    id={'wizard-next-' + currentStep + '-btn'}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport Button from '@mui/material/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'CreateAppStep';\n\nconst classes = {\n    appCreateFormWrapper: `${PREFIX}-appCreateFormWrapper`,\n    warningIcon: `${PREFIX}-warningIcon`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.appCreateFormWrapper}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`& .${classes.warningIcon}`]: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKMInner;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter(\n                        (x) => x.name === 'Resident Key Manager' && x.enabled,\n                    );\n                    hasValidKMInner = responseKeyManagerListDefault.length !== 0;\n                }\n                setHasValidKM(hasValidKMInner);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warning'>\n                    <FormattedMessage\n                        id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                        defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                    />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Box>\n            </Box>\n        );\n    }\n\n    return (\n        <Root className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </Root>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport Box from '@mui/material/Box';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <Box component='div'>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </Box>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Settings from 'Settings';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'generateKeysStep';\n\nconst classes = {\n    keyConfigWrapper: `${PREFIX}-keyConfigWrapper`,\n    radioWrapper: `${PREFIX}-radioWrapper`,\n    paper: `${PREFIX}-paper`,\n    subTitle: `${PREFIX}-subTitle`,\n    tabPanel: `${PREFIX}-tabPanel`,\n    hr: `${PREFIX}-hr`,\n    muiFormGroupRoot: `${PREFIX}-muiFormGroupRoot`,\n    table: `${PREFIX}-table`,\n    leftCol: `${PREFIX}-leftCol`,\n    iconAligner: `${PREFIX}-iconAligner`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.keyConfigWrapper}`]: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.radioWrapper}`]: {\n        flexDirection: 'row',\n    },\n\n    [`& .${classes.paper}`]: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n\n    [`& .${classes.subTitle}`]: {\n        fontWeight: 400,\n    },\n\n    [`& .${classes.tabPanel}`]: {\n        '& .MuiBox-root': {\n            padding: 0,\n        },\n    },\n\n    [`& .${classes.hr}`]: {\n        border: 'solid 1px #efefef',\n    },\n\n    [`& .${classes.muiFormGroupRoot}`]: {\n        flexDirection: 'row',\n    },\n\n    [`& .${classes.table}`]: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        },\n    },\n\n    [`& .${classes.leftCol}`]: {\n        width: 200,\n    },\n\n    [`& .${classes.iconAligner}`]: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                (<Root>{children}</Root>)\n            )}\n        </div>\n    );\n}\nTabPanel.defaultProps = {\n    children: <div />,\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [nextActive, setNextActive] = useState(true);\n    const [keyManager, setKeyManager] = useState(null);\n    const selectedTab = 'Resident Key Manager';\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Filtering Grant Types for Token Exchange\n                const filteredGrantTypes = selectedKeyManager.availableGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange'));\n                setKeyManager({ ...selectedKeyManager, availableGrantTypes: filteredGrantTypes });\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.id;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes\n                    .filter((k) => (k !== 'urn:ietf:params:oauth:grant-type:token-exchange')),\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    return (\n        <Root>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (\n                        <>\n                            <Grid item xs={12} md={20} lg={3}>\n                                <Typography color='inherit' variant='subtitle2' component='div'>\n                                    <FormattedMessage\n                                        defaultMessage='Key Configuration'\n                                        id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                    />\n                                </Typography>\n                                <Typography color='inherit' variant='caption' component='p'>\n                                    <FormHelperText>\n                                        <FormattedMessage\n                                            defaultMessage={'These configurations are set for the purpose of the wizard.'\n                                                + 'You have more control over them when you go to the application view. '}\n                                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                        />\n                                    </FormHelperText>\n\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={12} lg={9}>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                    defaultMessage='Key Manager'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <div>{keyManager.displayName || keyManager.name}</div>\n                                                <Typography variant='caption' component='div'>{keyManager.description}</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                    defaultMessage='Environment'\n                                                />\n                                            </TableCell>\n                                            <TableCell>Sandbox</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                    defaultMessage='Token Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.tokenEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                    defaultMessage='Revoke Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.revokeEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                    defaultMessage='User Info Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                    defaultMessage='Grant Types'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                {keyManager.availableGrantTypes.map((gt) => (\n                                                    <span>\n                                                        {Settings.grantTypes[gt] || gt}\n                                                        ,\n                                                        {' '}\n                                                    </span>\n                                                ))}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </Root>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Typography from '@mui/material/Typography';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'generateAccessTokenStep';\n\nconst classes = {\n    tokenWrapper: `${PREFIX}-tokenWrapper`,\n    title: `${PREFIX}-title`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.tokenWrapper}`]: {\n        paddingLeft: theme.spacing(3),\n        width: '90%',\n    },\n\n    [`& .${classes.title}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const intl = useIntl();\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, createdSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType, createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    };\n\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <Root>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </Root>\n    );\n};\n\nexport default generateAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { useHistory } from 'react-router-dom';\nimport ButtonPanel from './ButtonPanel';\n\nconst PREFIX = 'copyAccessTokenStep';\n\nconst classes = {\n    tokenWrapper: `${PREFIX}-tokenWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.tokenWrapper}`]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        width: '90%',\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n\n    return (\n        <Root className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </Root>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport { Typography, Paper, Box } from '@mui/material';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst PREFIX = 'Wizard';\n\nconst classes = {\n    paper: `${PREFIX}-paper`,\n    titleSub: `${PREFIX}-titleSub`,\n    boxWrapper: `${PREFIX}-boxWrapper`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.paper}`]: {\n        marginLeft: theme.spacing(3),\n    },\n\n    [`& .${classes.titleSub}`]: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n\n    [`& .${classes.boxWrapper}`]: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n}));\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <Root>\n                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription & Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={4} mx='auto' display='block' width='96%'>\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex'>\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex'>\n                                <Typography variant='h5' component='label'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </Root>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl((Wizard));\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { lazy, Suspense } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport SolaceTopicsInfo from 'AppComponents/Apis/Details/SolaceApi/SolaceTopicsInfo';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CONSTANTS from 'AppData/Constants';\nimport { useTheme } from '@mui/material';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport Breadcrumb from './Breadcrumb';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst AsyncApiConsole = lazy(() => import('./AsyncApiConsole/AsyncApiConsole'));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\nconst AsyncApiDefinition = lazy(() => import('./Definitions/AsyncApi/AsyncApiDefinitionUI'));\nconst ApiChat = lazy(() => import('./ApiChat/ApiChat' /* webpackChunkName: \"ApiChat\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const {\n        match,\n        api,\n        setbreadcrumbDocument,\n        apiChatEnabled,\n    } = props;\n    const { apiUuid } = match.params;\n    const path = '/apis/';\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === CONSTANTS.API_TYPES.GRAPHQL) {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={GraphQLConsole} />;\n    } else if (api.type === CONSTANTS.API_TYPES.WS || api.type === CONSTANTS.API_TYPES.WEBSUB\n        || api.type === CONSTANTS.API_TYPES.SSE || api.type === CONSTANTS.API_TYPES.ASYNC) {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={AsyncApiConsole} />;\n    } else {\n        tryoutRoute = <Route path='/apis/:apiUuid/api-console' component={ApiConsole} />;\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from='/apis/:apiUuid' to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route\n                    path='/apis/:apiUuid/documents'\n                    render={() => <Documents {...props} setbreadcrumbDocument={setbreadcrumbDocument} />}\n                />\n                <Route path='/apis/:apiUuid/definition' component={AsyncApiDefinition} />\n                <Route path='/apis/:apiUuid/solaceTopicsInfo' component={SolaceTopicsInfo} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                <Route path='/apis/:apiUuid/comments' component={Comments} />\n                <Route path='/apis/:apiUuid/credentials' component={Credentials} />\n                {tryoutRoute}\n                {apiChatEnabled && (\n                    <Route path='/apis/:apiUuid/api-chat' component={ApiChat} />\n                )}\n                <Route path='/apis/:apiUuid/sdk' component={Sdk} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\nconst PREFIX = 'index';\n\nconst classes = {\n    leftMenu: `${PREFIX}-leftMenu`,\n    leftMenuHorizontal: `${PREFIX}-leftMenuHorizontal`,\n    leftMenuVerticalLeft: `${PREFIX}-leftMenuVerticalLeft`,\n    leftMenuVerticalLeftMinView: `${PREFIX}-leftMenuVerticalLeftMinView`,\n    leftMenuVerticalRight: `${PREFIX}-leftMenuVerticalRight`,\n    leftMenuVerticalRightMinView: `${PREFIX}-leftMenuVerticalRightMinView`,\n    leftLInkMain: `${PREFIX}-leftLInkMain`,\n    leftLInkMainText: `${PREFIX}-leftLInkMainText`,\n    detailsContent: `${PREFIX}-detailsContent`,\n    content: `${PREFIX}-content`,\n    contentExpandView: `${PREFIX}-contentExpandView`,\n    shiftLeft: `${PREFIX}-shiftLeft`,\n    contentLoader: `${PREFIX}-contentLoader`,\n    contentLoaderRightMenu: `${PREFIX}-contentLoaderRightMenu`,\n    expandIcon: `${PREFIX}-expandIcon`,\n    expandIconMinView: `${PREFIX}-expandIconMinView`,\n    accordianSummary: `${PREFIX}-accordianSummary`,\n    accordianSummaryMinView: `${PREFIX}-accordianSummaryMinView`,\n    accordionDetails: `${PREFIX}-accordionDetails`,\n    accordionDetailsMinView: `${PREFIX}-accordionDetailsMinView`,\n    leftMenuVerticalRightDrawerIcon: `${PREFIX}-leftMenuVerticalRightDrawerIcon`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        width: '100%',\n        [`& .${classes.leftMenu}`]: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        [`& .${classes.leftMenuHorizontal}`]: {\n            top: theme.custom.infoBar.height,\n            overflowX: 'auto',\n            position: 'static',\n            display: 'flex',\n            left: 0,\n        },\n        [`& .${classes.leftMenuVerticalLeft}`]: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('md')]: {\n                width: 50,\n            },\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalLeftMinView}`]: {\n            width: 50,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalRight}`]: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('md')]: {\n                width: 50,\n            },\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftMenuVerticalRightMinView}`]: {\n            width: 50,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        [`& .${classes.leftLInkMain}`]: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        [`& .${classes.leftLInkMainText}`]: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        [`& .${classes.detailsContent}`]: {\n            display: 'flex',\n            flex: 1,\n        },\n        [`& .${classes.content}`]: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            [theme.breakpoints.down('md')]: {\n                marginLeft: shiftToLeft !== 0 && 50,\n                marginRight: shiftToRight !== 0 && 50,\n            },\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        [`& .${classes.contentExpandView}`]: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n            minHeight: 'calc(100vh - 114px)',\n        },\n        [`& .${classes.shiftLeft}`]: {\n            marginLeft: 0,\n        },\n        [`& .${classes.contentLoader}`]: {\n            paddingTop: theme.spacing(3),\n        },\n        [`& .${classes.contentLoaderRightMenu}`]: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n        [`& .${classes.expandIcon}`]: {\n            color: '#ffffff',\n            [theme.breakpoints.down('md')]: {\n                display: 'none',\n            },\n        },\n        [`& .${classes.expandIconMinView}`]: {\n            display: 'none',\n        },\n        [`& .${classes.accordianSummary}`]: {\n            padding: '0 12px 0 5px',\n            [theme.breakpoints.down('md')]: {\n                padding: 0,\n            },\n        },\n        [`& .${classes.accordianSummaryMinView}`]: {\n            padding: 0,\n        },\n        [`& .${classes.accordionDetails}`]: {\n            paddingTop: 0,\n            paddingBottom: 0,\n            margin: 0,\n            [theme.breakpoints.down('md')]: {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n        [`& .${classes.accordionDetailsMinView}`]: {\n            paddingLeft: 0,\n            paddingRight: 0,\n        },\n        [`& .${classes.leftMenuVerticalRightDrawerIcon}`]: {\n            transform: 'rotate(180deg)',\n        },\n    };\n});\n\n/**\n *\n *\n * @class DetailsLegacy\n * @extends {React.Component}\n */\nclass DetailsLegacy extends React.Component {\n    /**\n     *Creates an instance of DetailsLegacy.\n     * @param {*} props\n     * @memberof DetailsLegacy\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof DetailsLegacy\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user === null) {\n                const user1 = new User();\n                this.setState({ open: user1.isSideBarOpen });\n            }\n            if (user != null) {\n                this.setState({ open: user.isSideBarOpen });\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = app.subscribeApplicationLimit || 5000;\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null, subscriptionLimit);\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((appInner) => !subscribedAppIds.includes(appInner.applicationId) && appInner.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n            breadcrumbDocument: '',\n            tryOutExpanded: true,\n            apiChatEnabled: false,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.apiUuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n        this.setbreadcrumbDocument = this.setbreadcrumbDocument.bind(this);\n    }\n\n    /**\n     * @memberof DetailsLegacy\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n        const api = new Api();\n        const promisedSettings = api.getSettings();\n        promisedSettings\n            .then((response) => {\n                this.setState({ apiChatEnabled: response.body.apiChatEnabled });\n            }).catch((error) => {\n                console.error(\n                    'Error while receiving settings : ',\n                    error,\n                );\n            });\n    }\n\n    /**\n     * handle component did update\n     * @param {JSON} prevProps previous props\n     */\n    componentDidUpdate(prevProps) {\n        const { match: { params: { apiUuid: prevApiUuid } } } = prevProps;\n        const { match: { params: { apiUuid: newApiUuid } } } = this.props;\n        if (prevApiUuid !== newApiUuid) {\n            this.api_uuid = newApiUuid;\n            this.updateSubscriptionData();\n        }\n    }\n\n    /**\n     * @param {string} breadcrumbDocument\n     * @memberof DetailsLegacy\n     */\n    setbreadcrumbDocument(breadcrumbDocument) {\n        this.setState({ breadcrumbDocument });\n    }\n\n    /**\n     * @param {JSON} api api object\n     * @memberof DetailsLegacy\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     * @memberof DetailsLegacy\n     */\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if (user != null) {\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle left side drawer open\n     */\n    handleDrawerOpen() {\n        this.setState({ open: true });\n        const user = AuthManager.getUser();\n        if (user !== null) {\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle lef side drawer open\n     * @param {JSON} api api object\n     * @returns {boolean} is the api async api\n     */\n    isAsyncAPI(api) {\n        return (api\n            && (api.type === CONSTANTS.API_TYPES.WS\n                || api.type === CONSTANTS.API_TYPES.WEBSUB\n                || api.type === CONSTANTS.API_TYPES.SSE\n                || api.type === CONSTANTS.API_TYPES.ASYNC));\n    }\n\n    /**\n     * @returns {JSX} rendered outpu\n     * @memberof DetailsLegacy\n     */\n    render() {\n        const {\n            theme, intl,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            api, notFound, open, breadcrumbDocument, tryOutExpanded, apiChatEnabled,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks, showAsyncSpecification, showSolaceTopics,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n        const isAsyncApi = this.isAsyncAPI(api);\n        const isSubValidationDisabled = api && api.tiers && api.tiers.length === 1\n            && api.tiers[0].tierName.includes(CONSTANTS.DEFAULT_SUBSCRIPTIONLESS_PLAN);\n\n        return api ? (\n            <Root>\n                <ApiContext.Provider value={this.state}>\n                    <Helmet>\n                        <title>{`${prefix} ${api.name}${sufix}`}</title>\n                    </Helmet>\n                    <style>{globalStyle}</style>\n                    {!isWidget && (\n                        <nav\n                            role='navigation'\n                            aria-label={intl.formatMessage({\n                                id: 'Apis.Details.index.secondary.navigation',\n                                defaultMessage: 'Secondary Navigation',\n                            })}\n                            className={classNames(\n                                classes.leftMenu,\n                                {\n                                    [classes.leftMenuHorizontal]: position === 'horizontal',\n                                },\n                                {\n                                    [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                                    [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                                },\n                                {\n                                    [classes.leftMenuVerticalRight]: position === 'vertical-right' && open,\n                                    [classes.leftMenuVerticalRightMinView]: position === 'vertical-right' && !open,\n                                },\n                                'left-menu',\n                            )}\n                        >\n                            {rootIconVisible && (\n                                <Link to='/apis' className={classes.leftLInkMain} aria-label='ALL APIs'>\n                                    <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                    {rootIconTextVisible && (\n                                        <Typography className={classes.leftLInkMainText}>\n                                            <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                        </Typography>\n                                    )}\n                                </Link>\n                            )}\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                                route='overview'\n                                iconText='overview'\n                                to={pathPrefix + 'overview'}\n                                open={open}\n                                id='left-menu-overview'\n                            />\n                            {user && showCredentials && !isSubValidationDisabled\n                                && (api.gatewayVendor === 'wso2' || !api.gatewayVendor) && (\n                                <>\n\n                                    <LeftMenuItem\n                                        text={(\n                                            <FormattedMessage\n                                                id='Apis.Details.index.subscriptions'\n                                                defaultMessage='Subscriptions'\n                                            />\n                                        )}\n                                        route='credentials'\n                                        iconText='credentials'\n                                        to={pathPrefix + 'credentials'}\n                                        open={open}\n                                        id='left-menu-credentials'\n                                    />\n\n                                </>\n                            )}\n                            {showTryout && (api.gatewayType !== 'wso2/apk'\n                                || (api.type === 'APIPRODUCT' && !api.gatewayVendor)) && (\n                                <>\n                                    <Accordion\n                                        id='left-menu-try-out'\n                                        expanded={tryOutExpanded}\n                                        elevation={0}\n                                        style={{ backgroundColor: 'transparent', margin: 0 }}\n                                        onChange={(_event, expanded) => this.setState({ tryOutExpanded: expanded })}\n                                    >\n                                        <AccordionSummary\n                                            expandIcon={(\n                                                <ExpandMoreIcon\n                                                    className={classNames(\n                                                        classes.expandIcon,\n                                                        { [classes.expandIconMinView]: !open },\n                                                    )}\n                                                />\n                                            )}\n                                            style={{ maxHeight: 43, minHeight: 43 }}\n                                            className={classNames(\n                                                classes.accordianSummary,\n                                                { [classes.accordianSummaryMinView]: !open },\n                                            )}\n                                        >\n                                            <LeftMenuItem\n                                                text={(\n                                                    <FormattedMessage\n                                                        id='Apis.Details.index.try.out.'\n                                                        defaultMessage='Try Out'\n                                                    />\n                                                )}\n                                                iconText='test'\n                                                open={open}\n                                                id='left-menu-try-out'\n                                            />\n                                        </AccordionSummary>\n                                        <AccordionDetails\n                                            className={\n                                                classNames(\n                                                    classes.accordionDetails,\n                                                    { [classes.accordionDetailsMinView]: !open },\n                                                )\n                                            }\n                                        >\n                                            <div>\n                                                <LeftMenuItem\n                                                    text={(\n                                                        <FormattedMessage\n                                                            id='Apis.Details.index.try.out.api.console'\n                                                            defaultMessage='API Console'\n                                                        />\n                                                    )}\n                                                    route='api-console'\n                                                    iconText='api-console'\n                                                    to={pathPrefix + 'api-console'}\n                                                    open={open}\n                                                    id='left-menu-test'\n                                                />\n                                                {api.type !== CONSTANTS.API_TYPES.GRAPHQL && !isAsyncApi && apiChatEnabled\n                                                && (api.gatewayVendor === 'wso2' || !api.gatewayVendor) && (\n                                                    <LeftMenuItem\n                                                        text={(\n                                                            <FormattedMessage\n                                                                id='Apis.Details.index.try.out.api.chat'\n                                                                defaultMessage='API Chat'\n                                                            />\n                                                        )}\n                                                        route='api-chat'\n                                                        Icon={<QuestionAnswerIcon style={{ fontSize: 'large', padding: 8 }} />}\n                                                        to={pathPrefix + 'api-chat'}\n                                                        open={open}\n                                                        id='left-menu-api-chat'\n                                                    />\n                                                )}\n                                            </div>\n                                        </AccordionDetails>\n                                    </Accordion>\n                                </>\n                            )}\n                            {(showSolaceTopics && api.gatewayVendor === 'solace') && (\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.solaceTopicsInfo'\n                                            defaultMessage='Solace Info'\n                                        />\n                                    )}\n                                    route='solaceTopicsInfo'\n                                    iconText='test'\n                                    to={pathPrefix + 'solaceTopicsInfo'}\n                                    open={open}\n                                    id='left-menu-solace-info'\n                                />\n                            )}\n                            {isAsyncApi && showAsyncSpecification && (\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.definition'\n                                            defaultMessage='Definition'\n                                        />\n                                    )}\n                                    route='definition'\n                                    iconText='Definition'\n                                    to={pathPrefix + 'definition'}\n                                    open={open}\n                                    id='left-menu-definition'\n                                />\n                            )}\n                            {showComments && (\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.comments'\n                                            defaultMessage='Comments'\n                                        />\n                                    )}\n                                    route='comments'\n                                    iconText='comments'\n                                    to={pathPrefix + 'comments'}\n                                    open={open}\n                                    id='left-menu-comments'\n                                />\n                            )}\n                            {showDocuments && (\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.documentation'\n                                            defaultMessage='Documents'\n                                        />\n                                    )}\n                                    route='documents'\n                                    iconText='docs'\n                                    to={pathPrefix + 'documents'}\n                                    open={open}\n                                    id='left-menu-documents'\n                                />\n\n                            )}\n                            {!isAsyncApi && showSdks && (\n\n                                <LeftMenuItem\n                                    text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                    route='sdk'\n                                    iconText='sdk'\n                                    to={pathPrefix + 'sdk'}\n                                    open={open}\n                                    id='left-menu-sdk'\n                                />\n\n                            )}\n                            {open ? (\n                                <div\n                                    onClick={this.handleDrawerClose}\n                                    onKeyDown={this.handleDrawerClose}\n                                    style={{\n                                        width: 100, paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                    }}\n                                >\n                                    <ArrowBackIosIcon\n                                        fontSize='medium'\n                                        style={{ color: 'white' }}\n                                        className={\n                                            classNames(\n                                                {\n                                                    [classes.leftMenuVerticalRightDrawerIcon]: position === 'vertical-right',\n                                                },\n                                            )\n                                        }\n                                    />\n                                </div>\n                            ) : (\n                                <div\n                                    onClick={this.handleDrawerOpen}\n                                    onKeyDown={this.handleDrawerOpen}\n                                    style={{\n                                        paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                    }}\n                                >\n                                    <ArrowForwardIosIcon\n                                        fontSize='medium'\n                                        style={{ color: 'white' }}\n                                        className={\n                                            classNames(\n                                                {\n                                                    [classes.leftMenuVerticalRightDrawerIcon]: position === 'vertical-right',\n                                                },\n                                            )\n                                        }\n                                    />\n                                </div>\n\n                            )}\n\n                        </nav>\n                    )}\n\n                    <div\n                        className={classNames(\n                            { [classes.content]: open },\n                            { [classes.contentExpandView]: !open },\n                        )}\n                    >\n                        <Breadcrumb\n                            breadcrumbDocument={breadcrumbDocument}\n                        />\n                        <div\n                            className={classNames(\n                                { [classes.contentLoader]: position === 'horizontal' },\n                                { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                            )}\n                        >\n                            <LoadableSwitch\n                                api={api}\n                                updateSubscriptionData={this.updateSubscriptionData}\n                                setbreadcrumbDocument={this.setbreadcrumbDocument}\n                                apiChatEnabled={apiChatEnabled}\n                            />\n                        </div>\n                    </div>\n                </ApiContext.Provider>\n            </Root>\n        ) : (\n            <div className='apim-dual-ring' />\n        );\n    }\n}\n\nDetailsLegacy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nfunction Details(props) {\n    const theme = useTheme();\n    return (\n        <DetailsLegacy\n            {...props}\n            theme={theme}\n        />\n    );\n}\n\nexport default withSettings(injectIntl((Details)));\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Fab from '@mui/material/Fab';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Tooltip from '@mui/material/Tooltip';\nimport { useIntl } from 'react-intl';\n\n/**\n * Renders Chat Icon view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Icon view.\n */\nfunction ChatBotIcon(props) {\n    const { toggleChatbot, handleDisableChatbot, chatbotDisabled } = props;\n    const [showCloseButton, setShowCloseButton] = useState(false);\n    const intl = useIntl();\n\n    const handleMouseEnter = () => {\n        setShowCloseButton(true);\n    };\n\n    const handleMouseLeave = () => {\n        setShowCloseButton(false);\n    };\n\n    const handleCloseIconClick = () => {\n        setShowCloseButton(false);\n        handleDisableChatbot();\n    };\n\n    return (\n        <>\n            <div\n                style={{ position: 'fixed', bottom: 20, right: 30 }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            >\n                {chatbotDisabled ? null : (\n                    <Tooltip\n                        title={intl.formatMessage({\n                            id: 'Apis.Chat.ChatIcon.tooltip.label',\n                            defaultMessage: 'Open Chat',\n                        })}\n                        placement='left'\n                    >\n                        <Fab color='primary' aria-label='chat' onClick={toggleChatbot} style={{ boxShadow: 'none' }}>\n                            <ChatIcon />\n                        </Fab>\n                    </Tooltip>\n                )}\n                {showCloseButton && (\n                    <Tooltip\n                        title={intl.formatMessage({\n                            id: 'Apis.Chat.ChatIcon.disable.chat.label',\n                            defaultMessage: 'Disable chat',\n                        })}\n                        placement='left'\n                    >\n                        <Fab\n                            color='secondary'\n                            variant='round'\n                            aria-label='close'\n                            onClick={handleCloseIconClick}\n                            style={{\n                                position: 'absolute',\n                                top: -18,\n                                right: -18,\n                                width: 34,\n                                height: 16,\n                                backgroundColor: 'transparent',\n                                boxShadow: 'none',\n                            }}\n                        >\n                            <CloseIcon fontSize='medium' style={{ fill: '#000', stroke: '#000' }} />\n                        </Fab>\n                    </Tooltip>\n                )}\n            </div>\n        </>\n    );\n}\n\nChatBotIcon.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    handleDisableChatbot: PropTypes.func.isRequired,\n    chatbotDisabled: PropTypes.bool.isRequired,\n};\nexport default ChatBotIcon;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport {\n    TextField, Snackbar, Typography, Box,\n} from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport SendIcon from '@mui/icons-material/Send';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { useIntl } from 'react-intl';\n\n/**\n * Renders Chat Input view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Input view.\n */\nfunction ChatInput(props) {\n    const { onSend, loading, user } = props;\n    const [content, setContent] = useState('');\n    const [notificationOpen, setNotificationOpen] = useState(false);\n    const QUERY_CHARACTER_LIMIT = 500;\n    const intl = useIntl();\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const handleChange = (e) => {\n        let { value } = e.target;\n        if (value.length > QUERY_CHARACTER_LIMIT) {\n            value = value.slice(0, QUERY_CHARACTER_LIMIT);\n        }\n        setContent(value);\n    };\n\n    const handleSend = () => {\n        if (content) {\n            onSend({ role: user, content });\n            setContent('');\n        }\n    };\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            if (!loading) {\n                handleSend();\n            }\n        }\n        if (e.keyCode === 13 && e.shiftKey) {\n            e.preventDefault();\n            setContent(`${content}\\n`);\n        }\n    };\n\n    const handleCloseNotification = () => {\n        setNotificationOpen(false);\n    };\n\n    return (\n        <div>\n            <TextField\n                placeholder={intl.formatMessage({\n                    id: 'Apis.Chat.ChatInput.placeholder',\n                    defaultMessage: 'Type a message...',\n                })}\n                value={content}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                fullWidth\n                multiline\n                size='small'\n                maxRows={12}\n                disabled={(marketplaceAssistantEnabled && !aiAuthTokenProvided) || !marketplaceAssistantEnabled}\n                InputProps={{\n                    style: {\n                        borderRadius: 10, padding: 18, paddingRight: 4,\n                    },\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                aria-label='marketplace-chat-message'\n                                onClick={handleSend}\n                                disabled={loading}\n                            >\n                                <SendIcon color='primary' />\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <Box display='flex' justifyContent='flex-end' mt={1} mr={1}>\n                <Typography variant='caption'>\n                    {content.length}\n                    /\n                    {QUERY_CHARACTER_LIMIT}\n                </Typography>\n            </Box>\n            <Snackbar\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                open={notificationOpen}\n                autoHideDuration={500}\n                onClose={handleCloseNotification}\n                message='Please enter a message'\n                sx={{\n                    position: 'absolute',\n                    bottom: 0,\n                    right: 0,\n                    transform: 'translate(50%, 50%)',\n                    marginBottom: '300px',\n                }}\n            />\n        </div>\n    );\n}\n\nChatInput.propTypes = {\n    onSend: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.string.isRequired,\n};\nexport default ChatInput;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Utils from 'AppData/Utils';\nimport {\n    Box, Typography, Card, CardContent, useTheme,\n} from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport ChatIcon from '@mui/icons-material/Chat';\n\nconst getColorFromLetter = (letter, colorMap, offset) => {\n    let charLightColor = colorMap[letter.toLowerCase()];\n\n    if (!charLightColor) {\n        const charNumber = parseInt(letter, 10);\n        if (charNumber) {\n            charLightColor = colorMap[String.fromCharCode(111 + charNumber)];\n        } else {\n            return [null, null];\n        }\n    }\n    const { r, g, b } = Utils.hexToRGBHash(charLightColor);\n    const dark = Utils.rgbToHex(r - Math.ceil(r * offset), g - Math.ceil(offset * g),\n        b - Math.ceil(offset * b));\n    return [charLightColor, dark];\n};\n\n/**\n * Renders a single Chat Message view.\n * @param {JSON} props Parent props.\n * @returns {JSX} Renders single Chat Message view.\n */\nfunction ChatMessage(props) {\n    const { message } = props;\n    const outerBoxRef = useRef(null);\n    const theme = useTheme();\n    const {\n        colorMap, offset,\n    } = theme.custom.thumbnail;\n\n    const profileStyle = {\n        width: '26px',\n        height: '26px',\n        backgroundColor: message.role === 'assistant' ? '#10597f' : '#6d6d6d',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        margin: '10px 10px 10px 0px',\n        borderRadius: message.role === 'assistant' ? '50% 50% 50% 0' : '50% 50% 50% 0',\n    };\n\n    const messageStyle = {\n        textAlign: 'left',\n        justifyContent: 'flex-start',\n        background: message.role === 'assistant' ? theme.palette.grey[100] : '#fff',\n        color: 'black',\n        borderRadius: '8px',\n        overflow: 'auto',\n        overflowX: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-wrap',\n        marginLeft: '20px',\n        maxWidth: '84%',\n    };\n\n    return (\n        <Box\n            display='flex'\n            flexDirection='column'\n            alignItems='flex-start'\n        >\n            {message.role === 'assistant' && (\n                <Box display='flex-start' alignItems='center' flexDirection='column' width='90%'>\n                    <Box display='flex' alignItems='center' width='100%'>\n                        <div style={profileStyle}>\n                            <ChatIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'small' }} />\n                        </div>\n                        <Typography variant='body1' style={{ fontWeight: '500', fontSize: '12pt' }}>Assistant</Typography>\n                    </Box>\n                </Box>\n            )}\n\n            {message.role !== 'assistant' && (\n                <Box display='flex' alignItems='center'>\n                    <div style={profileStyle}>\n                        <PersonIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'large' }} />\n                    </div>\n                    <Typography variant='body1' fontWeight='500' fontSize='12pt'>\n                        {message.role.charAt(0).toUpperCase() + message.role.slice(1)}\n                    </Typography>\n                </Box>\n            )}\n            <Box\n                style={{\n                    ...messageStyle,\n                    maxWidth: '84%',\n                }}\n                ref={outerBoxRef}\n                px={2}\n                py={message.role === 'assistant' ? 2 : 0}\n            >\n                <Typography>\n                    {message.content}\n                </Typography>\n            </Box>\n            <Box display='flex-start' alignItems='center' flexDirection='column' width='90%'>\n                {message.apis && (\n                    <Box display='flex' flexDirection='row' flexWrap='wrap' marginLeft='20px' marginRight='16px' width='100%'>\n                        {message.apis.map((api) => {\n                            const [light, dark] = getColorFromLetter(api.name.substring(0, 1), colorMap, offset);\n                            const background = light && `linear-gradient(to right, ${light}, ${dark})`;\n\n                            return (\n                                <a\n                                    key={api.id}\n                                    href={api.apiPath}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    style={{\n                                        textDecoration: 'none',\n                                        color: 'inherit',\n                                        width: '33%',\n                                    }}\n                                >\n                                    <Card style={{\n                                        margin: '10px 10px 0 0', width: '97%', height: '70px', background,\n                                    }}\n                                    >\n                                        <CardContent style={{ wordWrap: 'break-word', alignItems: 'center', cursor: 'pointer' }}>\n                                            <Typography\n                                                variant='subtitle1'\n                                                gutterBottom\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                    overflow: 'hidden',\n                                                    textOverflow: 'ellipsis',\n                                                    margin: 0,\n                                                    color: '#fff',\n                                                    fontWeight: 'bold',\n                                                }}\n                                            >\n                                                {api.name}\n                                            </Typography>\n                                            <Typography\n                                                variant='subtitle1'\n                                                gutterBottom\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                    overflow: 'hidden',\n                                                    textOverflow: 'ellipsis',\n                                                    fontSize: '10px',\n                                                    color: '#fff',\n                                                }}\n                                            >\n                                                Version:\n                                                {api.version}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </a>\n                            );\n                        })}\n                    </Box>\n                )}\n            </Box>\n        </Box>\n    );\n}\n\nChatMessage.propTypes = {\n    message: PropTypes.shape({\n        role: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        apis: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n};\nexport default ChatMessage;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className='loader' />\n    );\n};\n\nexport default Loader;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Box, Typography } from '@mui/material';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Alert from '@mui/material/Alert';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport ChatInput from './ChatInput';\nimport ChatMessage from './ChatMessage';\nimport Loader from './Loader';\n\n/**\n * Renders Chat Messages view.\n *\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Messages view.\n */\nfunction ChatMessages(props) {\n    const {\n        messages, loading, onSend, user,\n    } = props;\n    const intl = useIntl();\n    const { settings: { aiAuthTokenProvided } } = useSettingsContext();\n    const messagesEndRef = useRef(null);\n\n    const subjectLine = intl.formatMessage({\n        id: 'Apis.Chat.Chat.Messages.subject.line',\n        defaultMessage: 'API Marketplace Assistant is an early feature and can make mistakes. Verify its outputs.',\n    });\n\n    const style = {\n        width: '26px',\n        height: '26px',\n        backgroundColor: '#10597f',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        margin: '10px 10px 10px 0px',\n        borderRadius: '50% 50% 50% 0',\n    };\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    const authTokenNotProvidedWarning = (\n        <FormattedMessage\n            id='Apis.Details.ChatMessages.warning.authTokenMissing'\n            defaultMessage={'You must provide a token to start using the API Marketplace Assistant. To obtain one, '\n                + 'follow the steps provided under {marketplaceAssistantDocLink} '}\n            values={{\n                marketplaceAssistantDocLink: (\n                    <a\n                        id='marketplace-assistant-doc-link'\n                        href='https://apim.docs.wso2.com/en/4.3.0/consume/discover-apis/marketplace-assistant/'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        Search APIs with Marketplace Assistant\n                        <LaunchIcon\n                            style={{ marginLeft: '2px' }}\n                            fontSize='small'\n                        />\n                    </a>\n                ),\n            }}\n        />\n    );\n\n    return (\n        <Box\n            maxHeight='100%'\n            display='flex'\n            flexDirection='column'\n            marginLeft='5%'\n        >\n            <Box\n                display='flex'\n                justifyContent='center'\n                overflow='auto'\n            >\n                <Box\n                    maxWidth='1320px'\n                    width='100%'\n                >\n                    {aiAuthTokenProvided ? (\n                        messages && messages.map((message) => (\n                            <Box my={1}>\n                                <ChatMessage message={message} />\n                            </Box>\n                        ))\n                    ) : (\n                        <Box display='flex' justifyContent='center' alignItems='center' mr='5%' mb={1}>\n                            <Alert severity='warning'>\n                                {authTokenNotProvidedWarning}\n                            </Alert>\n                        </Box>\n                    )}\n\n                    {loading && (\n                        <Box\n                            display='flex'\n                            flexDirection='column'\n                            alignItems='flex-start'\n                        >\n                            <Box display='flex' alignItems='center'>\n                                <div style={style}>\n                                    <ChatIcon style={{ fill: '#fff', stroke: '#fff', fontSize: 'small' }} />\n                                </div>\n                                <Typography variant='body1' style={{ fontWeight: '500', fontSize: '12pt' }}>Assistant</Typography>\n                            </Box>\n                            <Box\n                                textAlign='left'\n                                bgcolor='#fff'\n                                borderRadius='10px'\n                                justifyContent='flex-start'\n                                px={3}\n                                marginLeft='12px'\n                                marginBottom='10px'\n                            >\n                                <Loader />\n                            </Box>\n                        </Box>\n                    )}\n                    <div ref={messagesEndRef} />\n                </Box>\n            </Box>\n\n            <Box\n                display='flex'\n                justifyContent='center'\n            >\n                <Box\n                    mt={1.5}\n                    mb={0.5}\n                    width='100%'\n                    maxWidth='1380px'\n                    marginRight='5%'\n                >\n                    <ChatInput onSend={onSend} loading={loading} user={user} />\n                </Box>\n\n            </Box>\n            <Box mb={1}>\n                <Typography\n                    color='grey'\n                    variant='body2'\n                    fontSize='8pt'\n                    textAlign='center'\n                    lineHeight='1.4'\n                    marginRight='5%'\n                >\n                    {subjectLine}\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\nChatMessages.propTypes = {\n    messages: PropTypes.instanceOf(Array).isRequired,\n    loading: PropTypes.bool.isRequired,\n    onSend: PropTypes.func.isRequired,\n    user: PropTypes.string.isRequired,\n};\nexport default ChatMessages;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, IconButton, Typography } from '@mui/material';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport 'react-resizable/css/styles.css';\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\nimport FullscreenExitIcon from '@mui/icons-material/FullscreenExit';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport Tooltip from '@mui/material/Tooltip';\nimport RestartAltTwoToneIcon from '@mui/icons-material/RestartAltTwoTone';\nimport { styled, alpha } from '@mui/material/styles';\n\nconst PREFIX = 'marketplace-assistant-chatbot-header';\n\nconst classes = {\n    mainHeader: `${PREFIX}-mainHeader`,\n    chatbotNameBox: `${PREFIX}-chatbotNameBox`,\n    chatbotName: `${PREFIX}-chatbotName`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.chatbotNameBox}`]: {\n        padding: '2px 18px 1px 10px',\n        margin: '12px 0 12px auto',\n        borderBottom: '2px solid #10597f',\n        borderLeft: '2px solid #10597f',\n        borderRight: '2px solid #10597f',\n        borderRadius: '38px',\n    },\n    [`& .${classes.chatbotName}`]: {\n        marginBottom: -5,\n        fontSize: '12pt',\n        fontWeight: '500',\n        color: '#10597f',\n    },\n    [`& .${classes.mainHeader}`]: {\n        borderColor: alpha(theme.palette.common.black, 0.1),\n    },\n}));\n\n/**\n * Header of the Marketplace Assistant Chatbot\n *\n * @param {*} props properties\n * @returns {JSX} renders header view\n */\nfunction Header(props) {\n    const {\n        toggleChatbot, toggleFullScreen, isClicked, handleReset,\n    } = props;\n    const intl = useIntl();\n    return (\n        <Root>\n            <Box\n                display='flex'\n                flexDirection='row'\n                justifyContent='space-between'\n                borderBottom={1}\n                className={classes.mainHeader}\n            >\n                <Box>\n                    <IconButton\n                        onClick={toggleFullScreen}\n                        style={{\n                            alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 2px',\n                        }}\n                    >\n                        {isClicked ? (\n                            <FullscreenExitIcon fontSize='large' />\n                        ) : (\n                            <FullscreenIcon fontSize='large' />\n                        )}\n                    </IconButton>\n                    <Tooltip\n                        title={\n                            intl.formatMessage({\n                                id: 'Apis.Chat.Header.reset.chat.btn.tooltip',\n                                defaultMessage: 'Reset Chat',\n                            })\n                        }\n                        placement='right'\n                    >\n                        <IconButton\n                            onClick={handleReset}\n                            style={{\n                                alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 0',\n                            }}\n                        >\n                            <RestartAltTwoToneIcon fontSize='large' />\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n                <Box display='flex' flexDirection='column' className={classes.chatbotNameBox}>\n                    <Typography variant='body1' className={classes.chatbotName}>\n                        <FormattedMessage\n                            id='Apis.Chat.Header.MarketplaceAssistantBanner.title'\n                            defaultMessage='API Marketplace Assistant'\n                        />\n                    </Typography>\n                    <Typography variant='caption' sx={{ textAlign: 'right', marginRight: -1 }}>\n                        <FormattedMessage\n                            id='Apis.Chat.Header.MarketplaceAssistantBanner.experimental'\n                            defaultMessage='Experimental'\n                        />\n                    </Typography>\n                </Box>\n                <Box>\n                    <IconButton\n                        onClick={toggleChatbot}\n                        style={{\n                            alignSelf: 'flex-end', padding: '12px', color: '#10597f', margin: '6px 2px',\n                        }}\n                    >\n                        <ExpandMoreTwoToneIcon fontSize='large' />\n                    </IconButton>\n                </Box>\n            </Box>\n        </Root>\n    );\n}\nHeader.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    toggleFullScreen: PropTypes.func.isRequired,\n    isClicked: PropTypes.bool.isRequired,\n    handleReset: PropTypes.func.isRequired,\n};\nexport default Header;\n","const predefinedAnswers = {\n    hi: 'Hello there!, How can I assist you today?',\n    hiii: 'Hello there!, How can I assist you today?',\n    hello: 'Hi! How can I assist you today?',\n    hey: 'Hey! How can I help you?',\n    greetings: 'Greetings! What can I assist you with?',\n    thanks: 'You\\'re welcome!',\n    bye: 'Goodbye! Have a great day!',\n    goodbye: 'Goodbye! Have a great day!',\n    'thank you': 'You\\'re welcome!',\n    'thank you for your help': 'You\\'re welcome!',\n    'good morning': 'Good morning! How can I assist you today?',\n    'good afternoon': 'Good afternoon! What can I do for you?',\n    'good evening': 'Good evening! How can I help?',\n    'hey there': 'Hey! What can I assist you with?',\n    'hi there': 'Hello! How may I assist you?',\n    'hello there': 'Hello! How can I assist you today?',\n    'how are you': 'I\\'m doing well, thank you! How can I help you?',\n    'can you help me': 'You can ask me anything related to APIs!',\n    'what can I ask you': 'You can ask me anything related to APIs!',\n    'what can you do': 'I can help you with finding APIs and providing information related to APIs.',\n    'what do you do': 'I can help you with finding APIs and providing information related to APIs.',\n    'what do you know': 'I know a lot about APIs! What are you looking for?',\n    'what are you': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n    'who are you': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n    'what is your name': 'I am the Marketplace Assistant. I can help you with finding APIs and providing information related to APIs.',\n};\n\nconst calculateStringSimilarity = (string1, string2) => {\n    const str1 = string1.toLowerCase();\n    const str2 = string2.toLowerCase();\n\n    if (str1.length < 2 || str2.length < 2) return 0;\n\n    const subsequenceMap = new Map();\n    for (let i = 0; i < str1.length - 1; i++) {\n        const subsequence = str1.substr(i, 2);\n        subsequenceMap.set(subsequence, subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) + 1 : 1);\n    }\n\n    let matchCount = 0;\n    for (let j = 0; j < str2.length - 1; j++) {\n        const subsequence = str2.substr(j, 2);\n        const count = subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) : 0;\n        if (count > 0) {\n            subsequenceMap.set(subsequence, count - 1);\n            matchCount++;\n        }\n    }\n\n    return (matchCount * 2) / (str1.length + str2.length - 2);\n};\n\nconst findBestMatchingAnswer = (inputString) => {\n    let bestMatch = null;\n    let bestScore = -1;\n\n    const searchString = inputString.toLowerCase();\n\n    if (searchString.length < 2) return null;\n\n    for (const [key] of Object.entries(predefinedAnswers)) {\n        const comparisonString = key.toLowerCase();\n\n        const score = calculateStringSimilarity(searchString, comparisonString);\n\n        if (score > bestScore) {\n            bestScore = score;\n            bestMatch = key;\n        }\n    }\n\n    if (bestScore < 0.8) return null;\n\n    return predefinedAnswers[bestMatch];\n};\n\nexport default findBestMatchingAnswer;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport {\n    Container, Box,\n} from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport { ResizableBox } from 'react-resizable';\nimport 'react-resizable/css/styles.css';\nimport ChatMessages from './ChatMessages';\nimport Header from './Header';\nimport findBestMatchingAnswer from './SimilaritySearch';\n\n/**\n * Renders Chat Messages view..\n * @param {JSON} props Parent pros.\n * @returns {JSX} renders Chat Window view.\n */\nfunction ChatWindow(props) {\n    const {\n        toggleChatbot, toggleClearChatbot, messages, setMessages, introMessage, user, loading, responseRef, apiCall,\n    } = props;\n\n    const [isClicked, setIsClicked] = useState(false);\n    const [apiLimitExceeded, setApiLimitExceeded] = useState(false);\n    const [apisCount, setApisCount] = useState(null);\n    const [limit, setLimit] = useState(null);\n\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const [, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n\n    const toggleFullScreen = (e) => {\n        e.preventDefault();\n        setIsClicked(!isClicked);\n    };\n\n    const handleClear = () => {\n        setMessages([introMessage]);\n        toggleClearChatbot();\n    };\n\n    const handleSend = async (message) => {\n        responseRef.current = [...responseRef.current, { role: user, content: message.content.trim() }];\n        setMessages(responseRef.current);\n\n        const query = message.content.trim().toLowerCase();\n\n        const response = findBestMatchingAnswer(query);\n        if (response) {\n            responseRef.current = [...responseRef.current, { role: 'assistant', content: response.trim() }];\n            setMessages(responseRef.current);\n        } else {\n            apiCall(message.content);\n        }\n    };\n\n    const handleReset = () => {\n        responseRef.current = [introMessage];\n        setMessages([introMessage]);\n    };\n\n    useEffect(() => {\n        responseRef.current = messages;\n\n        if (marketplaceAssistantEnabled && aiAuthTokenProvided) {\n            const restApi = new Api();\n            restApi\n                .getMarketplaceAssistantApiCount()\n                .then((data) => {\n                    const apiCount = data.body.count;\n                    const apiLimit = data.body.limit;\n                    setApisCount(apiCount);\n                    setLimit(apiLimit);\n                    if (apiCount >= apiLimit - 50) {\n                        setApiLimitExceeded(true);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n\n        <ResizableBox\n            width={isClicked ? window.innerWidth : 500}\n            height={window.innerHeight - 64}\n            minConstraints={[500, window.innerHeight]}\n            maxConstraints={[window.innerWidth, window.innerHeight - 64]}\n            resizeHandles={['w']}\n            style={{\n                position: 'fixed',\n                bottom: 1,\n                right: 0,\n                display: 'flex',\n                justifyContent: 'flex-start',\n                flexDirection: 'row-reverse',\n                zIndex: 1200,\n            }}\n            handle={(\n                <span\n                    style={{\n                        width: '4px',\n                        cursor: 'ew-resize',\n                        minWidth: '4px',\n                    }}\n                />\n            )}\n        >\n            <Container\n                maxWidth={false}\n                style={{\n                    padding: 0,\n                    backgroundColor: '#fff',\n                    border: '0px solid #808e96',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.3)',\n                    borderRadius: '4px',\n                    margin: '4px 4px 4px 0',\n                }}\n            >\n                <Box\n                    display='flex'\n                    flexDirection='column'\n                    style={{\n                        height: '100%',\n                    }}\n                >\n                    <Header\n                        toggleChatbot={toggleChatbot}\n                        toggleFullScreen={toggleFullScreen}\n                        handleClear={handleClear}\n                        handleReset={handleReset}\n                        isClicked={isClicked}\n                    />\n                    {/* Alert to show API count info */}\n                    {marketplaceAssistantEnabled && aiAuthTokenProvided && apiLimitExceeded && (\n                        (apisCount >= limit) ? (\n                            <Alert severity='error' style={{ borderRadius: '0px', zIndex: 2999, padding: '0 10px 0 10px' }}>\n                                {`You are reached your maximum limit (${limit} apis) for API usage.`}\n                            </Alert>\n                        ) : (\n                            <Alert severity='warning' style={{ borderRadius: '0px', zIndex: 2999, padding: '0 10px 0 10px' }}>\n                                {`You are approaching your maximum limit for API usage. You can utilize up to ${limit} APIs.\n                                    Currently, you have utilized ${apisCount} APIs.`}\n                            </Alert>\n                        )\n                    )}\n\n                    <Box\n                        flexGrow={1}\n                        display='flex'\n                        overflow='auto'\n                        flexDirection='column'\n                        justifyContent='flex-end'\n                    >\n                        <ChatMessages\n                            messages={messages}\n                            loading={loading}\n                            onSend={handleSend}\n                            onReset={handleReset}\n                            user={user}\n                        />\n                    </Box>\n                </Box>\n            </Container>\n        </ResizableBox>\n    );\n}\n\nChatWindow.propTypes = {\n    toggleChatbot: PropTypes.func.isRequired,\n    toggleClearChatbot: PropTypes.func.isRequired,\n    messages: PropTypes.instanceOf(Array).isRequired,\n    setMessages: PropTypes.func.isRequired,\n    introMessage: PropTypes.shape({\n        role: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n    }).isRequired,\n    user: PropTypes.string.isRequired,\n    loading: PropTypes.bool.isRequired,\n    responseRef: PropTypes.shape({\n        current: PropTypes.arrayOf(PropTypes.shape({\n            role: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n        })).isRequired,\n    }).isRequired,\n    apiCall: PropTypes.func.isRequired,\n};\nexport default ChatWindow;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport { useSettingsContext } from 'AppComponents/Shared/SettingsContext';\nimport Api from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport ChatBotIcon from './ChatIcon';\nimport ChatWindow from './ChatWindow';\n\n/**\n * Renders AI Search Assistant view.\n *\n * @returns {JSX} renders Chat Icon view.\n */\nfunction AISearchAssistant() {\n    const { settings: { marketplaceAssistantEnabled, aiAuthTokenProvided } } = useSettingsContext();\n\n    const [showChatbot, setShowChatbot] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState(null);\n    const [chatbotDisabled, setChatbotDisabled] = useState(!marketplaceAssistantEnabled);\n    const [user, setUser] = useState('Anonymous User');\n    const responseRef = useRef([]);\n\n    const introMessage = {\n        role: 'assistant',\n        content: 'Hello! I\\'m here to assist you in discovering and obtaining information about APIs.'\n        + ' How can I help you?',\n    };\n\n    const pathName = window.location.pathname;\n    const { search, origin } = window.location;\n\n    const apiCall = (query) => {\n        setLoading(true);\n\n        if (marketplaceAssistantEnabled && aiAuthTokenProvided) {\n            const restApi = new Api();\n            const messagePayload = messages.slice(-10).map(({ apis, ...message }) => {\n                if (!apis) {\n                    return { role: message.role === 'assistant' ? 'assistant' : 'user', content: message.content };\n                }\n                const apiList = apis.map((api) => ({ apiName: api.name, version: api.version }));\n                return {\n                    role: message.role === 'assistant' ? 'assistant' : 'user',\n                    content: JSON.stringify({ response: message.content, apis: apiList }),\n                };\n            });\n\n            restApi.marketplaceAssistantExecute(query, messagePayload)\n                .then((result) => {\n                    const { apis } = result.body;\n\n                    const apiPaths = apis.map((api) => {\n                        return { apiPath: `${origin}${pathName}/${api.apiId}/overview${search}`, name: api.apiName, version: api.version };\n                    });\n                    responseRef.current = [...responseRef.current, { role: 'assistant', content: result.body.response, apis: apiPaths }];\n                    setMessages(responseRef.current);\n                    return result.body;\n                }).catch((error) => {\n                    let content;\n                    try {\n                        switch (error.response.status) {\n                            case 401: // Unauthorized\n                                content = 'Apologies for the inconvenience. It appears that your token is invalid or expired. Please'\n                                + ' provide a valid token or upgrade your subscription plan.';\n                                break;\n                            case 429: // Token limit exceeded\n                                content = 'Apologies for the inconvenience. It appears that the token limit has been exceeded.';\n                                break;\n                            default:\n                                content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                                + ' Marketplace Assistant. Please try again later.';\n                                break;\n                        }\n                    } catch (err) {\n                        content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                        + ' Marketplace Assistant. Please try again later.';\n                    }\n\n                    const errorMessage = { role: 'assistant', content };\n                    responseRef.current = [...responseRef.current, errorMessage];\n                    setMessages(responseRef.current);\n\n                    throw error;\n                }).finally(() => {\n                    setLoading(false);\n                });\n        }\n    };\n\n    const toggleChatbot = () => {\n        setShowChatbot(!showChatbot);\n    };\n\n    const handleDisableChatbot = () => {\n        setChatbotDisabled(true);\n        setMessages([introMessage]);\n    };\n\n    useEffect(() => {\n        if (messages) {\n            const messagesJSON = JSON.stringify({ messages, timestamp: Date.now() });\n            localStorage.setItem('messages', messagesJSON);\n        }\n    }, [messages]);\n\n    useEffect(() => {\n        try {\n            const loggedInUser = Utils.getUser();\n            if (loggedInUser) {\n                setUser(loggedInUser);\n            }\n            const storedData = localStorage.getItem('messages');\n            if (storedData) {\n                const { messages: storedMessages, timestamp } = JSON.parse(storedData);\n                if (storedMessages.length > 1) {\n                    if (storedMessages[storedMessages.length - 2].role !== 'Anonymous User') {\n                        if (Date.now() - timestamp > 60 * 60 * 1000) {\n                            setMessages([introMessage]);\n                            localStorage.setItem('messages',\n                                JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n                        } else {\n                            setMessages(storedMessages);\n                        }\n                    } else if (Date.now() - timestamp > 15 * 60 * 1000) {\n                        setMessages([introMessage]);\n                        localStorage.setItem('messages',\n                            JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n                    } else {\n                        setMessages(storedMessages);\n                    }\n                } else {\n                    setMessages(storedMessages);\n                }\n            } else {\n                setMessages([introMessage]);\n                localStorage.setItem('messages', JSON.stringify({ messages: [introMessage], timestamp: Date.now() }));\n            }\n        } catch (error) {\n            console.error('Error loading messages from localStorage:', error);\n        }\n    }, []);\n\n    return (\n        <Box>\n            {!chatbotDisabled && (\n                showChatbot ? (\n                    <Box position='absolute' bottom={24} right={24}>\n                        <ChatBotIcon\n                            toggleChatbot={toggleChatbot}\n                            handleDisableChatbot={handleDisableChatbot}\n                            chatbotDisabled={chatbotDisabled}\n                        />\n                    </Box>\n                ) : (\n                    <ChatWindow\n                        toggleChatbot={toggleChatbot}\n                        messages={messages}\n                        setMessages={setMessages}\n                        introMessage={introMessage}\n                        user={user}\n                        loading={loading}\n                        responseRef={responseRef}\n                        apiCall={apiCall}\n                    />\n                )\n            )}\n        </Box>\n    );\n}\n\nexport default AISearchAssistant;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\nimport AISearchAssistant from './Chat/AISearchAssistant';\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <>\n                        <CommonListing {...props} />\n                        <AISearchAssistant />\n                    </>\n                )}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:apiUuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default Apis;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst PREFIX = 'TagCloudListing';\n\nconst classes = {\n    appBar: `${PREFIX}-appBar`,\n    mainIconWrapper: `${PREFIX}-mainIconWrapper`,\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    content: `${PREFIX}-content`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    iconDefault: `${PREFIX}-iconDefault`,\n};\n\nconst Root = styled('main')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.appBar}`]: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.mainIconWrapper}`]: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`&.${classes.content}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.iconDefault}`]: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Renders tag cloud.\n * @returns {JSX} Tag cloud listing.\n */\nexport default function TagCloudListing() {\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    const tagsLimit = -1;\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags(tagsLimit);\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <Root className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage />}\n            </div>\n        </Root>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\nimport { useTheme } from '@mui/material';\n\nconst PREFIX = 'ApiTagThumb';\n\nconst classes = {\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    thumbWrapper: `${PREFIX}-thumbWrapper`,\n    deleteIcon: `${PREFIX}-deleteIcon`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    image: `${PREFIX}-image`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        alignSelf: 'flex-end',\n    },\n\n    [`& .${classes.thumbInfo}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n\n    [`& .${classes.contextBox}`]: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n\n    [`&.${classes.thumbWrapper}`]: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n\n    [`& .${classes.deleteIcon}`]: {\n        fill: 'red',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.image}`]: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n}));\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, style, mainPage,\n    } = props;\n    const theme = useTheme();\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <Root className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <center>\n                <div className={classNames(classes.thumbContent)}>\n                    <Link to={tagLink} className={classes.textWrapper}>\n                        <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                            {name}\n                        </Typography>\n                    </Link>\n                </div>\n            </center>\n        </Root>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default (ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Icon from '@mui/material/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst PREFIX = 'TagCloudListingTags';\n\nconst classes = {\n    mainTitle: `${PREFIX}-mainTitle`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    listContentWrapper: `${PREFIX}-listContentWrapper`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    linkTextWrapper: `${PREFIX}-linkTextWrapper`,\n    tagWiseThumbWrapper: `${PREFIX}-tagWiseThumbWrapper`,\n    filterTitle: `${PREFIX}-filterTitle`,\n    mainPageList: `${PREFIX}-mainPageList`,\n    mainPageAllApis: `${PREFIX}-mainPageAllApis`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.mainTitle}`]: {\n        paddingTop: 10,\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.listContentWrapper}`]: {\n        padding: `0 ${theme.spacing(3)}`,\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n\n    [`& .${classes.linkTextWrapper}`]: {\n        color: theme.palette.primary.main,\n    },\n\n    [`& .${classes.tagWiseThumbWrapper}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.filterTitle}`]: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n\n    [`& .${classes.mainPageList}`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n    [`& .${classes.mainPageAllApis}`]: {\n        width: '100%',\n    },\n}));\n\n/**\n * Tag cloud listing tags\n * @param {JSON} props properties passed from parent.\n * @returns {void}\n */\nfunction TagCloudListingTags(props) {\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter((item) => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <Root>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((keyInner) => {\n                    return (\n                        <ApiTagThumb\n                            key={keyInner}\n                            tag={apisTagCloudGroup[keyInner]}\n                            path={tagWiseURL}\n                            style={style}\n                            mainPage={mainPage}\n                        />\n                    );\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage }, 'tag-cloud-listing-wrapper')}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={(\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                )}\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </Root>\n\n    ) : (\n        <Root>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-group')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <div className={classNames(classes.mainTitle, 'apis-listing-tags-empty')}>\n                <Typography variant='subtitle1' gutterBottom align='center'>\n                    <FormattedMessage\n                        defaultMessage='API groups cannot be found'\n                        id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                    />\n                </Typography>\n                <Link to='apis/' className={classNames(classes.linkTextWrapper, 'apis-listing-tags-group-all-apis-link')}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='All Apis'\n                            id='Apis.Listing.TagCloudListingTags.allApis'\n                        />\n                    </Typography>\n                </Link>\n            </div>\n        </Root>\n    );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Grid from '@mui/material/Grid';\nimport ListItemText from '@mui/material/ListItemText';\nimport InputLabel from '@mui/material/InputLabel';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\nconst PREFIX = 'SubscribeToApi';\n\nconst classes = {\n    titleBar: `${PREFIX}-titleBar`,\n    buttonLeft: `${PREFIX}-buttonLeft`,\n    buttonRight: `${PREFIX}-buttonRight`,\n    title: `${PREFIX}-title`,\n    buttonsWrapper: `${PREFIX}-buttonsWrapper`,\n    legend: `${PREFIX}-legend`,\n    inputText: `${PREFIX}-inputText`,\n    buttonRightLink: `${PREFIX}-buttonRightLink`,\n    FormControl: `${PREFIX}-FormControl`,\n    fullWidth: `${PREFIX}-fullWidth`,\n    FormControlOdd: `${PREFIX}-FormControlOdd`,\n    quotaHelp: `${PREFIX}-quotaHelp`,\n    subscribeRoot: `${PREFIX}-subscribeRoot`,\n    subscribeRootSmall: `${PREFIX}-subscribeRootSmall`,\n    smallDisplay: `${PREFIX}-smallDisplay`,\n    smallDisplayFix: `${PREFIX}-smallDisplayFix`,\n    selectMenuRoot: `${PREFIX}-selectMenuRoot`,\n    appDropDown: `${PREFIX}-appDropDown`\n};\n\nconst StyledGrid = styled(Grid)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.titleBar}`]: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n\n    [`& .${classes.buttonLeft}`]: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n\n    [`& .${classes.buttonRight}`]: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n\n    [`& .${classes.title}`]: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n\n    [`& .${classes.buttonsWrapper}`]: {\n        marginTop: 40,\n    },\n\n    [`& .${classes.legend}`]: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n\n    [`& .${classes.inputText}`]: {\n        marginTop: 20,\n    },\n\n    [`& .${classes.buttonRightLink}`]: {\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.FormControl}`]: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.fullWidth}`]: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n\n    [`& .${classes.FormControlOdd}`]: {\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    [`& .${classes.quotaHelp}`]: {\n        position: 'relative',\n    },\n\n    [`&.${classes.subscribeRoot}`]: {\n        paddingLeft: theme.spacing(2),\n    },\n\n    [`&.${classes.subscribeRootSmall}`]: {\n        marginLeft: theme.spacing(-4),\n    },\n\n    [`& .${classes.smallDisplay}`]: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n\n    [`& .${classes.smallDisplayFix}`]: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n\n    [`& .${classes.selectMenuRoot}`]: {\n        margin: 0,\n        padding: 0,\n    },\n\n    [`& .${classes.appDropDown}`]: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        '&:hover': {\n            backgroundColor: 'unset',\n        },\n    }\n}));\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState({tierName:''});\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0]);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = value.tierName;\n                setPolicySelected(value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <StyledGrid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl\n                        variant=\"standard\"\n                        className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           aria-describedby='application-helper-text'\n                           options={applicationsList}\n                           disableClearable\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField variant=\"standard\" {...params} />}\n                         />\n                        <FormHelperText id='application-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        variant=\"standard\"\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.business.plan'\n                                defaultMessage='Business Plan'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                            id='application-policy'\n                            aria-describedby='policies-helper-text'\n                            options={throttlingPolicyList}\n                            disableClearable\n                            value={policySelected}\n                            getOptionLabel={(option) => option.tierName}\n                            getOptionSelected={(option, value) => option.tierName === value.tierName}\n                            onChange={(e, value) => handleChange('throttlingPolicy', e, value)}\n                            classes={{ root: classes.fullWidth }}\n                            renderInput={(params) => <TextField variant=\"standard\" {...params} />}\n                            groupBy={(option) => option.tierPlan === 'COMMERCIAL'  ? 'Commercial' : 'Free'}\n                            renderOption={(props, policy) => (\n                                <MenuItem {...props} value={policy.tierName} key={policy.tierName} className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            )}\n                        />\n                    </FormControl>\n                )}\n            </Grid>\n        </StyledGrid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default (subscribeToApi);\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n"],"names":["PREFIX","classes","root","link","linkNotActive","icon","selectedTagText","apiGroup","StyledPaper","styled","Paper","_ref","theme","padding","spacing","display","alignItems","cursor","marginRight","width","height","textIndent","color","palette","grey","ApiBreadcrumbs","props","useTheme","selectedTag","React","elevation","className","Breadcrumbs","RouterLink","to","custom","tagWise","active","style","Link","underline","Icon","FormattedMessage","defaultMessage","id","CustomIcon","media","content","actions","header","info","apiName","version","subtitle","StyledCard","Card","thumbnail","backgroundColor","minHeight","margin","transition","paddingBottom","justifyContent","whiteSpace","overflow","textOverflow","flex","textAlign","fontSize","DocThumbLegacy","_ref2","doc","state","useState","category","selectedIcon","backgroundIndex","imageObj","history","useHistory","detailsLink","apiUUID","name","sourceType","apiVersion","useEffect","window","URL","revokeObjectURL","onClick","handleCardClick","push","defaultApiImage","CardMedia","image","title","ImageGenerator","api","fixedIcon","key","CardContent","Typography","variant","component","propTypes","PropTypes","isRequired","flexDirection","flexGrow","wordBreak","DefinitionThumb","def","apiContext","apiProvider","apiType","StyledStyledEngineProvider","StyledEngineProvider","marginLeft","getContrastText","listView","tableBodyEvenBackgrund","marginTop","iconColor","listViewIconSize","ApiTableViewLegacy","constructor","super","_defineProperty","gridView","this","themeAdditions","muiTheme","overrides","MUIDataTable","marginBottom","paper","boxShadow","tableRoot","border","paddingRight","lineHeight","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","background","default","MuiMenuItem","MUIDataTableToolbar","flexWrap","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createTheme","adaptV4Theme","intl","setState","loading","xhrRequest","then","data","body","list","pagination","total","count","catch","error","response","setTenantDomain","code","Alert","formatMessage","finally","query","page","rowsPerPage","API","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","offset","search","getAllAPIs","localStorage","getItem","pageType","componentDidMount","context","getData","componentDidUpdate","prevProps","render","_this","social","showRating","columns","options","filter","customBodyRender","value","tableMeta","updateValue","tableViewObj","arguments","length","undefined","rowData","artifact","rowIndex","sort","label","apiId","type","strokeColor","businessOwner","avgRating","StarRatingBar","apiRating","isEditable","showSummary","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","pageInner","countInner","setItem","textLabels","toolbar","downloadCsv","print","viewColumns","customRowRender","_data","dataIndex","DocThumb","ApiThumb","customHeight","customWidth","download","customToolbar","Loading","NoApi","injectFirst","ThemeProvider","getMuiTheme","contextType","ApiContext","withSettings","injectIntl","textWrapper","listItemText","StyledLink","tagCloud","leftMenu","APICategoryThumb","path","categoryLink","categoryDesc","description","substring","Tooltip","placement","ListItem","button","ListItemIcon","ListItemText","primary","secondary","classNames","mainTitle","mainTitleWrapper","listContentWrapper","tagWiseThumbWrapper","filterTitle","Root","paddingTop","fontWeight","paddingLeft","titleBackground","infoBar","CategoryListingCategories","allCategories","gutterBottom","List","Object","keys","map","align","allTags","clickablePointer","maxWidth","ApiTagCloud","colorOptions","apisTagWithoutGroups","item","TagCloud","minSize","maxSize","tags","shuffle","tag","tagSearchURL","handleOnClick","card","apiDetails","suppressLinkStyles","row","thumbBy","thumbContent","thumbLeft","thumbRight","thumbInfo","thumbHeader","contextBox","thumbWrapper","deleteIcon","imageWrapper","imageOverlap","chipWrapper","ratingWrapper","unit","contentBackgroundColor","textDecoration","text","disabled","objectFit","alignSelf","parseInt","position","fill","bottom","windowURL","webkitURL","RecommendedApiThumbLegacy","MaterialIcons","isHover","toggleMouseOver","bind","Api","getAPIThumbnail","headers","iconJson","JSON","parse","size","url","createObjectURL","componentWillUnmount","getPathPrefix","event","showInfo","imageWidth","imageHeight","defaultImage","ImageView","src","alt","onMouseOver","onFocus","onMouseOut","onBlur","raised","handleRedirectToAPIOverview","transportType","Chip","defaultProps","rowImageOverride","apiNameLink","RecommendationsLegacy","assign","getApiRecommendations","RecommendedApiThumb","rowsPerPageOptions","rightIcon","buttonRight","ListingWrapper","appBar","mainIconWrapper","iconDefault","iconSelected","contentWithTags","contentWithoutTags","contentWithTagsHidden","LeftMenu","LeftMenuForSlider","sliderButton","rotatedText","recommendationsBar","apiListingWrapper","contentAreaWidth","borderBottom","A200","listGridSelectedColor","sliderWidth","fontFamily","typography","top","left","overflowY","sliderBackground","right","transform","transformOrigin","CommonListingLegacy","listType","prevState","showLeftMenu","enabled","settings","monetizationEnabled","isMonetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","getAllTags","console","log","apiCategories","location","user","AuthManager","getUser","tagCloudActive","strokeColorMain","splits","split","splitTagArray","tagPaneVisible","categoryPaneVisible","toggleLeftMenu","onKeyDown","TagCloudListingTags","IconButton","setListType","Provider","ApiTableView","Recommendations","Settings","_extends","Container","Box","Grid","container","xs","md","statusText","py","pb","Button","Image404","VerbElement","verb","resourceChipColors","toLowerCase","disableFocusRipple","borderColor","toUpperCase","table","centerItems","leftCol","iconAligner","iconTextWrapper","iconEven","iconOdd","heading","heading1","emptyBox","summaryRoot","actionPanel","Box2","Box3","urlPaper","input","avatar","iconStyle","minWidth","iconOddColor","main","borderRadius","maxHeight","SolaceTopicsInfo","apiUuid","useParams","application","setApplication","environment","setEnvironment","selectedProtocol","setSelectedProtocol","envsListOfApplication","setEnvsListOfApplication","selectedEndpoint","setSelectedEndpoint","protocolsListOfEnvironments","setProtocolsListOfEnvironments","topics","setTopics","applicationList","setApplicationList","notFound","setNotFound","urlCopied","setUrlCopied","topicCopied","setTopicCopied","apiTopics","setApiTopics","apiPubTopics","setApiPubTopics","apiSubTopics","setApiSubTopics","useIntl","onTopicCopy","setTimeout","setPubAndSubTopics","allTopics","allApiTopics","apiPubTopicList","publishTopics","t","e","toString","includes","apiSubTopicList","subscribeTopics","client","promisedApi","getAllTopics","apiTopicList","obj","entry","parts","getSubscriptionAdditionalInfo","appInner","applicationName","solaceDeployedEnvironments","solaceURLs","protocol","endpointURL","SolaceTopicsObject","mqttSyntax","defaultSyntax","status","ResourceNotFound","setProtocolTopics","selectedEnv","SubscriptionNotFound","mt","TextField","select","fullWidth","onChange","selectedApp","target","app","helperText","SelectProps","native","environmentDisplayName","upperCaseString","pt","Divider","mr","InputBase","inputProps","Avatar","sizes","interactive","navigator","clipboard","writeText","p","Breadcrumb","useContext","breadcrumbDocument","pages","route","selected","setSelected","detectCurrentMenu","locationLocal","pathname","i","test1","RegExp","test2","match","listen","VerticalDivider","separator","NavigateNextIcon","MUILink","document","styles","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","updateSubscriptionData","stepsLength","handleCancel","handleTest","appCreateFormWrapper","warningIcon","throttlingPolicyList","setThrottlingPolicyList","applicationRequest","setApplicationRequest","throttlingPolicy","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","getKeyManagers","Promise","all","tierResponse","allAttributes","keyManagers","throttlingPolicyListLocal","newRequest","_objectSpread","allAppAttr","hidden","responseKeyManagerList","hasValidKMInner","x","px","ApplicationCreateForm","updateApplicationRequest","validateName","trim","resolve","reject","Error","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","chip","index","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","applicationId","PROCEED","BLOCKED","message","mb","ml","InlineMessage","subscriptionRequest","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","tierName","SubscribeToApi","applicationsAvailable","updateSubscriptionRequest","subscribeToApplication","subscribe","subscriptionId","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","TabPanel","children","other","_objectWithoutProperties","_excluded","role","tokenWrapper","titleSub","boxWrapper","stepComponents","CreateAppStep","SubscribeToAppStep","setNextActive","keyManager","setKeyManager","keyRequest","setKeyRequest","keyType","supportedGrantTypes","callbackUrl","additionalProperties","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerListDefault","filteredGrantTypes","availableGrantTypes","k","newKeyRequest","lg","FormHelperText","Table","TableBody","TableRow","TableCell","scope","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","m","generateKeys","Application","keyState","setKeyType","selectedTab","setSelectedTab","subscriptionScopes","setSubscriptionScopes","accessTokenRequest","setAccessTokenRequest","timeout","scopesSelected","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","updateAccessTokenRequest","generateAccessToken","generateToken","createdToken","my","mx","ViewToken","token","isOauth","completeStep","Wizard","Component","stepStatus","steps","redirect","CurrentStepComponent","Stepper","activeStep","Step","StepLabel","handleNext","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","AsyncApiConsole","Overview","Documents","Credentials","Comments","Sdk","AsyncApiDefinition","ApiChat","LoadableSwitch","withRouter","setbreadcrumbDocument","apiChatEnabled","params","redirectURL","tryoutRoute","CONSTANTS","API_TYPES","GRAPHQL","Route","WS","WEBSUB","SSE","ASYNC","Suspense","fallback","Progress","Switch","Redirect","exact","from","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalLeftMinView","leftMenuVerticalRight","leftMenuVerticalRightMinView","leftLInkMain","leftLInkMainText","detailsContent","contentExpandView","shiftLeft","contentLoader","contentLoaderRightMenu","expandIcon","expandIconMinView","accordianSummary","accordianSummaryMinView","accordionDetails","accordionDetailsMinView","leftMenuVerticalRightDrawerIcon","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","breakpoints","down","borderRight","rootBackground","DetailsLegacy","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","api_uuid","user1","User","open","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","applications","subscribedApplications","element","policy","applicationInfo","subscribedAppIds","sub","filteredApp","overviewHiden","xo","tryOutExpanded","setDetailsAPI","handleDrawerClose","handleDrawerOpen","getSettings","prevApiUuid","newApiUuid","setUser","isAsyncAPI","rootIconSize","rootIconTextVisible","rootIconVisible","apiDetailPages","showCredentials","showComments","showTryout","showDocuments","showSdks","showAsyncSpecification","showSolaceTopics","prefix","sufix","globalStyle","pathPrefix","isWidget","searchParams","isAsyncApi","isSubValidationDisabled","DEFAULT_SUBSCRIPTIONLESS_PLAN","Helmet","LeftMenuItem","iconText","gatewayVendor","gatewayType","Accordion","expanded","_event","AccordionSummary","ExpandMoreIcon","AccordionDetails","QuestionAnswerIcon","ArrowBackIosIcon","ArrowForwardIosIcon","ChatBotIcon","toggleChatbot","handleDisableChatbot","chatbotDisabled","showCloseButton","setShowCloseButton","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","Fab","ChatIcon","handleCloseIconClick","CloseIcon","stroke","ChatInput","onSend","setContent","notificationOpen","setNotificationOpen","marketplaceAssistantEnabled","aiAuthTokenProvided","useSettingsContext","handleSend","placeholder","shiftKey","preventDefault","keyCode","multiline","maxRows","InputProps","endAdornment","InputAdornment","SendIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleCloseNotification","sx","ChatMessage","outerBoxRef","useRef","colorMap","profileStyle","messageStyle","wordWrap","PersonIcon","charAt","ref","apis","light","dark","getColorFromLetter","letter","charLightColor","charNumber","String","fromCharCode","r","g","b","Utils","hexToRGBHash","rgbToHex","Math","ceil","href","apiPath","rel","shape","string","arrayOf","Loader","ChatMessages","messagesEndRef","subjectLine","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","authTokenNotProvidedWarning","marketplaceAssistantDocLink","LaunchIcon","severity","bgcolor","instanceOf","Array","bool","func","mainHeader","chatbotNameBox","chatbotName","borderLeft","alpha","common","black","Header","toggleFullScreen","isClicked","FullscreenExitIcon","FullscreenIcon","RestartAltTwoToneIcon","ExpandMoreTwoToneIcon","predefinedAnswers","hi","hiii","hello","hey","greetings","thanks","bye","goodbye","calculateStringSimilarity","string1","string2","str1","str2","subsequenceMap","Map","subsequence","substr","set","has","matchCount","j","ChatWindow","toggleClearChatbot","setMessages","introMessage","responseRef","apiCall","setIsClicked","apiLimitExceeded","setApiLimitExceeded","apisCount","setApisCount","setLimit","setWindowSize","innerWidth","innerHeight","getMarketplaceAssistantApiCount","apiCount","apiLimit","handleResize","addEventListener","removeEventListener","ResizableBox","minConstraints","maxConstraints","resizeHandles","zIndex","handle","handleClear","async","inputString","bestMatch","bestScore","searchString","entries","comparisonString","score","findBestMatchingAnswer","onReset","showChatbot","setShowChatbot","setLoading","setChatbotDisabled","pathName","origin","messagesJSON","stringify","timestamp","Date","now","loggedInUser","storedData","storedMessages","messagePayload","apiList","marketplaceAssistantExecute","result","apiPaths","err","errorMessage","TagCloudListing","CommonListing","AISearchAssistant","Details","setAllTags","mainPage","ApiTagThumb","tagLink","linkTextWrapper","mainPageList","mainPageAllApis","showAllApis","apisTagCloudGroup","keyInner","titleBar","buttonLeft","buttonsWrapper","legend","inputText","buttonRightLink","FormControl","FormControlOdd","quotaHelp","subscribeRoot","subscribeRootSmall","smallDisplay","smallDisplayFix","selectMenuRoot","appDropDown","StyledGrid","borderBottomWidth","borderBottomStyle","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","renderSmall","handleChange","field","InputLabel","shrink","for","Autocomplete","disableClearable","getOptionLabel","option","renderInput","htmlFor","getOptionSelected","groupBy","tierPlan","renderOption","MenuItem","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","selectEmpty","WrappedComponent","SettingsConsumer"],"sourceRoot":""}