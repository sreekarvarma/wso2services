{"version":3,"file":"2740.a747aabc32dc5c64cb70.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Apis/Listing/NoApi.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/InlineMessage.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Shared/LeftMenuItem.jsx"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst PREFIX = 'NoApi';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    messageWrapper: `${PREFIX}-messageWrapper`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        flexGrow: 1,\n    },\n\n    [`& .${classes.messageWrapper}`]: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\n/**\n * Render no api section\n * @returns {void}\n */\nexport default function NoApi() {\n    const theme = useTheme();\n\n    return (\n        <Root className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography id='itest-no-apis' variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Root>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport FormControl from '@mui/material/FormControl';\nimport Typography from '@mui/material/Typography';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Checkbox from '@mui/material/Checkbox';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport TextField from '@mui/material/TextField';\n\nconst PREFIX = 'Tokens';\n\nconst classes = {\n    FormControl: `${PREFIX}-FormControl`,\n    FormControlOdd: `${PREFIX}-FormControlOdd`,\n    quotaHelp: `${PREFIX}-quotaHelp`,\n    chips: `${PREFIX}-chips`,\n    chip: `${PREFIX}-chip`\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.FormControl}`]: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n\n    [`& .${classes.FormControlOdd}`]: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n\n    [`& .${classes.quotaHelp}`]: {\n        position: 'relative',\n    },\n\n    [`& .${classes.chips}`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n    [`& .${classes.chip}`]: {\n        margin: theme.spacing(0.25),\n    }\n}));\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize='small' />;\nconst checkedIcon = <CheckBoxIcon fontSize='small' />;\n\n/**\n * Used to display generate access token UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <Root>\n            <FormControl\n                variant=\"standard\"\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <Autocomplete\n                    multiple\n                    limitTags={5}\n                    id='scopesSelected'\n                    name='scopesSelected'\n                    options={subscriptionScopes}\n                    noOptionsText='No scopes available'\n                    disabled={subscriptionScopes.length === 0}\n                    disableCloseOnSelect\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={(e, newValue) => handleChange('scopesSelected', { target: { value: newValue } })}\n                    renderOption={(props, option, { selected }) => (\n                        <li {...props}>\n                            <Checkbox\n                                id={'access-token-scope-' + option}\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{marginRight: 8}}\n                                checked={selected}\n                            />\n                            {option}\n                        </li>\n                    )}\n                    renderInput={(params) => (\n                        <TextField {...params}\n                            margin='dense'\n                            variant='outlined'\n                                   size='small'\n                            label={<FormattedMessage\n                                htmlFor='quota-helper'\n                                className={classes.quotaHelp}\n                                id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                                defaultMessage='Scopes'\n                            />}\n                        />\n                    )}\n                />\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </Root>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default (tokens);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FileCopy from '@mui/icons-material/FileCopy';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nconst PREFIX = 'ViewSecret';\n\nconst classes = {\n    bootstrapRoot: `${PREFIX}-bootstrapRoot`,\n    bootstrapInput: `${PREFIX}-bootstrapInput`,\n    epWrapper: `${PREFIX}-epWrapper`,\n    prodLabel: `${PREFIX}-prodLabel`,\n    contentWrapper: `${PREFIX}-contentWrapper`,\n    root: `${PREFIX}-root`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.bootstrapRoot}`]: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n\n    [`& .${classes.bootstrapInput}`]: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n\n    [`& .${classes.epWrapper}`]: {\n        display: 'flex',\n        marginTop: 20,\n    },\n\n    [`& .${classes.prodLabel}`]: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n\n    [`& .${classes.contentWrapper}`]: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n\n    [`&.${classes.root}`]: {\n        marginBottom: 20,\n    }\n}));\n\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const {  secret, intl } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <Root className={classes.root}>\n                <InlineMessage type='warning'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        variant=\"standard\"\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            secretCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <IconButton\n                            id='copy-to-clipbord-icon'\n                            aria-label='Copy to clipboard'\n                            size=\"large\"\n                            onClick={() => {\n                                navigator.clipboard.writeText(secret.consumerSecret).then(this.onCopy('secretCopied'))\n                            }}\n                        >\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </Root>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl((ViewSecret));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@mui/material/Tooltip';\nimport FileCopy from '@mui/icons-material/FileCopy';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport IconButton from '@mui/material/IconButton';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\nconst PREFIX = 'ViewToken';\n\nconst classes = {\n    bootstrapRoot: `${PREFIX}-bootstrapRoot`,\n    bootstrapInput: `${PREFIX}-bootstrapInput`,\n    epWrapper: `${PREFIX}-epWrapper`,\n    secretWrapper: `${PREFIX}-secretWrapper`,\n    prodLabel: `${PREFIX}-prodLabel`,\n    contentWrapper: `${PREFIX}-contentWrapper`,\n    root: `${PREFIX}-root`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.bootstrapRoot}`]: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n\n    [`& .${classes.bootstrapInput}`]: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n\n    [`& .${classes.epWrapper}`]: {\n        display: 'flex',\n        marginTop: 20,\n    },\n\n    [`& .${classes.secretWrapper}`]: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n\n    [`& .${classes.prodLabel}`]: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n\n    [`& .${classes.contentWrapper}`]: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n\n    [`&.${classes.root}`]: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    }\n}));\n\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            token, consumerSecret, isTokenExchange, intl, isResidenceTokenAvailable,\n        } = this.props;\n        const { tokenCopied } = this.state;\n\n        if (isTokenExchange && !isResidenceTokenAvailable) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewCurl.error'\n                        defaultMessage='Please generate the Consumer Key and Secret for Residence Key Manager with selecting the urn:ietf:params:oauth:grant-type:token-exchange grant type in\n                                             order to use the token Exchange Approach. '\n                    />\n                </Typography>\n            )\n        } else {\n            return (\n            <Root className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{consumerSecret}}/>\n                    </div>\n                )}\n                <InlineMessage type='warning'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'If the token type is JWT or API Key, please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        variant=\"standard\"\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            tokenCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <IconButton\n                            id = 'copy-to-clipbord-icon'\n                            aria-label='Copy to clipboard'\n                            size=\"large\"\n                            onClick={() => {navigator.clipboard.writeText(token.accessToken).then(this.onCopy('tokenCopied'))}}\n                        >\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </IconButton>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of'\n                    />\n                    {` ${token.validityTime} `}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage='seconds'\n                    />\n                    {' '}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage='and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n                    .\n                </FormHelperText>\n            </Root>\n        )};\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default injectIntl((ViewToken));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertTitle } from '@mui/material';\n\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nfunction InlineMessage(props) {\n    const { type, title, variant } = props;\n    const messageType = type || 'info';\n    return (\n        <Alert variant={variant || \"standard\"} severity={messageType}>\n            {title && (<AlertTitle>{title}</AlertTitle>)}\n            {props.children}\n        </Alert>\n\n    );\n}\n\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default InlineMessage;\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@mui/material/Typography';\nimport CustomIcon from './CustomIcon';\nimport {useTheme} from \"@mui/material\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nfunction BootstrapTooltip(props) {\n\n    return <Tooltip arrow classes={(theme) => ({\n        arrow: {\n            color: theme.palette.common.black,\n        },\n        tooltip: {\n            backgroundColor: theme.palette.common.black,\n        },\n    })} {...props} />;\n}\n\nconst PREFIX = 'LeftMenuItem';\n\nconst classes = {\n    leftLInkText: `${PREFIX}-leftLInkText`,\n    leftLInkText_IconLeft: `${PREFIX}-leftLInkText_IconLeft`,\n    LeftMenu: `${PREFIX}-LeftMenu`,\n    leftLInk: `${PREFIX}-leftLInk`,\n    leftLink_Icon: `${PREFIX}-leftLink_Icon`,\n    leftLink_IconLeft: `${PREFIX}-leftLink_IconLeft`,\n    noIcon: `${PREFIX}-noIcon`,\n    leftLInkText_NoText: `${PREFIX}-leftLInkText_NoText`,\n    leftLInkText_NoTextWhenSmall: `${PREFIX}-leftLInkText_NoTextWhenSmall`,\n    submenu: `${PREFIX}-submenu`\n};\n\nconst StyledBootstrapTooltip = styled(BootstrapTooltip)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.leftLInkText}`]: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n\n    [`& .${classes.leftLInkText_IconLeft}`]: {\n        paddingLeft: 10,\n    },\n\n    [`& .${classes.LeftMenu}`]: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n\n    [`& .${classes.leftLInk}`]: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.leftLink_Icon}`]: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n\n    [`& .${classes.leftLink_IconLeft}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.noIcon}`]: {\n        display: 'none',\n    },\n\n    [`& .${classes.leftLInkText_NoText}`]: {\n        display: 'none',\n    },\n\n    [`& .${classes.leftLInkText_NoTextWhenSmall}`]: {\n        [theme.breakpoints.down('md')]: {\n            display: 'none !important',\n        }\n    },\n\n    [`& .${classes.submenu}`]: {\n        paddingLeft: 12,\n        [theme.breakpoints.down('md')]: {\n            paddingLeft: 0,\n            color: theme.palette.grey[500],\n        }\n    }\n}));\n\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        Icon, to, history, text, route, submenu, open, id,\n    } = props;\n    const theme = useTheme();\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <StyledBootstrapTooltip title={props.text} placement='right'>\n            <div>\n                <Link\n                    className={classNames(\n                        classes.leftLInk,\n                        {\n                            [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                            [classes.submenu]: submenu,\n                            'selected': selected,\n                        },\n                        'leftLInk',\n                    )}\n                    to={to}\n                    style={{ backgroundColor: activeBackground }}\n                    title={text}\n                    id={id}\n                >\n                    {\n                        // If the icon pro ( which is coming from the React Material library )\n                        // is coming we add css class and render.\n                        // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                        // allow customers theme\n                        // the product without compiling.\n                        Icon ? (\n                            React.cloneElement(Icon, {\n                                className: classNames(\n                                    classes.leftLink_Icon,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                        [classes.submenu]: submenu,\n                                    },\n                                    'leftLink_Icon',\n                                ),\n                            })\n                        ) : (\n                            // We can also add custom icons\n                            <CustomIcon\n                                strokeColor={submenu ? '#cccccc' : strokeColor}\n                                width={submenu ? iconSize - 10 : iconSize}\n                                height={submenu ? iconSize - 10 : iconSize}\n                                icon={props.iconText}\n                                aria-label={text + ' icon'}\n                                className={classNames(\n                                    classes.leftLInk,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                    },\n                                    'leftLink_Icon',\n                                )}\n                            />\n                        )\n                    }\n                    {open && (\n                        <Typography\n                            className={classNames(\n                                classes.leftLInkText,\n                                {\n                                    [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                    [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                                },\n                                classes.leftLInkText_NoTextWhenSmall,\n                                'leftLInkText',\n                            )}\n                        >\n                            {props.text}\n                        </Typography>\n                    )}\n                    {!open && (\n                        <Typography\n                            className={classNames(\n                                {\n                                    [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                    [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                                },\n                                classes.leftLInkText_NoText,\n                                'leftLInkText',\n                            )}\n                        />\n                    )}\n\n                </Link>\n            </div>\n        </StyledBootstrapTooltip>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n    id: PropTypes.string.isRequired,\n};\nexport default withRouter((LeftMenuItem));\n"],"names":["PREFIX","classes","root","messageWrapper","Root","styled","_ref","theme","flexGrow","marginTop","spacing","padding","textAlign","color","palette","text","secondary","NoApi","useTheme","React","className","Grid","container","item","xs","alt","src","app","context","custom","noApiImage","Typography","id","variant","gutterBottom","FormattedMessage","defaultMessage","FormControl","FormControlOdd","quotaHelp","chips","chip","width","backgroundColor","background","paper","position","display","flexWrap","margin","icon","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","tokens","props","accessTokenRequest","subscriptionScopes","disabled","length","Autocomplete","multiple","limitTags","name","options","noOptionsText","disableCloseOnSelect","value","scopesSelected","onChange","e","newValue","handleChange","field","event","updateAccessTokenRequest","newRequest","_objectSpread","target","currentTarget","keyType","renderOption","option","_ref2","selected","Checkbox","style","marginRight","checked","renderInput","params","TextField","_extends","size","label","htmlFor","contextTypes","intl","PropTypes","isRequired","bootstrapRoot","bootstrapInput","epWrapper","prodLabel","contentWrapper","borderRadius","common","white","border","height","transition","transitions","create","fontFamily","join","borderColor","boxShadow","lineHeight","maxWidth","contentAreaWidth","leftMenu","marginBottom","ViewSecret","constructor","arguments","_defineProperty","secretCopied","this","setState","that","elementName","setTimeout","getTokeScopesString","tokenScopes","render","secret","state","InlineMessage","type","component","defaultValue","consumerSecret","multiline","rows","InputProps","disableUnderline","input","InputLabelProps","shrink","bootstrapFormLabel","Tooltip","title","formatMessage","placement","IconButton","onClick","navigator","clipboard","writeText","then","onCopy","FileCopy","propTypes","injectIntl","secretWrapper","flex","apiDetailPages","tokenTextBoxBackground","getContrastText","whiteSpace","ViewToken","tokenCopied","token","isTokenExchange","isResidenceTokenAvailable","isOauth","for","accessToken","fullWidth","FormHelperText","validityTime","defaultProps","messageType","Alert","severity","AlertTitle","children","leftLInkText","leftLInkText_IconLeft","LeftMenu","leftLInk","leftLink_Icon","leftLink_IconLeft","noIcon","leftLInkText_NoText","leftLInkText_NoTextWhenSmall","submenu","StyledBootstrapTooltip","arrow","black","tooltip","textTransform","overflow","textOverflow","paddingLeft","typography","bottom","left","top","paddingTop","paddingBottom","paddingRight","caption","cursor","textDecoration","alignItems","justifyContent","iconSize","breakpoints","down","grey","LeftMenuItem","setSelected","useState","Icon","to","history","route","open","routeToCheck","strokeColor","ditectCurrentMenu","location","undefined","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","Link","classNames","CustomIcon","iconText","withRouter"],"sourceRoot":""}