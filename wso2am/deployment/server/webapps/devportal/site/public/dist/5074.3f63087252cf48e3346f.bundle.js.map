{"version":3,"file":"5074.3f63087252cf48e3346f.bundle.js","mappings":"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AAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,MAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,MAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,MAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,OAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,SAAS,EAAQ,QAC3B2B,EAAU3B,S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AM,IAAIC,QAAQ,4BAA6B,OACzD,EACIyd,EAAmB,SAAUlgB,GAC/B,OAAO,IAAIgP,OAAO,aAAehP,EAAI2M,IAAIiD,GAAQpF,KAAK,KAAO,aAC/D,EACI2V,EAAW,CACb,iBAAkB,CAChB,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WACA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAGJ5gB,OAAOkT,KAAK0N,GAAUlD,SAAQ,SAAUmD,GACtCP,EAAOO,GAAGnS,QAAUiS,EAAiBC,EAASC,GAChD,IAyNAP,EAAOI,YAAYhS,QAAUiS,EAxNX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YACA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YACA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBACA,kBACA,cACA,gBACA,gBACA,kBACA,cACA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAGF3U,EAAMe,UAAUuT,OAASA,CAC1B,CAr5BA,CAq5BEtU,EACL,CA15BApK,EAAOC,QAAUye,EACjBA,EAAOxT,YAAc,SACrBwT,EAAOtR,QAAU,2BCCjB,SAAS8R,EAAO9U,IACb,SAAWA,GAMVA,EAAMe,UAAiB,MAAI,CACzB1H,QAAS,CACPqJ,QAAS,aAEXD,OAAQ,CACNC,QAAS,UACTS,QAAQ,GAEV,iBAAkB,CAChBT,QAAS,mBACTxB,MAAO,UAET,iBAAkB,CAChBwB,QAAS,OACTxB,MAAO,aAET2B,OAAQ,MACRC,SAAU,gCACVC,YAAa,QACbiB,SAAU,QACV,eAAgB,CACdtB,QAAS,YACTxB,MAAO,QAGZ,CA/BA,CA+BElB,EACL,CApCApK,EAAOC,QAAUif,EACjBA,EAAOhU,YAAc,SACrBgU,EAAO9R,QAAU,2BCCjB,SAAS+R,EAAuB/U,GAC9BA,EAAMe,UAAU,4BAA8Bf,EAAMe,UAAUjL,OAC5D,QACA,CACEuD,QAAS,SACTuJ,QACE,oEACFE,SAAU,kDAGP9C,EAAMe,UAAU,4BAA4B,cACnDf,EAAMe,UAAU6C,aAAa,2BAA4B,UAAW,CAClEuQ,KAAM,CACJzR,QACE,gGACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNY,SAAU,CACRtB,QAAS,yDACTU,OAAQ,CACNN,SAAU,IACVF,QAAS,OACTG,YAAa,aAGjBA,YAAa,OAGjBiS,OAAQ,CAENtS,QAAS,kDACTC,YAAY,EACZzB,MAAO,UACPkC,OAAQ,CACNL,YAAa,OAIrB,CA1CAnN,EAAOC,QAAUkf,EACjBA,EAAuBjU,YAAc,yBACrCiU,EAAuB/R,QAAU,2BCCjC,SAASiS,EAAKjV,IACX,SAAWA,GACVA,EAAMe,UAAUkU,KAAOjV,EAAMe,UAAUjL,OAAO,aAAc,CAAC,GAC7DkK,EAAMe,UAAU6C,aAAa,OAAQ,UAAW,CAC9CpK,KAAM,CACJ,CACEkJ,QACE,sEACFxB,MAAO,UAIblB,EAAMe,UAAUkU,KAAK,qBAAqBvS,QACxC,8KACK1C,EAAMe,UAAUkU,KAAgB,UACvCjV,EAAMe,UAAU6C,aAAa,OAAQ,WAAY,CAC/C,mBAAoB,CAClBlB,QAAS,YACTxB,MAAO,iBAGNxM,MAAMF,QAAQwL,EAAMe,UAAUkU,KAAKrS,WACtC5C,EAAMe,UAAUkU,KAAKrS,QAAU,CAAC5C,EAAMe,UAAUkU,KAAKrS,UAEvD5C,EAAMe,UAAUkU,KAAKrS,QAAQsS,QAC3B,CACExS,QAAS,kDACTC,YAAY,GAEd,CACED,QACE,wGACFC,YAAY,GAGjB,CAlCA,CAkCE3C,EACL,CAvCApK,EAAOC,QAAUof,EACjBA,EAAKnU,YAAc,OACnBmU,EAAKjS,QAAU,2BCCf,SAASmS,EAAQnV,GACfA,EAAMe,UAAUoU,QAAU,CACxB,gBAAiB,CACfzS,QAAS,0BACTxB,MAAO,UAETuB,OAAQ,CACNC,QACE,gGACFU,OAAQ,CACN/J,QAAS,CACPqJ,QAAS,wBACTC,YAAY,KAIlBtJ,QAAS,CACPqJ,QAAS,MACTS,QAAQ,GAEVY,QAAS,+BACTlB,OAAQ,yDACRD,QAAS,CAEP,oEACA,gIACA,4VACA,+JAEFE,SAAU,CACR,qDACA,CAEEJ,QAAS,sBACTC,YAAY,IAGhBI,YAAa,qBAEjB,CA1CAnN,EAAOC,QAAUsf,EACjBA,EAAQrU,YAAc,UACtBqU,EAAQnS,QAAU,0BCClB,SAASoS,EAAOpV,GACdA,EAAMe,UAAUqU,OAASpV,EAAMe,UAAUjL,OAAO,QAAS,CACvDuD,QAAS,CACP,CACEqJ,QAAS,kCACTC,YAAY,EACZQ,QAAQ,GAEV,CACET,QAAS,mBACTC,YAAY,EACZQ,QAAQ,IAGZV,OAAQ,CACNC,QAAS,8DACTS,QAAQ,GAEV,aAAc,CACZT,QACE,yHACFC,YAAY,EACZS,OAAQ,CACNN,SAAU,QACVC,YAAa,OAGjBH,QACE,ooBACFC,OAAQ,CACN,iCACA,uBACA,oDACA,kCAEFC,SACE,6GAEJ9C,EAAMe,UAAU6C,aAAa,SAAU,UAAW,CAChDkK,aAAc,CACZpL,QAAS,gBACTC,YAAY,EACZzB,MAAO,WACPkC,OAAQ,CACNsE,UAAW,CACThF,QAAS,8CACTC,YAAY,EACZzB,MAAO,eAKflB,EAAMe,UAAU6C,aAAa,SAAU,cAAe,CACpD,yBAA0B,CACxBlB,QAAS,wBACTxB,MAAO,aAGXlB,EAAMe,UAAU6C,aAAa,SAAU,SAAU,CAC/CY,WAAY,CACV9B,QAAS,YACTS,QAAQ,EACRC,OAAQ,CACNL,YAAa,YACb,aAAc,CACZL,QAAS,+BACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,UACTU,OAAQpD,EAAMe,UAAUqU,UAI9B3a,KAAM,CACJiI,QACE,4EACFS,QAAQ,IAGd,CAnFAvN,EAAOC,QAAUuf,EACjBA,EAAOtU,YAAc,SACrBsU,EAAOpS,QAAU,iCCHjB,IAAI4O,EAA4B,EAAQ,OAIxC,SAASyD,EAAIrV,GACXA,EAAMY,SAASgR,GACd,SAAW5R,GAMV,IAHA,IAAIsV,EACF,iGACGnd,OACI/B,EAAI,EAAGA,EAAI,EAAGA,IACrBkf,EAAWA,EAASpe,QAAQ,WAAW,WACrC,OAAOoe,CACT,IAEFA,EAAWA,EAASpe,QAAQ,UAAW,UAAUiB,QACjD,IAAIkd,EAAM,CACRhc,QAAS,kBACToJ,OAAQ,CACN,CAEEC,QAAS,iCACTS,QAAQ,GAEV,CACET,QAASe,OACP,+DAA+DtL,OAAOjB,QACpE,WACA,WACE,OAAOoe,CACT,KAGJnS,QAAQ,EACRC,OAAQ,CACNwG,cAAe,CACblH,QAASe,OACP,oDAAoDtL,OAAOjB,QACzD,WACA,WACE,OAAOoe,CACT,KAGJ3S,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,YACTxB,MAAO,eAEToG,KAAM,UAMhB1E,QAAS,aACTmB,QAAS,qBACT,mBAAoB,CAClBrB,QAAS,uBACTC,YAAY,EACZzB,MAAO,YAETgD,SAAU,iBACVrB,OAAQ,oBACRC,SACE,4EACFC,YAAa,iBAEfsS,EAAI5S,OAAO,GAAGW,OAAOwG,cAAcxG,OAAOkE,KAAO+N,EACjDrV,EAAMe,UAAUsU,IAAM,CACpB,cAAe,CAEb3S,QAAS,eACTxB,MAAO,WAET,gBAAiB,CACfwB,QAAS,cACTU,OAAQ,CACNsE,UAAW,CACThF,QAAS,uBACTC,YAAY,EACZzB,MAAO,WAET6B,YAAa,cACb3K,QAAS,CACPsK,QAAS,eACTxB,MAAO,MACPkC,OAAQiS,KAId,oBAAqB,CACnB3S,QAAS,kBACTU,OAAQ,CACNL,YAAa,YACb3K,QAAS,CACPsK,QAAS,eACTxB,MAAO,MACPkC,OAAQiS,MAKhBrV,EAAMoC,MAAMmF,IAAI,mBAAmB,SAAU1F,GAE3C,IAAIa,EAAUe,OACZ,mEAAmEtL,OAAOjB,QACxE,WACA,WACE,OAAOoe,CACT,IAEF,MAEFtV,EAAMe,UAAU,qBAAqBiR,kBACnCnQ,EACA,MACAa,EAEJ,IACA1C,EAAMoC,MAAMmF,IAAI,kBAAkB,SAAU1F,GAC1C7B,EAAMe,UAAU,qBAAqBkR,qBAAqBpQ,EAAK,MACjE,GACD,CAxHA,CAwHE7B,EACL,CA9HApK,EAAOC,QAAUwf,EACjBA,EAAIvU,YAAc,MAClBuU,EAAIrS,QAAU,2BCCd,SAASuS,EAAIvV,GAGXA,EAAMe,UAAUwU,IAAM,CACpBlM,MAAO,CACL3G,QAAS,sCACTS,QAAQ,EACRC,OAAQ,CACNmS,IAAK,CACH7S,QAAS,0CACTC,YAAY,EACZS,OAAQ,MAEVL,YAAa,UAGjB1J,QAAS,CACPqJ,QAAS,MACTS,QAAQ,GAEVV,OAAQ,CACNC,QACE,sFACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNoS,aAAc,CACZ9S,QAAS,YACTC,YAAY,EACZzB,MAAO,iBAIb0B,QACE,wMACFmB,QAAS,qBACTG,SAAU,wBACVrB,OAAQ,CACNH,QACE,uFACFC,YAAY,GAEd6S,aAAc,CACZ9S,QAAS,YACTC,YAAY,EACZzB,MAAO,eAET4B,SAAU,kCACVC,YAAa,iBAEf/C,EAAMe,UAAUwU,IAAIlM,MAAMjG,OAAOmS,IAAInS,OAASpD,EAAMe,UAAUwU,GAChE,CAtDA3f,EAAOC,QAAU0f,EACjBA,EAAIzU,YAAc,MAClByU,EAAIvS,QAAU,2BCCd,SAASyS,EAAMzV,GACbA,EAAMe,UAAU0U,MAAQ,CACtBpc,QAAS,kBACToJ,OAAQ,CACNC,QAAS,iBACTS,QAAQ,GAEVP,QAAS,wBACT/I,SAAU,UACV6b,SAAU,CACRhT,QAAS,UACTC,YAAY,EACZzB,MAAO,UAGT6B,YAAa,OAEjB,CApBAnN,EAAOC,QAAU4f,EACjBA,EAAM3U,YAAc,QACpB2U,EAAMzS,QAAU,2BCChB,SAAS2S,EAAS3V,GAChBA,EAAMe,UAAU4U,SAAW,CACzBtc,QAAS,MACToJ,OAAQ,CACNC,QACE,6EACFS,QAAQ,GAEV,aAAc,CAMZT,QACE,6IACFC,YAAY,GAEdC,QACE,4QACFsB,SAAU,2BACVF,SAAU,QACVnB,OAAQ,CACN,4FACA,0BAEF6B,SAAU,qBACVX,QAAS,qBACTjB,SAAU,2CACVC,YAAa,gBAEjB,CAlCAnN,EAAOC,QAAU8f,EACjBA,EAAS7U,YAAc,WACvB6U,EAAS3S,QAAU,2BCCnB,SAAS4S,EAAO5V,GACdA,EAAMe,UAAU6U,OAAS,CACvB,aAAc,CAEZlT,QACE,mFACFC,YAAY,EACZS,OAAQ,CACNoH,QAAS,CACP9H,QAAS,yDACTxB,MAAO,cAIbc,IAAK,CAEHU,QACE,gFACFC,YAAY,EACZzB,MAAO,UAETyK,MAAO,CACLjJ,QAAS,gBACTC,YAAY,EACZzB,MAAO,UAETsJ,QAAS,CACP9H,QAAS,uDACTxB,MAAO,YAGb,CAlCAtL,EAAOC,QAAU+f,EACjBA,EAAO9U,YAAc,SACrB8U,EAAO5S,QAAU,2BCCjB,SAAS6S,EAAQ7V,IACd,SAAWA,GACV,IAAI8V,EAAW,uCAAuC3d,OACtD6H,EAAMe,UAAU8U,QAAU,CACxBE,SAAU,CACRrT,QAAS,sBACTxB,MAAO,UAET7H,QAAS,CACPqJ,QAAS,gBACTC,YAAY,GAEdX,IAAK,CACHU,QAAS,iBACTC,YAAY,GAEdqT,QAAS,CACPtT,QACE,k+BACFC,YAAY,EACZS,OAAQ,CACN+E,UAAW,CACTzF,QAAS,cACTC,YAAY,GAEdC,QAAS,eAGbqT,SAAU,CACRvT,QACE,skGACFC,YAAY,EACZS,OAAQ,CACN+E,UAAW,CACTzF,QAAS,cACTC,YAAY,GAEdC,QAAS,eAGb,aAAc,CAEZF,QAASe,OAAO,IAAMqS,EAAW,OAASA,EAAW,MACrDnT,YAAY,EACZS,OAAQ,CACN8S,QAAS,CACPxT,QAAS,UACTxB,MAAO,YAETiV,GAAI,CACFzT,QAAS,iBACTxB,MAAO,UAET6B,YAAa,OAGjB,aAAc,CACZL,QAASe,OAAOqS,GAChB1S,OAAQ,CACNgT,GAAI,CACF1T,QAAS,iBACTxB,MAAO,YAET6B,YAAa,OAGjByN,OAAQ,CACN9N,QACE,i5EACFC,YAAY,GAEdF,OAAQ,CACNC,QAAS,8CACTU,OAAQ,CACN8S,QAAS,CACPxT,QAAS,UACTxB,MAAO,cAIbgV,QAAS,CACPxT,QAAS,UACTxB,MAAO,YAGZ,CApFA,CAoFElB,EACL,CAzFApK,EAAOC,QAAUggB,EACjBA,EAAQ/U,YAAc,UACtB+U,EAAQ7S,QAAU,2BCClB,SAASqT,EAAIrW,GACXA,EAAMe,UAAUsV,IAAM,CAUpBhd,QAAS,QAITid,QAAS,WACT7K,SAAU,SAIVhJ,OAAQ,kCAMR8B,QAAS,CACP7B,QAAS,iBACTU,OAAQ,CAONoG,UAAW,aAgBf+H,MAAO,YAWP,cAAe,mBAEnB,CAnEA3b,EAAOC,QAAUwgB,EACjBA,EAAIvV,YAAc,MAClBuV,EAAIrT,QAAU,iCCHd,IAAIkH,EAAa,EAAQ,OAIzB,SAASqM,EAAKvW,GACZA,EAAMY,SAASsJ,GACflK,EAAMe,UAAUwV,KAAOvW,EAAMe,UAAUjL,OAAO,IAAK,CACjD8M,QACE,+gCAEN,CATAhN,EAAOC,QAAU0gB,EACjBA,EAAKzV,YAAc,OACnByV,EAAKvT,QAAU,2BCCf,SAASwT,EAAIxW,GACXA,EAAMe,UAAU0V,kBAAoBzW,EAAMe,UAAUyV,IAClDxW,EAAMe,UAAUjL,OAAO,QAAS,CAC9B8M,QACE,8GACFC,OACE,wEACFC,SACE,+FACF4B,SACE,s5LACFV,SACE,4rDAER,CAjBApO,EAAOC,QAAU2gB,EACjBA,EAAI1V,YAAc,MAClB0V,EAAIxT,QAAU,2BCCd,SAAS0T,EAAG1W,GAEVA,EAAMe,UAAU2V,GAAK,CACnBrd,QAAS,CACPqJ,QAAS,MACTS,QAAQ,GAEV,iBAAkB,CAChBT,QAAS,kCACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNwG,cAAe,CACblH,QACE,0EACFC,YAAY,EACZS,OAAQ,CACNP,OAAQ,kBACRmB,SAAU,UACV,4BAA6B,CAC3BtB,QAAS,YACTxB,MAAO,eAET2I,WAAY,CACVnH,QAAS,UACTU,OAAQ,QAIdX,OAAQ,YAGZG,QAAS,kBACTmB,QAAS,qBACT,mBAAoB,CAElBrB,QACE,mFACFxB,MAAO,WAETgD,SAAU,wBACVQ,SACE,kLACF7B,OAAQ,YACRC,SAAU,qBACVC,YAAa,eAEf/C,EAAMe,UAAU2V,GAAG,kBAAkBtT,OAAsB,cAAEA,OAE7D,WAAEA,OAASpD,EAAMe,UAAU2V,GAC3B1W,EAAMe,UAAU4V,IAAM3W,EAAMe,UAAU2V,EACxC,CAtDA9gB,EAAOC,QAAU6gB,EACjBA,EAAG5V,YAAc,KACjB4V,EAAG1T,QAAU,CAAC,+BCCd,SAAS4T,EAAS5W,GAEhBA,EAAMe,UAAU,UAAYf,EAAMe,UAAU,aAAe,CACzD1H,QAAS,CACPqJ,QAAS,SACTS,QAAQ,GAEV0T,QAAS,CACPnU,QAAS,+DACTC,YAAY,EACZzB,MAAO,UAET,aAAc,CACZwB,QAAS,mCACTC,YAAY,EACZzB,MAAO,UAET0B,QAAS,CACPF,QAAS,4DACTC,YAAY,GAEdG,SAAU,KACVC,YAAa,WAEjB,CA3BAnN,EAAOC,QAAU+gB,EACjBA,EAAS9V,YAAc,WACvB8V,EAAS5T,QAAU,0BCCnB,SAAS8T,EAAG9W,GACVA,EAAMe,UAAU+V,GAAK9W,EAAMe,UAAUjL,OAAO,QAAS,CACnD2M,OAAQ,CACNC,QAAS,yCACTC,YAAY,EACZQ,QAAQ,GAEVP,QACE,sKACFmB,QAAS,gCACTlB,OAAQ,CAEN,+BACA,gFACA,sEAEFC,SACE,wFACFiD,QACE,6LAEJ/F,EAAMe,UAAU6C,aAAa,KAAM,SAAU,CAC3CnJ,KAAM,CACJiI,QAAS,6BACTS,QAAQ,YAGLnD,EAAMe,UAAU+V,GAAG,aAC5B,CA/BAlhB,EAAOC,QAAUihB,EACjBA,EAAGhW,YAAc,KACjBgW,EAAG9T,QAAU,2BCCb,SAAS+T,EAAQ/W,GACfA,EAAMe,UAAUgW,QAAU,CACxB1d,QAAS,MACT2d,YAAa,CACXtU,QACE,mEACFS,QAAQ,EACRjC,MAAO,SACPkC,OAAQ,CACN,oBAAqB,CACnBV,QAAS,kCACTC,YAAY,EACZS,OAAQpD,EAAMe,UAAUkW,YAI9BxU,OAAQ,CACNC,QAAS,iDACTS,QAAQ,GAEVN,OAAQ,2CACRkB,QAAS,qBACTC,SAAU,eACV0D,UAAW,CACThF,QAAS,cACTxB,MAAO,YAET,YAAa,CACXwB,QAAS,iEACTS,QAAQ,GAEV,aAAc,CACZT,QAAS,oBACTxB,MAAO,cAETgW,OAAQ,sCACRxS,SAAU,qBACV,aAAc,CACZhC,QACE,kFACFC,YAAY,GAEdwU,SAAU,CACRzU,QAAS,+CACTC,YAAY,EACZzB,MAAO,YAET,sBAAuB,CACrBwB,QAAS,8BACTC,YAAY,EACZzB,MAAO,YAET,mBAAoB,CAClBwB,QAAS,2BACTC,YAAY,EACZzB,MAAO,YAET0B,QACE,uIACFE,SAAU,eACV,iBAAkB,eAClBsU,OAAQ,eACRrU,YAAa,iBACblJ,SAAU,OAEZmG,EAAMoC,MAAMmF,IAAI,kBAAkB,SAA8B1F,GAC9D,GAAqB,YAAjBA,EAAIP,SAwFR,IA/EA,IAAI+V,EAAcxV,EAAIJ,OAAOqQ,QAAO,SAAUwF,GAC5C,MACmB,iBAAVA,GACQ,YAAfA,EAAM9d,MACS,WAAf8d,EAAM9d,IAEV,IACI+d,EAAe,EAwEZA,EAAeF,EAAYhhB,QAAU,CAC1C,IAAImhB,EAAaH,EAAYE,KAC7B,GAAwB,YAApBC,EAAWhe,MAA6C,aAAvBge,EAAWpf,QAAwB,CAEtE,IAAIqf,EAAiB,GACrB,GACEC,EAAY,CAAC,sBAAuB,iBACZ,MAAxBC,EAAS,GAAGvf,QACZ,CAEAmf,GAAgB,EAChB,IAAIK,EAAgBC,EAAmB,OAAQ,QAC/C,IAAuB,IAAnBD,EACF,SAEF,KAAOL,EAAeK,EAAeL,IAAgB,CACnD,IAAIO,EAAIH,EAAS,GACF,aAAXG,EAAEte,OACJue,EAASD,EAAG,kBACZL,EAAe5e,KAAKif,EAAE1f,SAE1B,CACAmf,EAAeK,EAAgB,CACjC,CACA,GACEF,EAAY,CAAC,cAAe,oBACJ,MAAxBC,EAAS,GAAGvf,UAEZmf,IACAQ,EAASJ,EAAS,GAAI,qBAClBF,EAAephB,OAAS,GAAG,CAC7B,IAAI2hB,EAAcH,EAAmB,OAAQ,QAC7C,IAAqB,IAAjBG,EACF,SAEF,IAAK,IAAI5hB,EAAImhB,EAAcnhB,EAAI4hB,EAAa5hB,IAAK,CAC/C,IAAI6hB,EAAWZ,EAAYjhB,GAEP,aAAlB6hB,EAASze,MACTie,EAAeS,QAAQD,EAAS7f,UAAY,GAE5C2f,EAASE,EAAU,iBAEvB,CACF,CAEJ,CACF,CAhHA,SAASN,EAAS1a,GAChB,OAAOoa,EAAYE,EAAeta,EACpC,CAQA,SAASya,EAAYlP,EAAOvL,GAC1BA,EAASA,GAAU,EACnB,IAAK,IAAI7G,EAAI,EAAGA,EAAIoS,EAAMnS,OAAQD,IAAK,CACrC,IAAIkhB,EAAQK,EAASvhB,EAAI6G,GACzB,IAAKqa,GAASA,EAAM9d,OAASgP,EAAMpS,GACjC,OAAO,CAEX,CACA,OAAO,CACT,CAYA,SAASyhB,EAAmBM,EAAMC,GAEhC,IADA,IAAIC,EAAc,EACTjiB,EAAImhB,EAAcnhB,EAAIihB,EAAYhhB,OAAQD,IAAK,CACtD,IAAIkhB,EAAQD,EAAYjhB,GACpBgC,EAAUkf,EAAMlf,QACpB,GAAmB,gBAAfkf,EAAM9d,MAA6C,iBAAZpB,EACzC,GAAI+f,EAAKnc,KAAK5D,GACZigB,SACK,GAAID,EAAMpc,KAAK5D,IAEA,KADpBigB,EAEE,OAAOjiB,CAIf,CACA,OAAQ,CACV,CAQA,SAAS2hB,EAAST,EAAOpW,GACvB,IAAI8B,EAAUsU,EAAMpW,MACf8B,EAEOtO,MAAMF,QAAQwO,KACxBsU,EAAMpW,MAAQ8B,EAAU,CAACA,IAFzBsU,EAAMpW,MAAQ8B,EAAU,GAI1BA,EAAQnK,KAAKqI,EACf,CAiDF,GACF,CA9MAtL,EAAOC,QAAUkhB,EACjBA,EAAQjW,YAAc,UACtBiW,EAAQ/T,QAAU,2BCClB,SAASsV,EAAOtY,GACdA,EAAMe,UAAUuX,OAAStY,EAAMe,UAAUjL,OAAO,QAAS,CACvD2M,OAAQ,CACN,CAEEC,QACE,kFACFS,QAAQ,GAEV,CAGET,QAAS,oCACTS,QAAQ,IAGZP,QACE,6WACFC,OACE,6FACFC,SAAU,CACRJ,QACE,oJACFC,YAAY,GAEdI,YAAa,sBAEf/C,EAAMe,UAAU6C,aAAa,SAAU,SAAU,CAC/CuF,QAAS,CACPzG,QAAS,OACTxB,MAAO,aAGXlB,EAAMe,UAAU6C,aAAa,SAAU,cAAe,CACpD,cAAe,0DAEjB5D,EAAMe,UAAU6C,aAAa,SAAU,WAAY,CACjDY,WAAY,CACV9B,QAAS,eACTC,YAAY,EACZzB,MAAO,iBAGXlB,EAAMoC,MAAMmF,IAAI,QAAQ,SAAU1F,GAChC,GAAqB,WAAjBA,EAAIP,UAAsC,WAAbO,EAAIrI,KAAmB,CACtD,IAAI4Q,EAAYvI,EAAIzJ,QAAQ5C,MAAM,GAClC,GAAiB,KAAb4U,EAAkB,CACpB,IAAI1H,EAAU,kCACI,MAAd0H,IACF1H,EAAU,mCAEZb,EAAIzJ,QAAQ5C,MAAQqM,EAAIzJ,QAAQ5C,MAC7B0B,QAAQ,QAAS,KACjBA,QAAQ,SAAU,KACrB2K,EAAIzJ,QAAU4H,EAAMV,UAAUuC,EAAIzJ,QAAQ5C,MAAO,CAC/CqU,WAAY,CACVnH,QAASA,EACTC,YAAY,EACZS,OAAQpD,EAAMe,UAAUuX,UAG5BzW,EAAII,QAAQpJ,KAAmB,MAAduR,EAAoB,QAAU,UACjD,CACF,CACF,GACF,CApEAxU,EAAOC,QAAUyiB,EACjBA,EAAOxX,YAAc,SACrBwX,EAAOtV,QAAU,gCCHjB,IAAIuJ,EAAgB,EAAQ,OAI5B,SAASgM,EAAKvY,GACZA,EAAMY,SAAS2L,GAOd,SAAWvM,GACVA,EAAMe,UAAUwX,KAAO,CAErB,oBAAqB,CACnB7V,QACE,gEACFC,YAAY,EACZzB,MAAO,WAET,iBAAkB,CAChB,CACEwB,QACE,6GACFC,YAAY,EACZS,OAAQpD,EAAMe,UAAU0L,MAE1B,CACE/J,QACE,sFACFC,YAAY,EACZS,OAAQpD,EAAMe,UAAU0L,OAI5BqF,OAAQ,CACNpP,QACE,iFACFC,YAAY,EACZS,OAAQ,CACN,cAAe,CACbV,QAAS,WACTxB,MAAO,YAIbZ,OAAQ,CACNoC,QAAS,4BACTC,YAAY,EACZS,OAAQpD,EAAMe,UAAUT,QAE1BkY,QAAS,CACP9V,QAAS,oCACTC,YAAY,GAEdX,IAAK,CAEHU,QACE,sGACFC,YAAY,EACZS,OAAQ,CACNlB,WAAY,CACV,CAGEQ,QAAS,mCACTC,YAAY,EACZS,OAAQpD,EAAMe,UAAU0L,MAE1B,CACE/J,QAAS,YACTU,OAAQ,CACN,aAAc,CACZV,QAAS,0CACTC,YAAY,GAEd,YAAa,4BACbI,YAAa,WAGjB,CACEL,QAAS,aACTU,OAAQpD,EAAMe,UAAU0L,OAG5B1J,YAAa,SAGjB7I,KAAM,CACJwI,QAAS,0CACTC,YAAY,EACZS,OAAQpD,EAAMe,UAAU0L,MAG1B7C,cAAe,CACblH,QAAS,aACTU,OAAQ,CACNgH,UAAW,CACT1H,QAAS,WACTxB,MAAO,eAETuL,KAAM,CACJ/J,QAAS,UACTU,OAAQpD,EAAMe,UAAU0L,QAI9B1J,YAAa,CACXL,QAAS,kCACTC,YAAY,IAoBhB,IAjBA,IAEI8V,EAAU,CACZ,MACA,CACE3G,OAAQ,SACRxQ,SAAU,gBAEZ,MACA,aACA,OACA,WACA,OACA,OACA,WAEEoX,EAAc,CAAC,EACVtiB,EAAI,EAAGgR,EAAIqR,EAAQpiB,OAAQD,EAAIgR,EAAGhR,IAAK,CAC9C,IAAI0b,EAAS2G,EAAQriB,GACrB0b,EACoB,iBAAXA,EACH,CACEA,OAAQA,EACRxQ,SAAUwQ,GAEZA,EACF9R,EAAMe,UAAU+Q,EAAOxQ,YACzBoX,EAAY,UAAY5G,EAAOA,QAAU,CACvCpP,QAASe,OA3Bb,uGA4BqBvM,QAAQ,mBAAmB,WACxC,OAAO4a,EAAOA,MAChB,KAEFnP,YAAY,EACZS,OAAQ,CACN,cAAe,CACbV,QAAS,WACTxB,MAAO,UAET3E,KAAM,CACJmG,QAAS,UACTxB,MAAO,CAAC4Q,EAAOxQ,SAAU,YAAcwQ,EAAOxQ,UAC9C8B,OAAQpD,EAAMe,UAAU+Q,EAAOxQ,aAKzC,CACAtB,EAAMe,UAAU6C,aAAa,OAAQ,SAAU8U,EAChD,CAtJA,CAsJE1Y,EACL,CAlKApK,EAAOC,QAAU0iB,EACjBA,EAAKzX,YAAc,OACnByX,EAAKvV,QAAU,gCCHf,IAAI4O,EAA4B,EAAQ,OAIxC,SAAS+G,EAAW3Y,GAClBA,EAAMY,SAASgR,GACd,SAAW5R,GACVA,EAAMe,UAAU4X,WAAa,CAC3Btf,QAAS,oBACT+Q,UAAW,CACT1H,QAAS,oBACTxB,MAAO,eAETuB,OAAQ,mCACRI,OAAQ,iEACRkB,QAAS,qBACTyL,MAAO,CACL9M,QAAS,+CACTC,YAAY,EACZzB,MAAO,WAET0X,SAAU,CACRlW,QAAS,aACTU,OAAQ,CACNL,YAAa,QACbiB,SAAU,YAGdjB,YAAa,qCACbiB,SAAU,wCAEZhE,EAAMoC,MAAMmF,IAAI,mBAAmB,SAAU1F,GAE3C7B,EAAMe,UAAU,qBAAqBiR,kBACnCnQ,EACA,aAHsB,yCAM1B,IACA7B,EAAMoC,MAAMmF,IAAI,kBAAkB,SAAU1F,GAC1C7B,EAAMe,UAAU,qBAAqBkR,qBACnCpQ,EACA,aAEJ,IACA7B,EAAMe,UAAU8X,IAAM7Y,EAAMe,UAAU4X,UACvC,CAxCA,CAwCE3Y,EACL,CA9CApK,EAAOC,QAAU8iB,EACjBA,EAAW7X,YAAc,aACzB6X,EAAW3V,QAAU,CAAC,+BCCtB,SAAS8V,EAAQ9Y,GACfA,EAAMe,UAAU+X,QAAU,CACxBzf,QAAS,CACPqJ,QACE,4FACFC,YAAY,GAEdlI,KAAM,CACJiI,QACE,sMACFxB,MAAO,UAETuB,OAAQ,CACNC,QAAS,+BACTS,QAAQ,GAEVP,QACE,wHACF,mBAAoB,CAIlBF,QACE,sIACFC,YAAY,EACZS,OAAQ,CACNR,QAAS,qCACTG,YAAa,OAIjBgD,QACE,yoDAEFlD,OAAQ,4DACRC,SAAU,CACR,CAEEJ,QAAS,mCACTS,QAAQ,GAEV,CAEET,QAAS,eACTC,YAAY,GAQd,gFAGF+Q,UAAW,CACThR,QAAS,mCACTU,OAAQ,CACNL,YAAa,OAGjB2B,SAAU,CACRhC,QAAS,kCACTU,OAAQ,CACNL,YAAa,OAGjBA,YAAa,iBAEf/C,EAAMe,UAAUgY,GAAK/Y,EAAMe,UAAU+X,OACvC,CAzEAljB,EAAOC,QAAUijB,EACjBA,EAAQhY,YAAc,UACtBgY,EAAQ9V,QAAU,CAAC,8BCCnB,SAASgW,EAAKhZ,GACZA,EAAMe,UAAUiY,KAAOhZ,EAAMe,UAAUjL,OAAO,QAAS,CACrD2M,OAAQ,CAENC,QAAS,yBACTS,QAAQ,GAEV,aAAc,CACZ,CACET,QACE,mFACFC,YAAY,GAEd,cAGFC,QACE,gUACFsB,SAAU,CACRxB,QAAS,wCACTS,QAAQ,GAEVL,SAAU,oEAEZ9C,EAAMe,UAAU6C,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CACtBlB,QAAS,yBACTS,QAAQ,EACRC,OAAQ,CACNwG,cAAe,CACblH,QAAS,gCACTC,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,aACTxB,MAAO,eAET2I,WAAY,CACVnH,QAAS,UACTU,OAAQpD,EAAMe,UAAUiY,QAI9BvW,OAAQ,cAIdzC,EAAMe,UAAU6C,aAAa,OAAQ,aAAc,CACjDiB,MAAO,CACLnC,QAAS,kCACTS,QAAQ,EACRC,OAAQ,CACN,cAAe,YACf,eAAgB,CACdV,QAAS,uBACTC,YAAY,EACZzB,MAAO,iBACPkC,OAAQpD,EAAMe,UAAU8D,OAE1B,kBAAmB,eAIzB7E,EAAMe,UAAU6C,aAAa,OAAQ,UAAW,CAC9CkK,aAAc,CACZpL,QAAS,8BACTxB,MAAO,YAET+I,SAAU,CACRvH,QAAS,YACTxB,MAAO,UAET+X,YAAa,CACXvW,QAAS,mBACTxB,MAAO,cAGb,CAhFAtL,EAAOC,QAAUmjB,EACjBA,EAAKlY,YAAc,OACnBkY,EAAKhW,QAAU,2BCCf,SAASkW,EAAIlZ,GACXA,EAAMe,UAAUmY,IAAM,CACpB7f,QAAS,sCACT8f,QAAS,CACPzW,QAAS,gCACTS,QAAQ,EACRjC,MAAO,UAET0B,QAAS,CACP,CACEF,QACE,sEACFU,OAAQ,CACN5J,KAAM,CACJkJ,QAAS,iDACTC,YAAY,EACZzB,MAAO,cAIb,CACEwB,QACE,wGACFU,OAAQ,CACN5J,KAAM,CACJkJ,QACE,gGACFC,YAAY,EACZzB,MAAO,cAIb,mBAEFrH,SAAU,CAAC,wBAAyB,qCACpC4I,OAAQ,CACNC,QACE,gGACFS,QAAQ,EACRC,OAAQ,CACNwG,cAAe,CACblH,QAAS,mDACTC,YAAY,EACZS,OAAQ,CACN5J,KAAM,CACJkJ,QACE,sEACFC,YAAY,EACZzB,MAAO,YAET0B,QAAS,2DACTsB,SAAU,YACVzB,OAAQ,CACNC,QAAS,yBACTS,QAAQ,GAEVN,OAAQ,gDACRE,YAAa,2CAKrBF,OAAQ,gDACRkB,QAAS,sBACThB,YAAa,YAEjB,CArEAnN,EAAOC,QAAUqjB,EACjBA,EAAIpY,YAAc,MAClBoY,EAAIlW,QAAU,+BCHd,IAAIkH,EAAa,EAAQ,OAIzB,SAASkP,EAAKpZ,GACZA,EAAMY,SAASsJ,GACflK,EAAMe,UAAUqY,KAAOpZ,EAAMe,UAAUjL,OAAO,IAAK,CAKjD,aAAc,CACZkK,EAAMe,UAAU3H,EAAE,cAClB,wgBAEFwJ,QAAS,CAEP,gyBACA,gHAGFC,OACE,gFACFkB,QAAS,sBAEb,CAxBAnO,EAAOC,QAAUujB,EACjBA,EAAKtY,YAAc,OACnBsY,EAAKpW,QAAU,2BCCf,SAASqW,EAAKrZ,GACZA,EAAMe,UAAUsY,KAAO,CACrBhgB,QAAS,CACPqJ,QAAS,OACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,kBACTS,QAAQ,GAEVuB,SAAU,qBACV,aAAc,+BACdR,SAAU,kDACVtB,QACE,+NAEN,CAnBAhN,EAAOC,QAAUwjB,EACjBA,EAAKvY,YAAc,OACnBuY,EAAKrW,QAAU,2BCCf,SAASsW,EAAKtZ,GAMZA,EAAMe,UAAUuY,KAAO,CACrB5R,UAAW,CACThF,QACE,8FACFxB,MAAO,YAET4B,SAAU,IACVC,YAAa,IAEjB,CAlBAnN,EAAOC,QAAUyjB,EACjBA,EAAKxY,YAAc,OACnBwY,EAAKtW,QAAU,2BCCf,SAASuW,EAAKvZ,GAMZA,EAAMe,UAAUwY,KAAO,CACrB7R,UAAW,CACThF,QAAS,uDACTxB,MAAO,YAET4B,SAAU,IACVC,YAAa,IAEjB,CAjBAnN,EAAOC,QAAU0jB,EACjBA,EAAKzY,YAAc,OACnByY,EAAKvW,QAAU,2BCCf,SAASwW,EAAKxZ,IACX,SAAWA,GAKV,SAASyZ,EAAcpkB,GACrB,OAAOoO,OAAO,QAAUpO,EAAO,yBAA0B,IAC3D,CACA2K,EAAMe,UAAUyY,KAAO,CACrB,eAAgB,CACd9W,QACE,6GACFU,OAAQ,CAEN4R,OAAQ,CACNtS,QAAS,YACTxB,MAAO,YAGT,iBAAkB,CAChBwB,QAAS,mCACTC,YAAY,EACZzB,MAAO,MACPkC,OAAQpD,EAAMe,UAAU2Y,KAG1B,eAAgB,CACdhX,QAAS,oBACTC,YAAY,EACZzB,MAAO,cAIb,kBAAmB,CACjBwB,QAAS,wBACTU,OAAQ,CAEN,eAAgB,CACdV,QAAS,gBACTxB,MAAO,YAGT,cAAe,CACbwB,QAAS,iBACTC,YAAY,EACZzB,MAAO,UAGT,gBAAiB,CACfwB,QAAS,UACTC,YAAY,EACZzB,MAAO,YAIbyY,OAAQ,CACNjX,QAAS,sCACTU,OAAQ,CACN,eAAgB,CACd,CACEV,QAAS+W,EAAc,0BAA0BthB,QACjDwK,YAAY,EACZzB,MAAO,CAAC,MAAO,iBACfkC,OAAQpD,EAAMe,UAAU2O,KAE1B,CACEhN,QAAS+W,EAAc,mCAAmCthB,QAC1DwK,YAAY,EACZzB,MAAO,CAAC,OAAQ,kBAChBkC,OAAQpD,EAAMe,UAAUuY,MAE1B,CACE5W,QAAS+W,EAAc,4BAA4BthB,QACnDwK,YAAY,EACZzB,MAAO,CAAC,OAAQ,kBAChBkC,OAAQpD,EAAMe,UAAUwY,MAE1B,CACE7W,QAAS+W,EAAc,QAAQthB,QAC/BwK,YAAY,IAGhB,cAAe,CACbD,QAAS,SACTxB,MAAO,WAET6B,YAAa,QAInB,IA0BI3N,EA1BAwkB,EAAQ5Z,EAAMe,UACd8Y,EAAgB,CAClB,yBAA0BD,EAAM7R,WAChC,mBAAoB6R,EAAME,MAAQF,EAAM7R,WACxC,kBAAmB6R,EAAM/V,IACzB,WAAY+V,EAAM/V,IAClB,YAAa+V,EAAMrK,KACnB,WAAYqK,EAAMrZ,IAClB,aAAcqZ,EAAMG,OAElBC,EAAc,CAChB,oBAAoB,EACpB,mBAAmB,GAQrB,SAASC,EAAiBC,GACxB,IAAIC,EAASD,EAAYhjB,QAAQ,YAAa,IAE9C,MAAO,MAAQgjB,EAAR,yBADuCC,EACvC,eACT,CAGA,IAAK,IAAID,KAAeL,EACtB,GAAIA,EAAcK,GAAc,CAC9B9kB,EAAUA,GAAW,CAAC,EACtB,IAAIsN,EAAUsX,EAAYE,GACtBD,EAAiBC,GACjBA,EACJ9kB,EAAQ8kB,EAAYhjB,QAAQ,MAAO,MAAQ,CACzCwL,QAASe,OACP,IACE,mBAAmBtL,OACnBuK,EACA,iDAAiDvK,OACjD,IAKA,mBAAmBA,OACrB,KAEFwK,YAAY,EACZS,OAAQyW,EAAcK,GAE1B,CAEE9kB,GACF4K,EAAMe,UAAU6C,aAAa,OAAQ,SAAUxO,EAElD,CAjJA,CAiJE4K,EACL,CAtJApK,EAAOC,QAAU2jB,EACjBA,EAAK1Y,YAAc,OACnB0Y,EAAKxW,QAAU,yBCCf,SAASoX,EAAUpa,GAGjBA,EAAMe,UAAUqZ,UAAY,CAC1B/gB,QAAS,2BACToJ,OAAQ,CACNC,QAAS,yCACTS,QAAQ,GAEVN,OAAQ,mEACRD,QACE,mSACFsB,SACE,sIACFO,MAAO,aACP3B,SAAU,wDACVC,YAAa,cAEjB,CArBAnN,EAAOC,QAAUukB,EACjBA,EAAUtZ,YAAc,YACxBsZ,EAAUpX,QAAU,2BCCpB,SAASqX,EAAKra,GACZA,EAAMe,UAAUsZ,KAAO,CACrBhhB,QAAS,MACToJ,OAAQ,CACNC,QAAS,2DACTS,QAAQ,GAEVN,OAAQ,4DACR,kBAAmB,CACjBH,QACE,kRACFxB,MAAO,YAETwG,UAAW,CACThF,QAAS,QACTxB,MAAO,WAET0B,QACE,mLACFsB,SAAU,mCACVpB,SACE,8GACFC,YAAa,eAEjB,CA3BAnN,EAAOC,QAAUwkB,EACjBA,EAAKvZ,YAAc,OACnBuZ,EAAKrX,QAAU,2BCCf,SAASsX,EAAiBta,IAGvB,SAAWA,GAMV,SAAS4M,EAAOzU,EAAQwT,GACtB,OAAIA,GAAS,EACJ,KAAKxT,OAELA,EAAOjB,QAAQ,WAAW,WAC/B,OAAO0V,EAAOzU,EAAQwT,EAAQ,EAChC,GAEJ,CACA,IAAI4O,EAAgB,6BAChBlW,EAAS,CACX3B,QAAS,KACTS,QAAQ,EACRjC,MAAO,YAELuB,EAAS,CACXC,QAAS6X,EACTpX,QAAQ,EACRC,OAAQ,CACNiB,OAAQA,IAGRmW,EAAiB5N,EACnB,8CAA8CzU,OAAOjB,QACnD,UACA,WACE,OAAOqjB,EAAcpiB,MACvB,IAEF,GAEEsiB,EAAgB,CAClB/X,QAASe,OAAO+W,GAChBpX,OAAQ,CACNsX,QAAS,CACPhY,QAAS,sBACTC,YAAY,EACZS,OAAQ,MAEV,oBAAqB,CACnBV,QAAS,IACTxB,MAAO,iBAIblB,EAAMe,UAAU,sBAAwB,CACtC2H,SAAU,CACRhG,QAASe,OAAO+W,GAChBrX,QAAQ,EACRC,OAAQ,CACNhL,QAAS,CACPsK,QAAS,sBACTC,YAAY,EACZS,OAAQ,CACN,gBAAiB,CACfV,QAAS,oBACTC,YAAY,GAEd,eAAgB,CAEdD,QAAS,0CACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,KACbM,MAAO,CACLX,QAAS,mDACTC,YAAY,EACZS,OAAQ,CACNN,SAAU,aACVD,OAAQ,QAGZyE,KAAM,OAGV,eAAgB,CAEd5E,QACE,4DACFC,YAAY,EACZS,OAAQ,CACNnG,OAAQ,iBACR,iBAAkBwd,EAClBxS,SAAU,CACRvF,QAAS,mBACTU,OAAQ,CACNR,QAAS,wCAKjB,eAAgB,CAEdF,QAAS,0CACTC,YAAY,EACZS,OAAQ,CACN,iBAAkBqX,EAClBxS,SAAU,CACRvF,QAAS,cACTU,OAAQ,CACNR,QAAS,cAKjBA,QAAS,6CACT,WAAY,CACVF,QAAS,qDACTxB,MAAO,WAET,eAAgB,CACdwB,QAAS,sBACTC,YAAY,GAEd,YAAa,CACXD,QACE,oEACFC,YAAY,GAEd,iBAAkB,CAChBD,QAASe,OACP,mBAAmBtL,OACjByU,EAAO,sCAAsCzU,OAAQ,GACrD,KAEJwK,YAAY,EACZzB,MAAO,UAET6B,YAAa,MAGjB,qBAAsB,CACpBL,QAAS,IACTxB,MAAO,cAIbmD,OAAQA,EACR5B,OAAQA,GAEVgY,EAAcrX,OAAOsX,QAAQtX,OAASpD,EAAMe,UAAU,sBACtDf,EAAMe,UAAU,sBAAsB2H,SAAStF,OAAOhL,QAAQgL,OAC5D,gBACAA,OAAOkE,KAAOtH,EAAMe,UAAU,qBACjC,CAtJA,CAsJEf,EACL,CA7JApK,EAAOC,QAAUykB,EACjBA,EAAiBxZ,YAAc,mBAC/BwZ,EAAiBtX,QAAU,iCCH3B,IAAI2X,EAAmB,EAAQ,OAI/B,SAASC,EAAM5a,GACbA,EAAMY,SAAS+Z,GACf3a,EAAMe,UAAU6Z,MAAQ5a,EAAMe,UAAUjL,OAAO,UAAW,CACxDuD,QAAS,CACPqJ,QAAS,wCAEXE,QACE,kTACFmD,aAAS9F,IAEXD,EAAMe,UAAU6C,aAAa,QAAS,UAAW,CAC/C,mBAAoB,CAClBlB,QAAS,oDACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,SAInB/C,EAAMe,UAAU8Z,IAAM7a,EAAMe,UAAU6Z,KACxC,CAvBAhlB,EAAOC,QAAU+kB,EACjBA,EAAM9Z,YAAc,QACpB8Z,EAAM5X,QAAU,CAAC,+BCCjB,SAAS8X,EAAM9a,GACbA,EAAMe,UAAU+Z,MAAQ,CACtBzhB,QAAS,CACP,CACEqJ,QACE,gFACFC,YAAY,EACZQ,QAAQ,GAEV,CACET,QAAS,mBACTC,YAAY,EACZQ,QAAQ,IAGZV,OAAQ,CACNC,QAAS,iDACTS,QAAQ,GAEVP,QAAS,CACP,yPACA,yPAEF,aACE,4HACFmY,QAAS,CACPrY,QAAS,kCACTxB,MAAO,UAET2B,OACE,oIACFkB,QAAS,0BACTjB,SACE,4FACFoB,SAAU,wBACVnB,YAAa,aAEjB,CAxCAnN,EAAOC,QAAUilB,EACjBA,EAAMha,YAAc,QACpBga,EAAM9X,QAAU,0BCChB,SAASgY,EAAOhb,IACb,SAAWA,GACVA,EAAMe,UAAUia,OAAS,CAEvB3hB,QAAS,QACT4hB,MAAO,CACLvY,QAAS,0BACTxB,MAAO,SACPkC,OAAQ,CACNN,SAAU,cACV+B,MAAO,CACLnC,QAAS,wBACTC,YAAY,GAEdI,YAAa,QAInB/C,EAAMe,UAAUma,UAAYlb,EAAMe,UAAUia,OAC5Chb,EAAMe,UAAUoa,SAAWnb,EAAMe,UAAUia,OAC3Chb,EAAMe,UAAUqa,UAAYpb,EAAMe,UAAUia,MAC7C,CApBA,CAoBEhb,EACL,CAzBApK,EAAOC,QAAUmlB,EACjBA,EAAOla,YAAc,SACrBka,EAAOhY,QAAU,CAAC,YAAa,WAAY,qCCC3C,SAASqY,EAAQrb,GACfA,EAAMe,UAAUsa,QAAU,CACxB5Y,OAAQ,CACNC,QAAS,UACTU,OAAQ,CACNkY,aAAc,CACZ5Y,QAAS,eACTU,OAAQ,CACNgH,UAAW,CACT1H,QAAS,QACTxB,MAAO,mBAMjB7H,QAAS,CACPqJ,QAAS,eACTS,QAAQ,GAEVoD,MAAO,CACL7D,QAAS,iEACTxB,MAAO,aAET2B,OAAQ,CACNH,QACE,mIACFC,YAAY,GAEd4Y,KAAM,CACJ7Y,QACE,ovBACFC,YAAY,EACZzB,MAAO,YAET0B,QAAS,CACPF,QACE,iVACFC,YAAY,GAEd9I,SAAU,CACR6I,QACE,4tBACFC,YAAY,EACZzB,MAAO,UAETvJ,SAAU,CACR+K,QACE,yQACFC,YAAY,EACZzB,MAAO,WAET1H,KAAM,CACJkJ,QACE,kWACFC,YAAY,EACZzB,MAAO,YAET6B,YAAa,cAEf/C,EAAMe,UAAUsa,QAAgB,OAAEjY,OAAqB,aAAEA,OAAOkE,KAC9DtH,EAAMe,UAAUsa,QAClBrb,EAAMe,UAAUsa,QAAgB,OAAEjY,OAAqB,aAAEA,OAAOkE,KAAK/K,KAAO,CAC1EmG,QAAS,eACTxB,MAAO,UAEX,CArEAtL,EAAOC,QAAUwlB,EACjBA,EAAQva,YAAc,UACtBua,EAAQrY,QAAU,2BCClB,SAASwY,EAAIxb,GACXA,EAAMe,UAAUya,IAAM,CAMpBniB,QAAS,CACPqJ,QAAS,6BACTC,YAAY,GAEduQ,QAAS,CACPxQ,QAAS,gCACTC,YAAY,EACZS,OAAQ,CACN,eAAgB,CACdV,QAAS,2DACTC,YAAY,EACZzB,MAAO,YAET6B,YAAa,UAGjBjO,IAAK,CACH4N,QACE,+EACFC,YAAY,EACZzB,MAAO,aAET1L,MAAO,CACLkN,QAAS,6DACTC,YAAY,EACZzB,MAAO,aACPkC,OAAQ,CACN,cAAe,CACbV,QAAS,kBACTC,YAAY,KAIlBI,YAAa,IAEjB,CA7CAnN,EAAOC,QAAU2lB,EACjBA,EAAI1a,YAAc,MAClB0a,EAAIxY,QAAU,2BCCd,SAASyY,EAAGzb,GACVA,EAAMe,UAAU0a,GAAK,CACnBpiB,QAAS,CACPqJ,QAAS,iDACTC,YAAY,EACZQ,QAAQ,GAEV,uBAAwB,CACtBT,QAAS,mCACTS,QAAQ,EACRjC,MAAO,UAETuB,OAAQ,CACNC,QAAS,wBACTS,QAAQ,GAEVP,QACE,6kBACFmD,QACE,imBACFhC,QAAS,yBACTlB,OAAQ,yDACRC,SACE,8GACFC,YAAa,gBAEjB,CA7BAnN,EAAOC,QAAU4lB,EACjBA,EAAG3a,YAAc,KACjB2a,EAAGzY,QAAU,2BCCb,SAAS0Y,EAAE1b,GACTA,EAAMe,UAAU2a,EAAI,CAClBriB,QAAS,CACPqJ,QAAS,WACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,qBACTS,QAAQ,GAEVP,QACE,mNACF2Y,KAAM,CAGJ7Y,QACE,8IACFxB,MAAO,WAET2B,OACE,4GACF8Y,OAAQ,CACNjZ,QAAS,+BACTxB,MAAO,WAET4B,SAAU,eACV8Y,YAAa,CACXlZ,QAAS,0DACTxB,MAAO,YAET6B,YAAa,OAEjB,CAnCAnN,EAAOC,QAAU6lB,EACjBA,EAAE5a,YAAc,IAChB4a,EAAE1Y,QAAU,2BCCZ,SAAS6Y,EAAK7b,IACX,SAAWA,GACV,IAAIgF,EACF,idACE8W,EAAkB,uDACnB3jB,OACC8M,EAAY,CACdvC,QAASe,OAAOqY,EAAkB,gCAAgC3jB,QAClEwK,YAAY,EACZS,OAAQ,CACNoI,UAAW,CACT9I,QAAS,2CACTU,OAAQ,CACNL,YAAa,OAGjBA,YAAa,OAGjB/C,EAAMe,UAAU8a,KAAO7b,EAAMe,UAAUjL,OAAO,QAAS,CACrD2M,OAAQ,CACNC,QAAS,iCACTC,YAAY,EACZQ,QAAQ,GAEV,aAAc,CACZ8B,EACA,CAGEvC,QAASe,OACPqY,EAAkB,+BAA+B3jB,QAEnDwK,YAAY,EACZS,OAAQ6B,EAAU7B,SAGtBR,QAASoC,EACTd,SAAU,CACRlE,EAAMe,UAAUP,MAAM0D,SACtB,CACExB,QAAS,mBACTC,YAAY,IAGhBE,OACE,8IACFC,SAAU,CACRJ,QACE,wEACFC,YAAY,KAGhB3C,EAAMe,UAAU6C,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CAEtBlB,QAAS,iDACTS,QAAQ,EACRjC,MAAO,UAETzG,KAAM,CACJiI,QAAS,4BACTS,QAAQ,KAGZnD,EAAMe,UAAU6C,aAAa,OAAQ,aAAc,CACjDY,WAAY,CACV9B,QAAS,+BACTC,YAAY,EACZzB,MAAO,eAET+P,SAAU,CACRvO,QACE,kGACFU,OAAQ,CACN,aAAc6B,EACdrC,QAASoC,EACTjC,YAAa,YACbD,SAAU,UAGd0I,UAAW,CACT9I,QAASe,OACP,qJAAqJtL,OAAOjB,QAC1J,cACA,WACE,OAAO8N,EAAS7M,MAClB,KAGJwK,YAAY,EACZS,OAAQ,CACNL,YAAa,QAIpB,CA/FA,CA+FE/C,EACL,CApGApK,EAAOC,QAAUgmB,EACjBA,EAAK/a,YAAc,OACnB+a,EAAK7Y,QAAU,iCCHf,IAAI+Y,EAAgB,EAAQ,OACxBC,EAAuB,EAAQ,OAInC,SAASC,EAAQjc,GACfA,EAAMY,SAASmb,GACf/b,EAAMY,SAASob,GACd,SAAWhc,GACV,IAAIkc,EAAkB,oCAClBC,EAAkB,4BAA4BhkB,OAC9CwD,EACF,0DAA0DxD,OAAOjB,QAC/D,UACA,WACE,OAAOilB,CACT,IAEJnc,EAAMe,UAAUkb,QAAUjc,EAAMe,UAAUjL,OAAO,cAAe,CAAC,GACjEkK,EAAMe,UAAU6C,aAAa,UAAW,UAAW,CACjDjI,UAAW,CACT+G,QAASe,OACP,gEACGtL,OACD,MACAwD,EACA,KAEJgH,YAAY,EACZS,OAAQ,CACNc,SAAU,CACRxB,QAAS,qBACTC,YAAY,GAEdyZ,MAAO,CACL1Z,QAAS,YACTC,YAAY,GAEd6I,UAAW,CACT9I,QAAS,0BACTU,OAAQ,CACNL,YAAa,OAGjB,aAAc,aACdH,QAAS5C,EAAMe,UAAU8a,KAAKjZ,QAC9BG,YAAa,eAGjB,aAAc,CAEZL,QAAS,wBACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,UAGjB,eAAgB,CACd,CACEL,QACE,+GACFC,YAAY,EACZS,OAAQ,CACNlJ,KAAM,CAEJwI,QAASwZ,EACTvZ,YAAY,EACZS,OAAQpD,EAAMe,UAAU8a,KACxB3a,MAAO,mBAIb,CACEwB,QACE,8DACFC,YAAY,EACZS,OAAQ,CACNvL,KAAM,CACJ6K,QAASwZ,EACTvZ,YAAY,EACZS,OAAQ,CAENpB,IAAKhC,EAAMe,UAAUT,OAAO0B,IAC5BtH,OAAQsF,EAAMe,UAAUT,OAAO5F,OAC/BR,KAAM,CAEJwI,QAAS,KACTU,OAAQpD,EAAMe,UAAU8a,KACxB3a,MAAO,sBAOnBc,IAAKhC,EAAMe,UAAUT,OAAO0B,IAC5BtH,OAAQsF,EAAMe,UAAUT,OAAO5F,SAEjCsF,EAAMe,UAAUsb,YAAYC,WAAW,OAAQtc,EAAMe,UAAUkb,QAChE,CA3FA,CA2FEjc,EACL,CAlGApK,EAAOC,QAAUomB,EACjBA,EAAQnb,YAAc,UACtBmb,EAAQjZ,QAAU,2BCAlB,SAASqZ,EAAYrc,IAClB,SAAWA,GACV,IAAIuc,EAAevc,EAAMe,UAAUsb,YAAc,CAC/C7S,UAAW,CACT9G,QACE,iEACFC,YAAY,GAEdC,QAAS,CAGPF,QAAS,wDACTC,YAAY,GAEdI,YAAa,QAgEf/O,OAAOK,eAAekoB,EAAa,aAAc,CAC/C/mB,MAdF,SAAoBuL,EAAWyb,GACJ,iBAAdzb,IACTA,EAAY,CAACA,IAEfA,EAAU2Q,SAAQ,SAAU+K,IA/C9B,SAA2BA,EAAMC,GAC/B,IAAIC,EAAY,cACZ9b,EAAUb,EAAMe,UAAU0b,GAC9B,GAAK5b,EAAL,CAGA,IAAIyW,EAAQzW,EAAQ8b,GACpB,IAAKrF,EAAO,CAEV,IAAI9T,EAAa,CAAC,EAClBA,EAAWmZ,GAAa,CACtBja,QAAS,wCACTC,YAAY,EACZzB,MAAO,WAGToW,GADAzW,EAAUb,EAAMe,UAAU6C,aAAa6Y,EAAM,UAAWjZ,IACxCmZ,EAClB,CAOA,GANIrF,aAAiB7T,SAEnB6T,EAAQzW,EAAQ8b,GAAa,CAC3Bja,QAAS4U,IAGT5iB,MAAMF,QAAQ8iB,GAChB,IAAK,IAAIlhB,EAAI,EAAGgR,EAAIkQ,EAAMjhB,OAAQD,EAAIgR,EAAGhR,IACnCkhB,EAAMlhB,aAAcqN,SACtB6T,EAAMlhB,GAAK,CACTsM,QAAS4U,EAAMlhB,KAGnBsmB,EAASpF,EAAMlhB,SAGjBsmB,EAASpF,EA7BX,CA+BF,CAYIsF,CAAkBH,GAAM,SAAU/Z,GAC3BA,EAAQU,SACXV,EAAQU,OAAS,CAAC,GAEpBV,EAAQU,OAAOkE,KAAOkV,CACxB,GACF,GACF,IAIAD,EAAYD,WAAW,CAAC,OAAQ,aAAc,OAAQC,EACvD,CAjFA,CAiFEvc,EACL,CAtFApK,EAAOC,QAAUwmB,EACjBA,EAAYvb,YAAc,cAC1Bub,EAAYrZ,QAAU,2BCCtB,SAAS+E,EAAW/H,GAClBA,EAAMe,UAAUgH,WAAa/H,EAAMe,UAAUjL,OAAO,QAAS,CAC3D,aAAc,CACZkK,EAAMe,UAAUP,MAAM,cACtB,CACEkC,QACE,0GACFC,YAAY,IAGhBC,QAAS,CACP,CACEF,QAAS,uBACTC,YAAY,GAEd,CACED,QACE,mdACFC,YAAY,IAIhBuB,SACE,oGACFrB,OAAQ,CACNH,QAASe,OACP,aAAatL,OACX,MACC,eAAeA,OACd,IACA,0BAA0BA,OAC1B,IACA,4BAA4BA,OAC5B,IACA,sCAAsCA,OACtC,IACA,gBAAgBA,OAChB,IACA,oFACGA,OACL,IACA,YAAYA,QAEhBwK,YAAY,GAEdG,SACE,8FAEJ9C,EAAMe,UAAUgH,WAAW,cAAc,GAAGrF,QAC1C,uEACF1C,EAAMe,UAAU6C,aAAa,aAAc,UAAW,CACpDiB,MAAO,CAELnC,QACE,yLACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACN,eAAgB,CACdV,QAAS,4BACTC,YAAY,EACZzB,MAAO,iBACPkC,OAAQpD,EAAMe,UAAU8D,OAE1B,kBAAmB,UACnB,cAAe,aAInB,oBAAqB,CACnBnC,QACE,gMACFxB,MAAO,YAETsI,UAAW,CACT,CACE9G,QACE,sIACFC,YAAY,EACZS,OAAQpD,EAAMe,UAAUgH,YAE1B,CACErF,QACE,qFACFC,YAAY,EACZS,OAAQpD,EAAMe,UAAUgH,YAE1B,CACErF,QACE,kEACFC,YAAY,EACZS,OAAQpD,EAAMe,UAAUgH,YAE1B,CACErF,QACE,8eACFC,YAAY,EACZS,OAAQpD,EAAMe,UAAUgH,aAG5BrD,SAAU,8BAEZ1E,EAAMe,UAAU6C,aAAa,aAAc,SAAU,CACnDiZ,SAAU,CACRna,QAAS,QACTS,QAAQ,EACRjC,MAAO,WAET,kBAAmB,CACjBwB,QACE,2EACFS,QAAQ,EACRC,OAAQ,CACN,uBAAwB,CACtBV,QAAS,QACTxB,MAAO,UAET0I,cAAe,CACblH,QACE,mEACFC,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,YACTxB,MAAO,eAEToG,KAAMtH,EAAMe,UAAUgH,aAG1BtF,OAAQ,YAGZ,kBAAmB,CACjBC,QACE,4EACFC,YAAY,EACZQ,QAAQ,EACRjC,MAAO,cAGXlB,EAAMe,UAAU6C,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClBlB,QACE,oFACFC,YAAY,EACZzB,MAAO,cAGPlB,EAAMe,UAAUT,SAClBN,EAAMe,UAAUT,OAAO0B,IAAIyO,WAAW,SAAU,cAEhDzQ,EAAMe,UAAUT,OAAO0B,IAAI0O,aACzB,yNACGvY,OACH,eAGJ6H,EAAMe,UAAUN,GAAKT,EAAMe,UAAUgH,UACvC,CAjKAnS,EAAOC,QAAUkS,EACjBA,EAAWjH,YAAc,aACzBiH,EAAW/E,QAAU,CAAC,8BCCtB,SAAS8Z,EAAe9c,GAGtBA,EAAMe,UAAU+b,eAAiB,CAM/BC,QAAS,CACPra,QACE,8FACFC,YAAY,EACZS,OAAQ,CACNR,QAAS,CACPF,QACE,kEACFC,YAAY,GAGdF,OAAQ,CACNC,QAAS,gBACTC,YAAY,GAEdqa,WAAY,CACVta,QAAS,yBACTC,YAAY,EACZS,OAAQ,CACN,aAAc,UACdoI,UAAW,eACXzI,YAAa,OAGjB2X,QAAS,CACPhY,QAAS,aACTC,YAAY,EACZzB,MAAO,UAET6B,YAAa,MAwBjB,cAAe,CACbL,QAAS,8DACTC,YAAY,EACZS,OAAQ,CACNR,QAAS,CACPF,QAAS,gBACTC,YAAY,GAEdxK,OAAQ,CAGN,CACEuK,QAAS,yBACTC,YAAY,EACZS,OAAQ,CACN8Q,KAAM,YACNnR,YAAa,IACb,cAAe,CACbL,QAAS,UACTxB,MAAO,YAMb,CACEwB,QAAS,mBACTC,YAAY,EACZS,OAAQ,CACNR,QAAS,wCAIf,aAAc,kCACdsB,SAAU,0BACV,eAAgB,CACdxB,QAAS,8CACTC,YAAY,EACZzB,MAAO,YACPkC,OAAQ,CACNL,YAAa,OAGjBnN,OAAQ,CACN8M,QAAS,sDACTC,YAAY,EACZS,OAAQ,CACNyT,QAAS,CACPnU,QAAS,aACTC,YAAY,EACZzB,MAAO,UAET6B,YAAa,SAGjByI,UAAW,CACT9I,QAAS,oBACTU,OAAQ,CACNL,YAAa,OAGjBA,YAAa,WAKjBka,KAAM,CACJva,QAAS,yCACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,QACbF,OAAQ,MACRD,QAAS,2BAIjB,CA7IAhN,EAAOC,QAAUinB,EACjBA,EAAehc,YAAc,iBAC7Bgc,EAAe9Z,QAAU,2BCCzB,SAASka,EAAKld,GACZA,EAAMe,UAAUmc,KAAO,CACrBza,OAAQ,oCACR0a,UAAW,CACTza,QACE,oHACFxB,MAAO,WACPyB,YAAY,GAEduB,SACE,sHACFrB,OAAQ,8BACRC,SAAU,yCACViB,QAAS,qBACTnB,QAAS,SACTG,YAAa,cAEjB,CApBAnN,EAAOC,QAAUqnB,EACjBA,EAAKpc,YAAc,OACnBoc,EAAKla,QAAU,0BCCf,SAASoa,EAAMpd,GACbA,EAAMe,UAAUqc,MAAQpd,EAAMe,UAAUjL,OAAO,QAAS,CACtD2M,OAAQ,CACNC,QAAS,kCACTC,YAAY,EACZQ,QAAQ,GAEV,aAAc,CACZT,QACE,4EACFC,YAAY,GAEdC,QACE,gZACFsB,SAAU,6BACVrB,OAAQ,+CACRC,SAAU,oDACVC,YAAa,gBACbgD,QACE,oGAEJ/F,EAAMe,UAAU6C,aAAa,QAAS,UAAW,CAC/CyZ,WAAY,CACV3a,QACE,8EACFC,YAAY,EACZS,OAAQ,CACNR,QAAS,WACT,aAAc,MACdG,YAAa,MAGjBua,UAAW,CACT5a,QACE,mEACFC,YAAY,EACZS,OAAQ,CACNL,YAAa,IACb,aAAc,MACdD,SAAU,OAGdjJ,SAAU,CACR6I,QACE,+HAGR,CAlDA9M,EAAOC,QAAUunB,EACjBA,EAAMtc,YAAc,QACpBsc,EAAMpa,QAAU,2BCChB,SAASua,EAAGvd,IACT,SAAWA,GACV,IAAI4J,EAAgB,8BAA8BzR,OAC9CsK,EAASgB,OACX,2CAA2CtL,OAAOjB,QAChD,OACA,WACE,OAAO0S,CACT,KAGA4T,EAAsB,CACxB5T,cAAe,CACblH,QAASe,OAAO,0BAA0BtL,OAASyR,GACnDjH,YAAY,EACZS,OAAQ,CACNhL,QAAS,CACPsK,QAAS,wBACTC,YAAY,EACZS,OAAQ,MAEVL,YAAa,eAIfwa,EAAMvd,EAAMe,UAAUwc,GAAK,CAC7BlkB,QAAS,MACTQ,SAAU,CACR6I,QAASe,OAAOhB,EAAOtK,OAAS,gBAAgBA,QAChDwK,YAAY,EACZQ,QAAQ,EACRC,OAAQoa,GAEV/a,OAAQ,CACNC,QAASD,EACTE,YAAY,EACZQ,QAAQ,EACRC,OAAQoa,GAEVtZ,SAAU,CACRxB,QAAS,uBACTC,YAAY,GAEdqB,SAAU,UACV,mBAAoB,CAClBtB,QAAS,4BACTxB,MAAO,YAET0B,QACE,wHACFmB,QAAS,qBACTlB,OAAQ,4CACRC,SAAU,CACR,CACEJ,QAAS,OACTxB,MAAO,QAET,kEAEF,mBAAoB,CAClBwB,QAAS,wBACTxB,MAAO,YAET6B,YAAa,oCACb2P,IAAK,CACHhQ,QAAS,KACTxB,MAAO,cAGXsc,EAAoB5T,cAAcxG,OAAOhL,QAAQgL,OAASma,CAC3D,CArEA,CAqEEvd,EACL,CA1EApK,EAAOC,QAAU0nB,EACjBA,EAAGzc,YAAc,KACjByc,EAAGva,QAAU,2BCCb,SAASya,EAASzd,IACf,SAAWA,GA2CV,SAAS0d,EAAOvlB,EAAQoQ,GACtB,OAAO9E,OACLtL,EAAOjB,QAAQ,SAAS,WACtB,MAAO,yDAAyDiB,MAClE,IACAoQ,EAEJ,CAjDAvI,EAAMe,UAAU6C,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjBlB,QAASe,OACP,YACEzD,EAAMe,UAAUgH,WAAW,qBAAqBrF,QAAQvK,QAE5DwK,YAAY,EACZzB,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDlB,EAAMe,UAAU6C,aAAa,aAAc,WAAY,CACrDoR,OAAQ,CACNtS,QAASe,OACP,YAAczD,EAAMe,UAAUgH,WAAqB,SAAE5P,QAEvDwK,YAAY,EACZzB,MAAO,CAAC,WAAY,sBAGxBlB,EAAMe,UAAU6C,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB,CAGElB,QACE,yOACFxB,MAAO,cAET,CAEEwB,QAAS,wBACTxB,MAAO,iBAmBblB,EAAMe,UAAU6C,aAAa,aAAc,UAAW,CACpD+Z,QAAS,CAEPjb,QAASgb,EACP,4GACGvlB,QAELwK,YAAY,EACZS,OAAQpD,EAAMe,UAAUgH,YAE1BlS,QAAS,CAEP6M,QAASgb,EACP,mEACGvlB,QAELwK,YAAY,EACZS,OAAQpD,EAAMe,UAAUgH,cAG5B/H,EAAMe,UAAUgH,WAAoB,QAAEmN,QACpC,CACExS,QAAS,wCACTxB,MAAO,UAET,CACEwB,QACE,gGACFxB,MAAO,gBAET,CACEwB,QAAS,WACTxB,MAAO,CAAC,OAAQ,QAElB,CACEwB,QAAS,gBACTxB,MAAO,QAGXlB,EAAMe,UAAU6C,aAAa,aAAc,WAAY,CACrDga,OAAQ,CACNlb,QAAS,QACTxB,MAAO,YAET2c,MAAO,CACLnb,QAAS,KACTxB,MAAO,cAGXlB,EAAMe,UAAU6C,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjBlB,QAASgb,EAAO,gBAAgBvlB,QAChCwK,YAAY,GAEd,mBAAoB,CAClBD,QAAS,8CACTC,YAAY,GAEdmb,IAAK,CAEHpb,QACE,kFACFxB,MAAO,YAET6c,QAAS,CACPrb,QAAS,qBACTxB,MAAO,gBAUX,IAPA,IAAI8c,EAAuB,CACzB,WACA,oBACA,SACA,kBACA,mBAEO5nB,EAAI,EAAGA,EAAI4nB,EAAqB3nB,OAAQD,IAAK,CACpD,IAAIkhB,EAAQ0G,EAAqB5nB,GAC7BZ,EAAQwK,EAAMe,UAAUgH,WAAWuP,GACR,WAA3BtX,EAAMiB,KAAKzH,KAAKhE,KAClBA,EAAQwK,EAAMe,UAAUgH,WAAWuP,GAAS,CAC1C5U,QAASlN,IAGb,IAAI4N,EAAS5N,EAAM4N,QAAU,CAAC,EAC9B5N,EAAM4N,OAASA,EACfA,EAAO,oBAAsB,eAC/B,CACD,CA3IA,CA2IEpD,EACL,CAhJApK,EAAOC,QAAU4nB,EACjBA,EAAS3c,YAAc,WACvB2c,EAASza,QAAU,2BCCnB,SAASib,EAAYje,IAClB,SAAWA,GACV,IAAIke,EAAiBle,EAAMe,UAAUgH,WAAW,mBAC5CoW,EAAyBD,EAAexb,QAAQvK,OAChDimB,EAAsBF,EAAe9a,OAAsB,cAC3Dib,EACFD,EAAoBhb,OAAO,6BACzBkb,EAAuBF,EAAoB1b,QAAQvK,OAYvD,SAASomB,EAAejd,EAAUU,GAChC,GAAKhC,EAAMe,UAAUO,GAGrB,MAAO,CACLoB,QAASe,OAAO,OAASzB,EAAM,SAAWmc,GAC1Cxb,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACN,uBAAwB,CACtBV,QAAS,QACTxB,MAAO,UAET,gBAAiB,CACfwB,QAAS,UACTxB,MAAOI,IAIf,CA6BA,SAASkd,EAAeC,EAASnd,GAC/B,MAAO,MAAQA,EAASod,cAAgB,IAAMD,EAAU,KAC1D,CASA,SAASE,EAAkBzkB,EAAM2G,EAASS,GACxC,IAAIO,EAAM,CACR3H,KAAMA,EACN2G,QAASA,EACTS,SAAUA,GAKZ,OAHAtB,EAAMoC,MAAMC,IAAI,kBAAmBR,GACnCA,EAAIJ,OAASzB,EAAM4e,SAAS/c,EAAI3H,KAAM2H,EAAIhB,SAC1Cb,EAAMoC,MAAMC,IAAI,iBAAkBR,GAC3BA,EAAIJ,MACb,CAOA,SAASod,EAAgChV,GACvC,IAAIiV,EAAc,CAAC,EACnBA,EAAY,6BAA+BT,EAE3C,IAAI5c,EAASzB,EAAM4e,SAAS/U,EAAYiV,GACxC,GAAsB,IAAlBrd,EAAOpL,OAAc,CASvB,IAAIqW,EAAO,CAAC,EAAG,GACfA,EAAK7T,KAAKkmB,MACRrS,EACAiS,EAAkBld,EAAO,GAAIzB,EAAMe,UAAUgH,WAAY,eAE3DtG,EAAOud,OAAOD,MAAMtd,EAAQiL,EAC9B,CACA,OAAO,IAAI1M,EAAM0B,MACf,gBACAD,EACA2c,EAAoBld,MACpB2I,EAEJ,CAkBA,SAASoV,EAAiB/kB,EAAM2G,EAASS,GAIvC,IAAI4d,EAAUlf,EAAM4e,SAAS1kB,EAAM,CACjC0P,cAAe,CACblH,QAASe,OAAO6a,GAChB3b,YAAY,KAGZwc,EAAqB,EAErBC,EAAiB,CAAC,EAoBlBC,EAAiBV,EAnBFO,EAChB9d,KAAI,SAAUkW,GACb,GAAqB,iBAAVA,EACT,OAAOA,EAIP,IAFA,IACIgI,EADAC,EAA0BjI,EAAMlf,SAK3B,IAFP8B,EAAKge,QACFoH,EAAcd,EAAeW,IAAsB7d,MAMxD,OADA8d,EAAeE,GAAeC,EACvBD,CAEX,IACCrgB,KAAK,IAC6C4B,EAASS,GAC1Dke,EAAexrB,OAAOkT,KAAKkY,GAwD/B,OAvDAD,EAAqB,EAMrB,SAASM,EAAWhe,GAClB,IAAK,IAAIrL,EAAI,EAAGA,EAAIqL,EAAOpL,OAAQD,IAAK,CACtC,GAAI+oB,GAAsBK,EAAanpB,OACrC,OAEF,IAAIihB,EAAQ7V,EAAOrL,GACnB,GAAqB,iBAAVkhB,GAA+C,iBAAlBA,EAAMlf,QAAsB,CAClE,IAAIknB,EAAcE,EAAaL,GAC3BO,EACe,iBAAVpI,EACHA,EAEAA,EAAMlf,QACRyE,EAAQ6iB,EAAExH,QAAQoH,GACtB,IAAe,IAAXziB,EAAc,GACdsiB,EACF,IAAIQ,EAASD,EAAEE,UAAU,EAAG/iB,GACxBgjB,EAAShB,EACXO,EAAeE,IAEbQ,EAAQJ,EAAEE,UAAU/iB,EAAQyiB,EAAYjpB,QACxC2Q,EAAc,GAKlB,GAJI2Y,GACF3Y,EAAYnO,KAAK8mB,GAEnB3Y,EAAYnO,KAAKgnB,GACbC,EAAO,CACT,IAAIC,EAAc,CAACD,GACnBL,EAAWM,GACX/Y,EAAYnO,KAAKkmB,MAAM/X,EAAa+Y,EACtC,CACqB,iBAAVzI,GACT7V,EAAOud,OAAOD,MAAMtd,EAAQ,CAACrL,EAAG,GAAG+L,OAAO6E,IAC1C5Q,GAAK4Q,EAAY3Q,OAAS,GAE1BihB,EAAMlf,QAAU4O,CAEpB,CACF,KAAO,CACL,IAAI5O,EAAUkf,EAAMlf,QAChB1D,MAAMF,QAAQ4D,GAChBqnB,EAAWrnB,GAEXqnB,EAAW,CAACrnB,GAEhB,CACF,CACF,CACAqnB,CAAWJ,GACJ,IAAIrf,EAAM0B,MACfJ,EACA+d,EACA,YAAc/d,EACdpH,EAEJ,CApMA8F,EAAMe,UAAUgH,WAAW,mBAAqB,CAK9CwW,EACE,MACA,0HACGpmB,QAGLomB,EAAe,OAAQ,yCAAyCpmB,QAChEomB,EAAe,MAAO,QAAQpmB,QAC9BomB,EAAe,WAAY,oBAAoBpmB,QAC/ComB,EACE,UACA,6CAA6CpmB,QAE/ComB,EAAe,MAAO,QAAQpmB,QAC9B+lB,GACApM,OAAOkO,SAsLT,IAAIzgB,EAAqB,CACvBwI,YAAY,EACZtH,IAAI,EACJwf,YAAY,EACZC,IAAI,EACJC,KAAK,EACLC,KAAK,GAsEP,SAASC,EAAc7qB,GACrB,MAAqB,iBAAVA,EACFA,EACEd,MAAMF,QAAQgB,GAChBA,EAAM4L,IAAIif,GAAephB,KAAK,IAE9BohB,EAAc7qB,EAAM4C,QAE/B,CA5EA4H,EAAMoC,MAAMmF,IAAI,kBAAkB,SAAU1F,GACpCA,EAAIP,YAAY/B,GAStB,SAAS+gB,EAAoB7e,GAC3B,IAAK,IAAIrL,EAAI,EAAGgR,EAAI3F,EAAOpL,OAAQD,EAAIgR,EAAGhR,IAAK,CAC7C,IAAIkhB,EAAQ7V,EAAOrL,GACnB,GAAqB,iBAAVkhB,EAAX,CAGA,IAAIlf,EAAUkf,EAAMlf,QACpB,GAAK1D,MAAMF,QAAQ4D,GAMnB,GAAmB,oBAAfkf,EAAM9d,KAA4B,CAepC,IAAI+mB,EAAWnoB,EAAQ,GACvB,GACqB,IAAnBA,EAAQ/B,QACY,iBAAbkqB,GACW,kBAAlBA,EAAS/mB,KACT,CAEA,IAAIU,EAAOmmB,EAAcE,GACrBrf,EAAQqf,EAASrf,MACjBI,EAAW5M,MAAMF,QAAQ0M,GAASA,EAAM,GAAKA,EAC7CL,EAAUb,EAAMe,UAAUO,GAC9B,IAAKT,EAEH,SAEFzI,EAAQ,GAAK6mB,EAAiB/kB,EAAM2G,EAASS,EAC/C,CACF,MACEgf,EAAoBloB,OAtCG,iBAAZA,GACTkoB,EAAoB,CAACloB,GAJzB,CA2CF,CACF,CACAkoB,CAAoBze,EAAIJ,OAC1B,GAgBD,CArUA,CAqUEzB,EACL,CA1UApK,EAAOC,QAAUooB,EACjBA,EAAYnd,YAAc,cAC1Bmd,EAAYjb,QAAU,iCCHtB,IAAIgZ,EAAuB,EAAQ,OAC/BwE,EAAsB,EAAQ,OAIlC,SAASC,EAAMzgB,GACbA,EAAMY,SAASob,GACfhc,EAAMY,SAAS4f,GACd,SAAWxgB,GACV,IAAI+H,EAAa/H,EAAMe,UAAUgH,WAC7BvO,EAAO,2CAA2CrB,OAClDuoB,EACF,2CAA6ClnB,EAAO,UACtDwG,EAAMe,UAAU0f,MAAQzgB,EAAMe,UAAUjL,OAAO,cAAe,CAC5D0T,UAAW,CAET9G,QAASe,OACPid,EAAkB,uCAAuCvoB,QAE3DwK,YAAY,EACZS,OAAQ,CACNL,YAAa,SAInB/C,EAAMe,UAAU6C,aAAa,QAAS,UAAW,CAC/C,qBAAsB,CAEpBlB,QAASe,OACPid,EACE,wDAAwDvoB,QAE5DwK,YAAY,EACZS,OAAQ,CACNoG,UAAW,CACT9G,QAAS,2BACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,OAGjB7I,KAAM,CACJwI,QAAS,oBACTC,YAAY,EACZS,OAAQ2E,EACR7G,MAAO,uBAET6B,YAAa,WAGjB,aAAc,CACZ,CACEL,QAASe,OACP,mHAAmHtL,OAAOjB,QACxH,WACA,WACE,OAAOsC,CACT,KAGJmJ,YAAY,EACZS,OAAQ,CACNL,YAAa,OAGjB,CACEL,QAASe,OAAO,gBAAkBjK,GAClCmJ,YAAY,EACZS,OAAQ,CACNX,OAAQsF,EAAWtF,OACnBI,OAAQkF,EAAWlF,OACnBkB,QAASgE,EAAWhE,QACpBnB,QAAS5C,EAAMe,UAAUkf,WAAWrd,QACpCE,SAAU,oBACVC,YAAa,qBAInB4d,QAAS,CACPje,QACE,yEACFC,YAAY,EACZS,OAAQ,CACNlJ,KAAM,CACJwI,QAAS,4BACTC,YAAY,EACZS,OAAQ2E,EACR7G,MAAO,2BAKflB,EAAMe,UAAUsb,YAAYC,WAAW,aAActc,EAAMe,UAAU0f,MACtE,CArFA,CAqFEzgB,EACL,CA5FApK,EAAOC,QAAU4qB,EACjBA,EAAM3f,YAAc,QACpB2f,EAAMzd,QAAU,2BCAhB,SAAS8W,EAAK9Z,GAEZA,EAAMe,UAAU+Y,KAAO,CACrBjgB,SAAU,CACR6I,QAAS,yCACTC,YAAY,EACZQ,QAAQ,GAEVV,OAAQ,CACNC,QAAS,yCACTC,YAAY,EACZQ,QAAQ,GAEV9J,QAAS,CACPqJ,QAAS,gCACTS,QAAQ,GAEVN,OAAQ,qCACRE,YAAa,WACbD,SAAU,IACViB,QAAS,qBACT6c,KAAM,CACJle,QAAS,WACTxB,MAAO,YAGXlB,EAAMe,UAAU8f,YAAc7gB,EAAMe,UAAU+Y,IAChD,CA9BAlkB,EAAOC,QAAUikB,EACjBA,EAAKhZ,YAAc,OACnBgZ,EAAK9W,QAAU,CAAC,6CCHhB,IAAI8d,EAAgB,EAAQ,OAI5B,SAASC,EAAM/gB,GACbA,EAAMY,SAASkgB,GACd,SAAW9gB,GACV,IAAIyC,EAAS,+CACbzC,EAAMe,UAAUggB,MAAQ/gB,EAAMe,UAAUjL,OAAO,OAAQ,CACrD+D,SAAU,CACR,CACE6I,QAASe,OAAOhB,EAAOtK,OAAS,aAChCgL,QAAQ,GAEV,CACET,QACE,iEACFxB,MAAO,aAGXuB,OAAQ,CACNC,QAASD,EACTU,QAAQ,GAEVN,OACE,+FAEL,CArBA,CAqBE7C,EACL,CA3BApK,EAAOC,QAAUkrB,EACjBA,EAAMjgB,YAAc,QACpBigB,EAAM/d,QAAU,iCCHhB,IAAI8d,EAAgB,EAAQ,OAI5B,SAASE,EAAMhhB,GACbA,EAAMY,SAASkgB,GACf9gB,EAAMe,UAAUigB,MAAQhhB,EAAMe,UAAUjL,OAAO,OAAQ,CACrDiN,YAAa,iBAEf/C,EAAMe,UAAU6C,aAAa,QAAS,cAAe,CACnDM,SAAU,mEAEd,CAXAtO,EAAOC,QAAUmrB,EACjBA,EAAMlgB,YAAc,QACpBkgB,EAAMhe,QAAU,2BCChB,SAASie,EAAajhB,GACpBA,EAAMe,UAAUkgB,aAAe,CAC7B,gBAAiB,CACfve,QAAS,SACTxB,MAAO,UAET,cAAe,CACbwB,QAAS,sBACTC,YAAY,EACZS,OAAQ,CACN,cAAe,CACbV,QACE,+HACFxB,MAAO,WAETvI,SAAU,CACR+J,QAAS,+CACTC,YAAY,EACZzB,MAAO,OAETgD,SAAU,CACRxB,QACE,uEACFC,YAAY,EACZS,OAAQ,CACNL,YAAa,OAGjBA,YAAa,OACbH,QAAS,iBACT1B,MAAO,CACLwB,QAAS,6DACTxB,MAAO,YAET,cAAe,CACbwB,QAAS,kBACTxB,MAAO,SACPkC,OAAQ,CACNL,YAAa,QAMzB,CA/CAnN,EAAOC,QAAUorB,EACjBA,EAAangB,YAAc,eAC3BmgB,EAAaje,QAAU,2BCCvB,SAASmd,EAAIngB,IACV,SAAWA,GACV,IAAI+H,EAAa/H,EAAMiB,KAAK/K,MAAM8J,EAAMe,UAAUgH,YAC9CvK,EAAQ,+CAA+CrF,OACvD+oB,EAAS,+CAA+C/oB,OACxDylB,EAAS,uCAAuCzlB,OAKpD,SAASW,EAAGX,EAAQoQ,GAWlB,OAVApQ,EAASA,EACNjB,QAAQ,QAAQ,WACf,OAAOsG,CACT,IACCtG,QAAQ,aAAa,WACpB,OAAOgqB,CACT,IACChqB,QAAQ,aAAa,WACpB,OAAO0mB,CACT,IACKna,OAAOtL,EAAQoQ,EACxB,CACAqV,EAAS9kB,EAAG8kB,GAAQzlB,OACpB6H,EAAMe,UAAUof,IAAMngB,EAAMe,UAAUjL,OAAO,SAAUiS,GACvD/H,EAAMe,UAAUof,IAAIne,IAAIU,QAAU5J,EAChC,wIACGX,QAEL6H,EAAMe,UAAUof,IAAIne,IAAIoB,OAAY,IAAEV,QAAU,iBAChD1C,EAAMe,UAAUof,IAAIne,IAAIoB,OAAO,cAAcV,QAC3C,qEACF1C,EAAMe,UAAUof,IAAIne,IAAIoB,OAAY,IAAEA,OAAO,cAC3C,4BACFpD,EAAMe,UAAUof,IAAIne,IAAIoB,OAAgB,QAAI2E,EAAoB,QAChE/H,EAAMe,UAAU6C,aACd,SACA,YACA,CACEga,OAAQ,CACNlb,QAAS5J,EAAG,WAAWX,QACvBiL,OAAQpD,EAAMe,UAAUof,MAG5BngB,EAAMe,UAAUof,IAAIne,KAEtBhC,EAAMe,UAAU6C,aACd,SACA,eACA,CACEiI,OAAQ,CAENnJ,QAAS5J,EAAG,YAAYX,QACxB+I,MAAO,sBACPkC,OAAQ,CACN,qBAAsB,CACpBV,QAAS,WACTxB,MAAO,eAEToG,KAAMtH,EAAMe,UAAUof,OAI5BngB,EAAMe,UAAUof,IAAIne,KAEtB,IAAImf,EAAiB,SAAU7J,GAC7B,OAAKA,EAGgB,iBAAVA,EACFA,EAEoB,iBAAlBA,EAAMlf,QACRkf,EAAMlf,QAERkf,EAAMlf,QAAQgJ,IAAI+f,GAAgBliB,KAAK,IARrC,EASX,EACIwgB,EAAa,SAAUhe,GAEzB,IADA,IAAI2f,EAAa,GACRhrB,EAAI,EAAGA,EAAIqL,EAAOpL,OAAQD,IAAK,CACtC,IAAIkhB,EAAQ7V,EAAOrL,GACfirB,GAAiB,EAgDrB,GA/CqB,iBAAV/J,IAEQ,QAAfA,EAAM9d,MACN8d,EAAMlf,QAAQ,IACY,QAA1Bkf,EAAMlf,QAAQ,GAAGoB,KAG2B,OAAxC8d,EAAMlf,QAAQ,GAAGA,QAAQ,GAAGA,QAG5BgpB,EAAW/qB,OAAS,GACpB+qB,EAAWA,EAAW/qB,OAAS,GAAGirB,UAChCH,EAAe7J,EAAMlf,QAAQ,GAAGA,QAAQ,KAG1CgpB,EAAWG,MAG2C,OAApDjK,EAAMlf,QAAQkf,EAAMlf,QAAQ/B,OAAS,GAAG+B,SAI1CgpB,EAAWvoB,KAAK,CACdyoB,QAASH,EAAe7J,EAAMlf,QAAQ,GAAGA,QAAQ,IACjDopB,aAAc,IAKpBJ,EAAW/qB,OAAS,GACL,gBAAfihB,EAAM9d,MACY,MAAlB8d,EAAMlf,QAGNgpB,EAAWA,EAAW/qB,OAAS,GAAGmrB,eAElCJ,EAAW/qB,OAAS,GACpB+qB,EAAWA,EAAW/qB,OAAS,GAAGmrB,aAAe,GAClC,gBAAflK,EAAM9d,MACY,MAAlB8d,EAAMlf,QAGNgpB,EAAWA,EAAW/qB,OAAS,GAAGmrB,eAElCH,GAAiB,IAGjBA,GAAmC,iBAAV/J,IAEzB8J,EAAW/qB,OAAS,GAC+B,IAAnD+qB,EAAWA,EAAW/qB,OAAS,GAAGmrB,aAClC,CAGA,IAAIC,EAAYN,EAAe7J,GAE7BlhB,EAAIqL,EAAOpL,OAAS,IACM,iBAAlBoL,EAAOrL,EAAI,IACM,eAAvBqL,EAAOrL,EAAI,GAAGoD,QAEhBioB,GAAaN,EAAe1f,EAAOrL,EAAI,IACvCqL,EAAOud,OAAO5oB,EAAI,EAAG,IAGrBA,EAAI,IACsB,iBAAlBqL,EAAOrL,EAAI,IACM,eAAvBqL,EAAOrL,EAAI,GAAGoD,QAEhBioB,EAAYN,EAAe1f,EAAOrL,EAAI,IAAMqrB,EAC5ChgB,EAAOud,OAAO5oB,EAAI,EAAG,GACrBA,KAEFqL,EAAOrL,GAAK,IAAI4J,EAAM0B,MACpB,aACA+f,EACA,KACAA,EAEJ,CAEEnK,EAAMlf,SAAoC,iBAAlBkf,EAAMlf,SAChCqnB,EAAWnI,EAAMlf,QAErB,CACF,EACA4H,EAAMoC,MAAMmF,IAAI,kBAAkB,SAAU1F,GACrB,QAAjBA,EAAIP,UAAuC,QAAjBO,EAAIP,UAGlCme,EAAW5d,EAAIJ,OACjB,GACD,CA5KA,CA4KEzB,EACL,CAjLApK,EAAOC,QAAUsqB,EACjBA,EAAIrf,YAAc,MAClBqf,EAAInd,QAAU,2BCCd,SAAS0e,EAAM1hB,GACbA,EAAMe,UAAU2gB,MAAQ,CACtBroB,QAAS,CAGPqJ,QACE,6EACFC,YAAY,GAEdkC,MAAO,CAELnC,QAAS,oCACTS,QAAQ,GAEVV,OAAQ,CAINC,QACE,uEACFS,QAAQ,GAEV1I,KAAM,CAEJiI,QAAS,+CACTC,YAAY,EACZQ,QAAQ,GAEVP,QACE,6PACFmB,QAAS,qBACTlB,OACE,kIAGFC,SACE,+FACFC,YAAa,oBAEb2B,SAAU,8CAEd,CA5CA9O,EAAOC,QAAU6rB,EACjBA,EAAM5gB,YAAc,QACpB4gB,EAAM1e,QAAU,2BCChB,SAAS2e,EAAW3hB,GAClBA,EAAMe,UAAU4gB,WAAa,CAC3BtoB,QAAS,CACPqJ,QAAS,SACTS,QAAQ,GAEVV,OAAQ,CACNC,QACE,uFACFC,YAAY,EACZQ,QAAQ,GAGVye,GAAI,CACFlf,QAASe,OACP,shBAAshBtL,OAAOjB,QAC3hB,WACA,WACE,MAAO,0FACJiB,MACL,IAEF,KAEF+I,MAAO,UAGTiT,KAAM,CACJzR,QACE,qEACFC,YAAY,EACZzB,MAAO,UAET8C,SAAU,cACV6d,MAAO,CACLnf,QAAS,qCACTxB,MAAO,UAET,4BAA6B,CAC3BwB,QAAS,aACTxB,MAAO,YAET4B,SAAU,IACVjJ,SACE,ilIACF6K,SACE,mIACF7B,OAAQ,CACNH,QAAS,6BACTC,YAAY,GAEdoB,QAAS,mCACThB,YAAa,SAEjB,CAzDAnN,EAAOC,QAAU8rB,EACjBA,EAAW7gB,YAAc,aACzB6gB,EAAW3e,QAAU,2BCCrB,SAAS8e,EAAO9hB,GACdA,EAAMe,UAAU+gB,OAAS,CACvBzoB,QAAS,CACPqJ,QAAS,UACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,0BACTS,QAAQ,GAEV,cAAe,CACbT,QACE,4HACFS,QAAQ,EACRjC,MAAO,YAGT,iBAAkB,CAChBwB,QAAS,OACTxB,MAAO,QAET,mBAAoB,CAClBwB,QACE,8HACFxB,MAAO,QAET,eAAgB,CACdwB,QACE,+HACFxB,MAAO,WAET,qBAAsB,CACpBwB,QAAS,6DACTxB,MAAO,WAET,iBAAkB,CAChBwB,QAAS,kDACTxB,MAAO,YAGT2B,OAAQ,0CACRC,SAAU,eACVC,YAAa,SAEjB,CA/CAnN,EAAOC,QAAUisB,EACjBA,EAAOhhB,YAAc,SACrBghB,EAAO9e,QAAU,2BCCjB,SAAS+e,EAAO/hB,IACb,SAAWA,GACVA,EAAMe,UAAUghB,OAAS/hB,EAAMe,UAAUjL,OAAO,QAAS,CACvD8M,QAAS,CAEPF,QACE,2bACFC,YAAY,GAEduB,SAAU,CACR,CACExB,QAAS,iCACTS,QAAQ,GAEV,CACET,QAAS,mCACTC,YAAY,EACZQ,QAAQ,IAGZN,OACE,kIACFC,SACE,gHAEG9C,EAAMe,UAAUghB,OAAO,cAC9B,IAAIC,EAAsB,CACxB,4BAA6B,CAC3Btf,QAAS,aACTxB,MAAO,eAET2I,WAAY,CACVnH,QAAS,UACTU,OAAQpD,EAAMe,UAAUghB,SAG5B/hB,EAAMe,UAAU6C,aAAa,SAAU,SAAU,CAE/C,iBAAkB,CAChB,CACElB,QAAS,2CACTxB,MAAO,YACPkC,OAAQ,CACNwG,cAAe,CACblH,QAAS,8BACTU,OAAQ4e,GAEVvf,OAAQ,YAGZ,CACEC,QAAS,iDACTxB,MAAO,aACPkC,OAAQ,CACNwG,cAAe,CACblH,QAAS,qDACTC,YAAY,EACZS,OAAQ4e,GAEVvf,OAAQ,aAIdhI,KAAM,CAEJiI,QAAS,6CACTS,QAAQ,YAGLnD,EAAMe,UAAUghB,OAAe,OACtC/hB,EAAMe,UAAU6C,aAAa,SAAU,UAAW,CAChDY,WAAY,CACV9B,QAAS,sCACTxB,MAAO,aAGXlB,EAAMe,UAAU6C,aAAa,SAAU,WAAY,CACjDa,MAAO,CACL/B,QAAS,gBACTxB,MAAO,YAGXlB,EAAMe,UAAUkhB,GAAKjiB,EAAMe,UAAUghB,OACrC/hB,EAAMe,UAAUmhB,IAAMliB,EAAMe,UAAUghB,MACvC,CAnFA,CAmFE/hB,EACL,CAxFApK,EAAOC,QAAUksB,EACjBA,EAAOjhB,YAAc,SACrBihB,EAAO/e,QAAU,CAAC,KAAM,+BCCxB,SAASmf,EAAMniB,IAEZ,SAAWA,GAMV,IAAIoiB,EAAQ,sDAAsDjqB,OAQlE,SAASkqB,EAAO3f,EAAS6F,GACvB,OAAO9E,OAAOf,EAAQxL,QAAQ,WAAYkrB,GAAQ7Z,EACpD,CACAvI,EAAMe,UAAUohB,MAAQ,CACtB9oB,QAAS,CACPqJ,QAAS,QAEX4f,OAAQ,CACN5f,QAAS,MACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,0BACTS,QAAQ,GAEVY,QAAS,CACPrB,QAAS2f,EAAO,yCAAyClqB,QACzDwK,YAAY,GAEd,gBAAiB,CACfD,QAAS2f,EAAO,2CAA2ClqB,QAC3DwK,YAAY,EACZzB,MAAO,WAET,kBAAmB,CACjBwB,QAAS2f,EAAO,mCAAmClqB,QACnDwK,YAAY,EACZzB,MAAO,WAET1H,KAAM,CACJ,CACEkJ,QAAS2f,EACP,mEACGlqB,QAELwK,YAAY,EACZzB,MAAO,WAET,CACEwB,QAAS2f,EACP,0DAA0DlqB,QAE5DwK,YAAY,EACZzB,MAAO,cAQX0B,QAAS,CACPF,QAAS2f,EACP,qPACGlqB,QAELwK,YAAY,GAGdtN,KAAM,CAEJqN,QAAS2f,EACP,2EACGlqB,QAELwK,YAAY,GAGdE,OAAQ,CACNH,QAAS2f,EACP,2FACGlqB,OACH,KAEFwK,YAAY,GAGdI,YAAa,iBAMb,gBAAiB,CACfL,QAAS,0BACTxB,MAAO,aAGXlB,EAAMe,UAAUwhB,IAAMviB,EAAMe,UAAUohB,KACvC,CAvGA,CAuGEniB,EACL,CA7GApK,EAAOC,QAAUssB,EACjBA,EAAMrhB,YAAc,QACpBqhB,EAAMnf,QAAU,CAAC,+BCCjB,SAASwf,EAAMxiB,GACbA,EAAMe,UAAUyhB,MAAQ,CACtBnpB,QAAS,CACPqJ,QAAS,SACTS,QAAQ,GAEVV,OAAQ,CACNC,QACE,mGACFS,QAAQ,GAEVoY,KAAM,CACJ7Y,QAAS,sBACTC,YAAY,EACZzB,MAAO,WAETqD,QAAS,CACP7B,QAAS,qBACTxB,MAAO,WAET,aACE,2EACF0B,QACE,ibACFmB,QAAS,0BACTG,SAAU,uBACVue,SAAU,CACR,CAEE/f,QACE,2QACFxB,MAAO,UAET,CAEEwB,QACE,2GACFxB,MAAO,WAGX2B,OACE,oHACFC,SAAU,kCACVC,YAAa,iBAEjB,CAhDAnN,EAAOC,QAAU2sB,EACjBA,EAAM1hB,YAAc,QACpB0hB,EAAMxf,QAAU,2BCChB,SAAS0f,EAAM1iB,IACZ,SAAWA,GACV,IAAI2iB,EAAc,6BACdC,EAAY,CACd,mBAAoB,CAClBlgB,QAASigB,EACTzhB,MAAO,UAGXlB,EAAMe,UAAU2hB,MAAQ,CACtBrpB,QAAS,MAETwpB,MAAO,CACLngB,QACE,mEACFC,YAAY,GAMdmgB,SAAU,CACR,CACEpgB,QACE,0FACFU,OAAQwf,EACR1hB,MAAO,UAET,CACEwB,QACE,4FACFC,YAAY,EACZS,OAAQwf,EACR1hB,MAAO,WAOX0B,QAAS,CACPF,QACE,wFACFC,YAAY,GAEdkE,IAAK,CACHnE,QAAS,uBACTC,YAAY,GAMdogB,SAAU,CACRrgB,QACE,4JACFC,YAAY,EACZzB,MAAO,cAETgD,SAAU,CACRxB,QAASigB,EACTzhB,MAAO,YAET6B,YAAa,YAEf/C,EAAMe,UAAUiiB,IAAMhjB,EAAMe,UAAU2hB,MACtC1iB,EAAMe,UAAUkiB,QAAUjjB,EAAMe,UAAU2hB,KAC3C,CAlEA,CAkEE1iB,EACL,CAvEApK,EAAOC,QAAU6sB,EACjBA,EAAM5hB,YAAc,QACpB4hB,EAAM1f,QAAU,CAAC,MAAO,wCCHxB,IAAI4O,EAA4B,EAAQ,OACpCsR,EAAe,EAAQ,OAI3B,SAASC,EAAMnjB,GACbA,EAAMY,SAASgR,GACf5R,EAAMY,SAASsiB,GACd,SAAWljB,GACVA,EAAMe,UAAUoiB,MAAQ,CACtB9pB,QAAS,eACT,YAAa,CAEXqJ,QAAS,kDACTC,YAAY,EACZzB,MAAO,aAETkJ,UAAW,CACT1H,QAAS,aACTxB,MAAO,eAETkiB,IAAK,CACH1gB,QAAS,mBACTxB,MAAO,eACPkC,OAAQpD,EAAMe,UAAUqiB,MAG5B,IAAIC,EAAcrjB,EAAMe,UAAUjL,OAAO,SAAU,CAAC,GACpDkK,EAAMe,UAAU6C,aACd,SACA,aACA,CACE,SAAU,CACRlB,QAAS,qDACTU,OAAQ,CACN,YAAa,CACXV,QAAS,WACTxB,MAAO,aAET,aAAc,CACZwB,QAAS,WACTU,OAAQ,CACNL,YAAa,CACX,KACA,CACEL,QAAS,mBACTC,YAAY,IAGhBygB,IAAK,CACH1gB,QAAS,mBACTU,OAAQpD,EAAMe,UAAUqiB,UAOpCC,EAAYrhB,KAEdhC,EAAMoC,MAAMmF,IAAI,mBAAmB,SAAU1F,GACtB,UAAjBA,EAAIP,WAKRtB,EAAMe,UAAU,qBAAqBiR,kBACnCnQ,EACA,QAHA,wHAMFA,EAAIhB,QAAUwiB,EAChB,IACArjB,EAAMoC,MAAMmF,IAAI,kBAAkB,SAAU1F,GAC1C7B,EAAMe,UAAU,qBAAqBkR,qBAAqBpQ,EAAK,QACjE,GACD,CApEA,CAoEE7B,EACL,CA3EApK,EAAOC,QAAUstB,EACjBA,EAAMriB,YAAc,QACpBqiB,EAAMngB,QAAU,2BCAhB,SAASsgB,EAAKtjB,GAQZA,EAAMe,UAAUuiB,KAAOtjB,EAAMe,UAAUjL,OAAO,MAAO,CACnDuD,QAAS,CACP,mBACA,CACEqJ,QAAS,kBACTC,YAAY,IAGhB6N,OAAQ,CACN9N,QACE,0EACFU,OAAQ,CACNL,YAAa,UAIjBkF,SAAU,CACRvF,QACE,0GACFU,OAAQ,CAENY,SAAU,aAGdnK,SAAU,0CACViJ,SAAU,aAEZ9C,EAAMe,UAAU6C,aAAa,OAAQ,WAAY,CAC/CI,SAAU,CAER,CACEtB,QAAS,cACTU,OAAQ,CACNL,YAAa,MAGjB,aAEF,cAAe,CACbL,QAAS,sCACTC,YAAY,EACZzB,MAAO,aAGb,CAvDAtL,EAAOC,QAAUytB,EACjBA,EAAKxiB,YAAc,OACnBwiB,EAAKtgB,QAAU,gCCHf,IAAIugB,EAAkB,EAAQ,OAI9B,SAASC,EAASxjB,GAChBA,EAAMY,SAAS2iB,GACd,SAAWvjB,GAMV,IALA,IAAIyjB,EACF,mGACGtrB,OAGI/B,EAAI,EAAGA,EADQ,EACeA,IACrCqtB,EAAmBA,EAAiBvsB,QAAQ,WAAW,WACrD,OAAOusB,CACT,IAEFA,EAAmBA,EAAiBvsB,QAAQ,UAAW,UAAUiB,QACjE,IAAIqrB,EAAYxjB,EAAMe,UAAUyiB,SAAW,CACzCnqB,QAAS,8BACT,kBAAmB,CACjBqJ,QAASe,OACP,8DAA8DtL,OAAOjB,QACnE,WACA,WACE,OAAOusB,CACT,IAEF,KAEF9gB,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNuM,OAAQ,CACNjN,QAAS,eACTC,YAAY,EACZzB,MAAO,kBACPkC,OAAQ,CACN,oBAAqB,CACnBV,QAAS,iBACTS,QAAQ,EACRC,OAAQ,CACNL,YAAa,YACbygB,SAAU,CACR9gB,QAAS,UACTxB,MAAO,oBACPkC,OAAQ,QAIdkE,KAAMtH,EAAMe,UAAU4O,SAG1B5M,YAAa,MAGjBN,OAAQ,CACNC,QAAS,oBACTS,QAAQ,GAEV,aAAc,CACZT,QAAS,mBACTC,YAAY,GAEdC,QAAS,CACPF,QAAS,iBACTU,OAAQ,CACNL,YAAa,QAGjBD,SAAU,aACVC,YAAa,CACXL,QACE,uGACFC,YAAY,GAEdE,OAAQ,qBAEV2gB,EAAS,mBAAmBpgB,OAAe,OAAEA,OAC3C,qBACAA,OAAiB,SAAEA,OAASogB,EAC9BxjB,EAAMe,UAAU2iB,GAAKF,CACtB,CA5EA,CA4EExjB,EACL,CAlFApK,EAAOC,QAAU2tB,EACjBA,EAAS1iB,YAAc,WACvB0iB,EAASxgB,QAAU,iCCHnB,IAAI4O,EAA4B,EAAQ,OAIxC,SAAS+R,EAAO3jB,GACdA,EAAMY,SAASgR,GACf5R,EAAMe,UAAU4iB,OAAS,CACvBtqB,QAAS,CACPqJ,QAAS,2DACTC,YAAY,GAEdyH,UAAW,CACT1H,QAAS,0CACTxB,MAAO,eAETuB,OAAQ,CACNC,QAAS,kBACTS,QAAQ,GAEVP,QACE,oOACFwU,OACE,ywBACFlT,SAAU,CACR,CACExB,QAAS,aACTC,YAAY,EACZzB,MAAO,UAET,CAEEwB,QAAS,6BACTC,YAAY,IAGhBoB,QAAS,yBACTV,MAAO,CACLX,QAAS,OACTxB,MAAO,YAGT2B,OAAQ,oBACRC,SAAU,wDACVC,YAAa,aACb6gB,MAAO,CACLlhB,QAAS,YACTxB,MAAO,YAGXlB,EAAMoC,MAAMmF,IAAI,mBAAmB,SAAU1F,GAC3C,IAEIgiB,GAAY,EAChB7jB,EAAMe,UAAU,qBAAqBiR,kBACnCnQ,EACA,SAJA,uGAMA,SAAUpK,GACR,IAAIqsB,EAAW,iBAAiB9qB,KAAKvB,GACrC,GAAIqsB,EAAU,CACZ,IAAI9hB,EAAM8hB,EAAS,GACnB,GAAY,QAAR9hB,IAAkB6hB,EAEpB,OADAA,GAAY,GACL,EACF,GAAY,WAAR7hB,EAET,OADA6hB,GAAY,GACL,CAEX,CACA,OAAQA,CACV,GAEJ,IACA7jB,EAAMoC,MAAMmF,IAAI,kBAAkB,SAAU1F,GAC1C7B,EAAMe,UAAU,qBAAqBkR,qBAAqBpQ,EAAK,SACjE,GACF,CA3EAjM,EAAOC,QAAU8tB,EACjBA,EAAO7iB,YAAc,SACrB6iB,EAAO3gB,QAAU,2BCCjB,SAAS+gB,EAAK/jB,IACX,SAAWA,GAQV,SAASgkB,EAAY3uB,GACnB,OAAOoO,OAAO,OAAOtL,OAAS,MAAQ9C,EAAO,IAAM,aAAa8C,OAClE,CAOA,SAAS8rB,EAAUvhB,GACjB,OAAOe,OACL,WAAWtL,OAAS,MAAQuK,EAAU,IAAM,YAAYvK,OAE5D,CAGA,IAAI+P,EAAS,6BAA6B/P,OACtC+rB,EAAS,IAAMhc,EACfic,EAAM,QAEN3mB,EAAQ,UACR4mB,EACF,oFACGjsB,OACDmJ,EAAW,CAGb+iB,QAAS,CACP3hB,QAAS,QACTxB,MAAO,CAAC,UAAW,UAErB7H,QAAS,MACToJ,OAAQ,CACNC,QAAS,oBACTS,QAAQ,EACRC,OAAQ,CACNsF,SAAU,oBACVR,OAAQzE,OAAO,IAAMyE,EAAS,OAGlC,gBAAiB,CACfxF,QAASe,OAAO,MAAQyE,GACxBhH,MAAO,CAAC,WAAY,WAEtB,gBAAiB,CACfwB,QAASe,OAAO,IAAMyE,GACtBhH,MAAO,YAET8d,OAAQ,CACNtc,QAASe,OAAO,MAAQyE,GACxBhH,MAAO,CAAC,SAAU,aAEpB0B,QAAS,CACP,CACEF,QAASe,OACP0gB,EACE,8IACA3mB,GAEJmF,YAAY,GAEd,CACED,QAASe,OACP0gB,EACE,wDACA3mB,GAEJmF,YAAY,IAGhB2hB,QAAS,CACP5hB,QAASshB,EAAY,UAAU7rB,QAC/BwK,YAAY,EACZzB,MAAO,WAETqjB,YAAa,CACX7hB,QAASshB,EAAY,cAAc7rB,QACnCwK,YAAY,EACZzB,MAAO,WAET6C,QAAS,CACPrB,QAASuhB,EAAU,QAAQ9rB,QAC3BwK,YAAY,GAEdE,OAAQ,CACNH,QAASuhB,EAAU,qBAAqB9rB,QACxCwK,YAAY,GAEd6hB,OAAQ,CACN9hB,QAASe,OAAO0gB,EAAM,oCAAsCjc,GAC5DvF,YAAY,EACZS,OAAQ,CACNR,QAAS,aACToB,SAAUP,OAAOyE,KAGrBuc,MAAO,CACL/hB,QAASe,OACP0gB,EACE,mCAAmChsB,OACnC+P,EACA,QAAQ/P,OACRisB,EACA,KAAKjsB,QAETwK,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNR,QAAS,kBAGTzM,UAAW,KACX+N,SAAU,CACRxB,QAASe,OAAO,SAAWyE,GAC3BvF,YAAY,GAEdI,YAAa,SAGjB2hB,OAAQ,CACNhiB,QAASe,OACP0gB,EACE,yBACAjc,EACA,YACAA,EACA,eAEJvF,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNR,QAAS,UAGTzM,UAAW,KACX4M,YAAa,SAGjB4hB,IAAK,CACHjiB,QAASe,OAAO0gB,EAAMjc,GACtBvF,YAAY,GAEdI,YAAa,CAEX,uBACA,CACEL,QAAS,eACTC,YAAY,KAIdiiB,EAAM,CACR,cAAenhB,OAAOygB,GACtBW,QAAS,CACPniB,QAASe,OACP,KAAKtL,OAAS+P,EAAS,YAAY/P,OAASisB,EAAY,KAAKjsB,QAE/DiL,OAAQ9B,GAEVoH,SAAU,CACRhG,QAASe,OAAO,YAAYtL,OAAS+P,GACrCvF,YAAY,EACZzB,MAAO,YAEToG,KAAMhG,GAEJwjB,EAAQ,oBACRC,EAAU,CACZriB,QAASe,OAAO0gB,EAAMC,EArJX,WAsJXzhB,YAAY,EACZS,OAAQ,CACN,YAAa,CACXV,QAASe,OAAO,qBAAuBqhB,GACvC1hB,OAAQwhB,GAEV,oBAAqB,CACnBliB,QAASe,OAAO,wBAA0BqhB,GAC1C1hB,OAAQwhB,GAEV1d,KAAM,CACJxE,QAASe,OAAO,WAAaqhB,EAAQ,8BACrC1hB,OAAQwhB,GAEVlc,SAAU,CACRhG,QAASe,OAAOyE,GAChBhH,MAAO,YAET6B,YAAa,SAGjBzB,EAAiB,OAAE8B,OAAOjN,UAAY4uB,EACtCzjB,EAAgB,MAAE8B,OAAOjN,UAAY6J,EAAMiB,KAAK/K,MAAM6uB,GACtDzjB,EAAgB,MAAE8B,OAAOjN,UAAUiN,OAAO4hB,QAAUD,EACpD/kB,EAAMe,UAAUgjB,KAAOziB,EACvBtB,EAAMe,UAAUkkB,MAAQ3jB,EACxBtB,EAAMe,UAAUmkB,MAAQ5jB,EACxBtB,EAAMe,UAAU,cAAgBO,CACjC,CA7MA,CA6MEtB,EACL,CAlNApK,EAAOC,QAAUkuB,EACjBA,EAAKjjB,YAAc,OACnBijB,EAAK/gB,QAAU,2BCCf,SAASmiB,EAAWnlB,GAClBA,EAAMe,UAAUokB,WAAa,CAC3B9rB,QAAS,CACP,CACEqJ,QAAS,4BACTC,YAAY,GAEd,CACED,QAAS,eACTC,YAAY,IAGhB,sBAAuB,CAGrBD,QAAS,kDACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNY,SAAU,CACRtB,QAAS,sCACTC,YAAY,GAEdiH,cAAe,CACblH,QAAS,uBACTC,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,WACTxB,MAAO,cAIbuB,OAAQ,YAGZA,OAAQ,CACN,CACEC,QAAS,qCACTS,QAAQ,GAEV,CACET,QAAS,iBACTS,QAAQ,GAEV,kBAEF0B,MAAO,CACL,CACEnC,QAAS,8DACTS,QAAQ,EACRC,OAAQ,CACN/J,QAAS,CACPqJ,QAAS,eACTC,YAAY,KAIlB,CACED,QAAS,uDACTS,QAAQ,IAGZP,QAAS,CACPF,QACE,wQACFC,YAAY,GAEd,mBAAoB,CAClBD,QACE,+JACFC,YAAY,EACZzB,MAAO,YAET6C,QAAS,CACPrB,QAAS,iDACTC,YAAY,GAEd+F,SAAU,CAERhG,QAAS,8BACTC,YAAY,EACZzB,MAAO,YAET2B,OAAQ,2DACR+C,WAAY,4BACZ9C,SAAU,CAER,CACEJ,QAAS,aACTC,YAAY,GAwBd,qLAEFI,YAAa,oBAEf/C,EAAMe,UAAUokB,WAAW,uBAAuB/hB,OAElD,cAAEA,OAAOkE,KAAOtH,EAAMe,UAAUokB,UAClC,CA5HAvvB,EAAOC,QAAUsvB,EACjBA,EAAWrkB,YAAc,aACzBqkB,EAAWniB,QAAU,2BCCrB,SAASoiB,EAAKplB,IACX,SAAWA,GACVA,EAAMe,UAAUqkB,KAAO,CACrB/rB,QAAS,MACToJ,OAAQ,CACNC,QAAS,UACTS,QAAQ,GAEVY,QAAS,qBACTC,SAAU,iDACVS,MAAO,oCACPjL,KAAM,CACJkJ,QACE,iGACFxB,MAAO,cAET0B,QAAS,uBACTC,OACE,gIACFE,YAAa,oBAEhB,CApBA,CAoBE/C,EACL,CAzBApK,EAAOC,QAAUuvB,EACjBA,EAAKtkB,YAAc,OACnBskB,EAAKpiB,QAAU,2BCCf,SAASqiB,EAAIrlB,GAKXA,EAAMe,UAAUskB,IAAM,CACpB5iB,OAAQ,CAENC,QAAS,2DACTS,QAAQ,GAEVmiB,UAAW,CACT5iB,QACE,uIACFC,YAAY,EACZQ,QAAQ,EACRjC,MAAO,CAAC,iBAAkB,2BAC1BkC,OAAQpD,EAAMe,UAA0B,gBAAK,CAC3C6B,QAAS,SACTsB,SAAU,qBACVnB,YAAa,WAGjB4I,MAAO,CACL,CACEjJ,QACE,6EACFxB,MAAO,CAAC,QAAS,cAEnB,CACEwB,QAAS,2BACTxB,MAAO,CAAC,UAAW,cAErB,CACEwB,QAAS,yCACTxB,MAAO,CAAC,OAAQ,YAElB,CACEwB,QAAS,yBACTxB,MAAO,CAAC,QAAS,YAEnB,CACEwB,QAAS,6CACTxB,MAAO,CAAC,QAAS,aAGrBrH,SAAU,CACR6I,QACE,wFACFC,YAAY,GAEd4iB,UAAW,CACT7iB,QAAS,oCACTC,YAAY,EACZzB,MAAO,WAET2F,IAAK,oDACLgb,MAAO,CACLnf,QAAS,6DACTC,YAAY,EACZzB,MAAO,OAET,aAAc,CACZwB,QAAS,kCACTxB,MAAO,YAET,cAAe,CACbwB,QAAS,sCACTxB,MAAO,YAETskB,OAAQ,CACN9iB,QACE,qEACFC,YAAY,EACZzB,MAAO,YAETukB,KAAM,CACJ/iB,QACE,oEACFxB,MAAO,YAET4O,KAAM,CACJpN,QAAS,6BACTxB,MAAO,YAET,YAAa,CACXwB,QACE,qFACFC,YAAY,EACZQ,QAAQ,EACRjC,MAAO,UAETiQ,KAAM,CACJzO,QAASe,OACP,4DAA4DtL,OAC1D,IACA,4FACGA,OACH,IACA,uKACGA,OACL,KAEF+I,MAAO,UAETwkB,KAAM,CACJhjB,QACE,qEACFxB,MAAO,UAET6C,QAAS,2BACTlB,OAAQ,CACNH,QACE,yGACFC,YAAY,GAEdG,SAAU,6BACVC,YAAa,WAEjB,CA1HAnN,EAAOC,QAAUwvB,EACjBA,EAAIvkB,YAAc,MAClBukB,EAAIriB,QAAU,0BCCd,SAAS2iB,EAAQ3lB,GACfA,EAAMe,UAAU4kB,QAAU,CACxBtsB,QAAS,CAAC,2BAA4B,WACtCoJ,OAAQ,CACNC,QAAS,kBACTU,OAAQ,CACNY,SAAU,aACVkE,OAAQ,CAAC,iBAAkB,cAAe,aAE5C/E,QAAQ,GAEVN,OAAQ,sCACRqF,OAAQ,CACNxF,QAAS,iEACTC,YAAY,EACZS,OAAQ,CACNR,QAAS,YAGb6B,MAAO,CACL/B,QAAS,iDACTC,YAAY,EACZzB,MAAO,UAETgD,SAAU,CACRxB,QAAS,6CACTC,YAAY,GAEdC,QAAS,CACP,CACEF,QACE,sRACFC,YAAY,GAEd,gBAEFoB,QAAS,CACPrB,QAAS,+BACTC,YAAY,GAEdqB,SAAU,CACRtB,QAAS,qBACTC,YAAY,GAEdG,SAAU,CACRJ,QACE,uHACFC,YAAY,GAEdI,YAAa,cAEjB,CAtDAnN,EAAOC,QAAU8vB,EACjBA,EAAQ7kB,YAAc,UACtB6kB,EAAQ3iB,QAAU,2BCClB,SAAS+Q,EAAI/T,GACXA,EAAMe,UAAUgT,IAAM,CACpB1a,QAAS,yCAEToJ,OAAQ,CACNC,QACE,qFACFS,QAAQ,GAEVN,OACE,gHACFD,QACE,0HACFsB,SAAU,2BACVpB,SAAU,CACR,wCACA,CAEEJ,QAAS,qBACTC,YAAY,IAGhBI,YAAa,sBAEjB,CA3BAnN,EAAOC,QAAUke,EACjBA,EAAIjT,YAAc,MAClBiT,EAAI/Q,QAAU,2BCCd,SAAS4iB,EAAM5lB,GACbA,EAAMe,UAAU6kB,MAAQ,CACtB9pB,OAAQ,CACN4G,QACE,2GACFC,YAAY,EACZQ,QAAQ,GAEV9J,QAAS,CACPqJ,QAAS,0BACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,kCACTC,YAAY,EACZQ,QAAQ,GAGVP,QACE,ggBACFmB,QAAS,qBACT8hB,UAAW,CACTnjB,QAAS,uBACTxB,MAAO,cAETgD,SAAU,wBACVrB,OAAQ,CACNH,QACE,uFACFC,YAAY,GAEdG,SAAU,0BACVC,YAAa,kBAEjB,CArCAnN,EAAOC,QAAU+vB,EACjBA,EAAM9kB,YAAc,QACpB8kB,EAAM5iB,QAAU,2BCChB,SAAS8iB,EAAS9lB,GAChBA,EAAMe,UAAU+kB,SAAW,CACzBzsB,QAAS,CACPqJ,QAAS,6CACTC,YAAY,GAEdF,OAAQ,CACNC,QAAS,iDACTS,QAAQ,GAEV,iBAAkB,CAChBT,QAAS,gCACTxB,MAAO,WAET/L,OAAQ,CACNuN,QAAS,8CACTxB,MAAO,SACPkC,OAAQ,CACNY,SAAU,wCAGdA,SAAU,wDAEVpB,QACE,6HACFsB,SAAU,CACRxB,QACE,wQACFC,YAAY,GAEdG,SAAU,uBACVC,YAAa,WAEjB,CApCAnN,EAAOC,QAAUiwB,EACjBA,EAAShlB,YAAc,WACvBglB,EAAS9iB,QAAU,2BCCnB,SAASiU,EAASjX,IACf,SAAWA,GAEV,IAAI+lB,EAAQ,2CAA2C5tB,OAWvD,SAAS6tB,EAAatjB,GAIpB,OAHAA,EAAUA,EAAQxL,QAAQ,YAAY,WACpC,OAAO6uB,CACT,IACOtiB,OAAO,0BAA0BtL,OAAS,MAAQuK,EAAU,IACrE,CACA,IAAIujB,EAAY,4DACb9tB,OACC2d,EACF,+CAA+C3d,OAAOjB,QACpD,OACA,WACE,OAAO+uB,CACT,IAEAC,EACF,sEACG/tB,OACL6H,EAAMe,UAAUkW,SAAWjX,EAAMe,UAAUjL,OAAO,SAAU,CAAC,GAC7DkK,EAAMe,UAAU6C,aAAa,WAAY,SAAU,CACjD,qBAAsB,CACpBlB,QAAS,kDACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNL,YAAa,YACb,eAAgB,CACdL,QAAS,iBACTxB,MAAO,CAAC,OAAQ,iBAChBkC,OAAQpD,EAAMe,UAAUolB,QAI9BC,WAAY,CAEV1jB,QAAS,kBACTxB,MAAO,eAETmF,MAAO,CACL3D,QAASe,OACP,IAAMqS,EAAWoQ,EAAY,MAAQpQ,EAAW,KAChD,KAEF1S,OAAQ,CACN,kBAAmB,CACjBV,QAASe,OACP,KAAOqS,EAAWoQ,EAAY,OAASpQ,EAAW,OAEpDnT,YAAY,EACZS,OAAQ,CACN,aAAc,CACZV,QAASe,OAAOwiB,GAChB7iB,OAAQpD,EAAMe,UAAUkW,UAE1BlU,YAAa,OAGjB,aAAc,CACZL,QAASe,OAAO,KAAOqS,EAAW,IAAMoQ,EAAY,KACpDvjB,YAAY,EACZS,OAAQ,CACNL,YAAa,iBAGjB,mBAAoB,CAClBL,QAASe,OAAO,IAAMqS,EAAW,KACjC1S,OAAQ,CACN,eAAgB,CACdV,QAASe,OAAOwiB,GAChB/kB,MAAO,YACPkC,OAAQpD,EAAMe,UAAUkW,UAE1BlU,YAAa,SAKrB7I,KAAM,CACJ,CAEEwI,QACE,uFACFC,YAAY,EACZzB,MAAO,WAET,CAIEwB,QAAS,qBACTS,QAAQ,EACRC,OAAQ,CACN,aAAc,CACZV,QAAS,qDACTC,YAAY,GAEd,gBAAiB,CACfD,QAAS,WACTC,YAAY,GAEdI,YAAa,SAInBwD,MAAO,CACL,CAKE7D,QAAS,0CACTxB,MAAO,YACPkC,OAAQ,CACNL,YAAa,cAGjB,CAGEL,QAAS,aACTC,YAAY,EACZzB,MAAO,YACPkC,OAAQ,CACNL,YAAa,aAInByD,GAAI,CAKF9D,QAAS,wCACTC,YAAY,EACZzB,MAAO,eAETC,KAAM,CAKJuB,QAAS,mCACTC,YAAY,EACZzB,MAAO,eAET,gBAAiB,CAKfwB,QACE,qHACFU,OAAQ,CACNY,SAAU,CACRtB,QAAS,gBACTC,YAAY,GAEdF,OACE,+DACFM,YAAa,kBAEf7B,MAAO,OAET6F,KAAM,CAIJrE,QAASsjB,EACP,kGACG7tB,QAELwK,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNhL,QAAS,CACPsK,QAAS,sBACTC,YAAY,EACZS,OAAQ,CAAC,GAEXL,YAAa,YAGjB+D,OAAQ,CAINpE,QAASsjB,EACP,kGACG7tB,QAELwK,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNhL,QAAS,CACPsK,QAAS,oBACTC,YAAY,EACZS,OAAQ,CAAC,GAEXL,YAAa,SAGjBsjB,OAAQ,CAIN3jB,QAASsjB,EAAa,2BAA2B7tB,QACjDwK,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNhL,QAAS,CACPsK,QAAS,uBACTC,YAAY,EACZS,OAAQ,CAAC,GAEXL,YAAa,QAGjB,eAAgB,CAGdL,QACE,mEACFC,YAAY,EACZQ,QAAQ,EACRjC,MAAO,CAAC,OAAQ,YAElB2F,IAAK,CAIHnE,QAASsjB,EACP,mGACG7tB,QAELwK,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNN,SAAU,KACV1K,QAAS,CACPsK,QAAS,oBACTC,YAAY,EACZS,OAAQ,CAAC,GAEXY,SAAU,CACRtB,QAAS,6BACTC,YAAY,GAEdkE,IAAK,CACHnE,QAAS,iBACTC,YAAY,GAEdF,OAAQ,CACNC,QAAS,oCACTC,YAAY,OAKnB,CAAC,MAAO,OAAQ,SAAU,UAAU+O,SAAQ,SAAU4F,GACpD,CAAC,MAAO,OAAQ,SAAU,SAAU,gBAAgB5F,SAAQ,SAC3DtO,GAEIkU,IAAUlU,IACZpD,EAAMe,UAAUkW,SAASK,GAAOlU,OAAOhL,QAAQgL,OAAOA,GACpDpD,EAAMe,UAAUkW,SAAS7T,GAE/B,GACF,IACApD,EAAMoC,MAAMmF,IAAI,kBAAkB,SAAU1F,GACrB,aAAjBA,EAAIP,UAA4C,OAAjBO,EAAIP,UAGvC,SAASme,EAAWhe,GAClB,GAAKA,GAA4B,iBAAXA,EAGtB,IAAK,IAAIrL,EAAI,EAAGgR,EAAI3F,EAAOpL,OAAQD,EAAIgR,EAAGhR,IAAK,CAC7C,IAAIkhB,EAAQ7V,EAAOrL,GACnB,GAAmB,SAAfkhB,EAAM9d,KAAV,CAiBA,IAAI8sB,EAAWhP,EAAMlf,QAAQ,GACzBmuB,EAAYjP,EAAMlf,QAAQ,GAC9B,GACEkuB,GACAC,GACkB,kBAAlBD,EAAS9sB,MACU,eAAnB+sB,EAAU/sB,MACkB,iBAArB8sB,EAASluB,QAChB,CAGA,IAAIqkB,EAAO6J,EAASluB,QACjBlB,QAAQ,OAAQ,SAChBA,QAAQ,UAAW,MAElBgK,EAAQ,aADZub,GAAQ,eAAezjB,KAAKyjB,IAAS,CAAC,KAAK,GAAG+J,eAEzCD,EAAUrlB,MAEuB,iBAApBqlB,EAAUrlB,MAC1BqlB,EAAUrlB,MAAQ,CAACqlB,EAAUrlB,MAAOA,GAEpCqlB,EAAUrlB,MAAMrI,KAAKqI,GAJrBqlB,EAAUrlB,MAAQ,CAACA,EAMvB,CArCA,MAFEue,EAAWnI,EAAMlf,QAwCrB,CACF,CACAqnB,CAAW5d,EAAIJ,OACjB,IACAzB,EAAMoC,MAAMmF,IAAI,QAAQ,SAAU1F,GAChC,GAAiB,eAAbA,EAAIrI,KAAR,CAIA,IADA,IAAI8sB,EAAW,GACNlwB,EAAI,EAAGgR,EAAIvF,EAAII,QAAQ5L,OAAQD,EAAIgR,EAAGhR,IAAK,CAClD,IAAIqwB,EAAM5kB,EAAII,QAAQ7L,GAClBqB,EAAQ,gBAAgBuB,KAAKytB,GACjC,GAAIhvB,EAAO,CACT6uB,EAAW7uB,EAAM,GACjB,KACF,CACF,CACA,IAAIoJ,EAAUb,EAAMe,UAAUulB,GAC9B,GAAKzlB,EAoBHgB,EAAIzJ,QAAU4H,EAAMV,UACNuC,EAAIzJ,QAAQ5C,MA6BZ0B,QAAQwvB,EAAY,IACxBxvB,QAAQ,iCAAiC,SAAU6B,EAAGmB,GAG9D,IAAI1E,EADN,MAAgB,OADhB0E,EAAOA,EAAKssB,eACH,IAGLhxB,EADc,MAAZ0E,EAAK,GACCuE,SAASvE,EAAKjB,MAAM,GAAI,IAExB0tB,OAAOzsB,EAAKjB,MAAM,IAErB2tB,EAAcpxB,IAETqxB,EAAmB3sB,IAIxBnB,CAEX,IA9CI8H,EACAylB,QAtBF,GAAIA,GAAyB,SAAbA,GAAuBtmB,EAAM8mB,QAAQC,WAAY,CAC/D,IAAI5W,EACF,OACA,IAAI6W,MAAOC,UACX,IACAC,KAAKC,MAAsB,KAAhBD,KAAKE,UAClBvlB,EAAIK,WAAe,GAAIiO,EACvBnQ,EAAM8mB,QAAQC,WAAWM,cAAcf,GAAU,WAC/C,IAAIgB,EAAM3sB,SAAS4sB,eAAepX,GAC9BmX,IACFA,EAAIzsB,UAAYmF,EAAMV,UACpBgoB,EAAIxsB,YACJkF,EAAMe,UAAUulB,GAChBA,GAGN,GACF,CA7BF,CAqCF,IACA,IAAII,EAAajjB,OAAOzD,EAAMe,UAAUT,OAAO0B,IAAIU,QAAQvK,OAAQ,MAQ/D0uB,EAAqB,CACvBW,IAAK,IACLC,GAAI,IACJC,GAAI,IACJC,KAAM,KAEJf,EAAgBznB,OAAOynB,eAAiBznB,OAAOzB,aA8BnDsC,EAAMe,UAAU6mB,GAAK5nB,EAAMe,UAAUkW,QACtC,CAtaA,CAsaEjX,EACL,CA3aApK,EAAOC,QAAUohB,EACjBA,EAASnW,YAAc,WACvBmW,EAASjU,QAAU,CAAC,8BCCpB,SAAS+O,EAAiB/R,IACvB,SAAWA,GAQV,SAASwe,EAAeld,EAAUzE,GAChC,MAAO,MAAQyE,EAASod,cAAgB7hB,EAAQ,KAClD,CACA7I,OAAO6zB,iBAAkB7nB,EAAMe,UAAU,qBAAuB,CAAC,EAAI,CACnEiR,kBAAmB,CAYjBxc,MAAO,SAAUqM,EAAKP,EAAUwmB,EAAoBC,GAClD,GAAIlmB,EAAIP,WAAaA,EAArB,CAGA,IAAI0mB,EAAcnmB,EAAImmB,WAAa,GACnCnmB,EAAI3H,KAAO2H,EAAI3H,KAAKhD,QAAQ4wB,GAAoB,SAAUrwB,GACxD,GAA6B,mBAAlBswB,IAAiCA,EAActwB,GACxD,OAAOA,EAIT,IAFA,IACI6nB,EADAlpB,EAAI4xB,EAAW3xB,QAIhB,IADDwL,EAAI3H,KAAKge,QAASoH,EAAcd,EAAeld,EAAUlL,OAGvDA,EAGJ,OADA4xB,EAAW5xB,GAAKqB,EACT6nB,CACT,IACAzd,EAAIhB,QAAUb,EAAMe,UAAUT,MAjB9B,CAkBF,GAEF2R,qBAAsB,CAOpBzc,MAAO,SAAUqM,EAAKP,GACpB,GAAIO,EAAIP,WAAaA,GAAaO,EAAImmB,WAAtC,CAGAnmB,EAAIhB,QAAUb,EAAMe,UAAUO,GAC9B,IAAIoa,EAAI,EACJxU,EAAOlT,OAAOkT,KAAKrF,EAAImmB,aAC3B,SAASvI,EAAWhe,GAClB,IAAK,IAAIrL,EAAI,EAAGA,EAAIqL,EAAOpL,UAErBqlB,GAAKxU,EAAK7Q,QAFmBD,IAAK,CAKtC,IAAIkhB,EAAQ7V,EAAOrL,GACnB,GACmB,iBAAVkhB,GACNA,EAAMlf,SAAoC,iBAAlBkf,EAAMlf,QAC/B,CACA,IAAIyc,EAAI3N,EAAKwU,GACT5D,EAAIjW,EAAImmB,WAAWnT,GACnB6K,EAAqB,iBAAVpI,EAAqBA,EAAQA,EAAMlf,QAC9CknB,EAAcd,EAAeld,EAAUuT,GACvChY,EAAQ6iB,EAAExH,QAAQoH,GACtB,GAAIziB,GAAS,EAAG,GACZ6e,EACF,IAAIiE,EAASD,EAAEE,UAAU,EAAG/iB,GACxBgjB,EAAS,IAAI7f,EAAM0B,MACrBJ,EACAtB,EAAM4e,SAAS9G,EAAGjW,EAAIhB,SACtB,YAAcS,EACdwW,GAEEgI,EAAQJ,EAAEE,UAAU/iB,EAAQyiB,EAAYjpB,QACxC2Q,EAAc,GACd2Y,GACF3Y,EAAYnO,KAAKkmB,MAAM/X,EAAayY,EAAW,CAACE,KAElD3Y,EAAYnO,KAAKgnB,GACbC,GACF9Y,EAAYnO,KAAKkmB,MAAM/X,EAAayY,EAAW,CAACK,KAE7B,iBAAVxI,EACT7V,EAAOud,OAAOD,MAAMtd,EAAQ,CAACrL,EAAG,GAAG+L,OAAO6E,IAE1CsQ,EAAMlf,QAAU4O,CAEpB,CACF,MACEsQ,EAAMlf,SAGNqnB,EAAWnI,EAAMlf,QAErB,CACA,OAAOqJ,CACT,CACAge,CAAW5d,EAAIJ,OArDf,CAsDF,IAGL,CAlHA,CAkHEzB,EACL,CAvHApK,EAAOC,QAAUkc,EACjBA,EAAiBjR,YAAc,mBAC/BiR,EAAiB/O,QAAU,2BCC3B,SAAS1C,EAAON,GACdA,EAAMe,UAAUT,OAAS,CACvBjH,QAAS,CACPqJ,QAAS,8BACTS,QAAQ,GAEVmf,OAAQ,CACN5f,QAAS,iBACTS,QAAQ,GAEVqV,QAAS,CAEP9V,QACE,uHACFS,QAAQ,EACRC,OAAQ,CACN,kBAAmB,CACjBV,QAAS,6BACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,MAEVX,OAAQ,CACNC,QAAS,kBACTS,QAAQ,GAEVJ,YAAa,eACb,cAAe,YACf1N,KAAM,eAGVwtB,MAAO,CACLngB,QAAS,4BACTS,QAAQ,GAEVnB,IAAK,CACHU,QACE,uHACFS,QAAQ,EACRC,OAAQ,CACNpB,IAAK,CACHU,QAAS,iBACTU,OAAQ,CACNL,YAAa,QACbyI,UAAW,iBAGf,eAAgB,GAChB,aAAc,CACZ9I,QAAS,qCACTU,OAAQ,CACNL,YAAa,CACX,CACEL,QAAS,KACTxB,MAAO,eAET,SAIN6B,YAAa,OACb,YAAa,CACXL,QAAS,YACTU,OAAQ,CACNoI,UAAW,mBAKnB9Q,OAAQ,CACN,CACEgI,QAAS,kBACTxB,MAAO,gBAET,uBAGJlB,EAAMe,UAAUT,OAAY,IAAE8C,OAAO,cAAcA,OAAe,OAChEpD,EAAMe,UAAUT,OAAe,OACjCN,EAAMe,UAAUT,OAAgB,QAAE8C,OAAO,mBAAmBA,OAC1DpD,EAAMe,UAAUT,OAClBN,EAAMoC,MAAMmF,IAAI,QAAQ,SAAU1F,GACf,WAAbA,EAAIrI,OACNqI,EAAIK,WAAkB,MAAIL,EAAIzJ,QAAQ5C,MAAM0B,QAAQ,QAAS,KAEjE,IACAlD,OAAOK,eAAe2L,EAAMe,UAAUT,OAAO0B,IAAK,aAAc,CAY9DxM,MAAO,SAAoB8rB,EAAS7E,GAClC,IAAIwL,EAAsB,CAAC,EAC3BA,EAAoB,YAAcxL,GAAQ,CACxC/Z,QAAS,oCACTC,YAAY,EACZS,OAAQpD,EAAMe,UAAU0b,IAE1BwL,EAA2B,MAAI,uBAC/B,IAAI7kB,EAAS,CACX,iBAAkB,CAChBV,QAAS,4BACTU,OAAQ6kB,IAGZ7kB,EAAO,YAAcqZ,GAAQ,CAC3B/Z,QAAS,UACTU,OAAQpD,EAAMe,UAAU0b,IAE1B,IAAIyL,EAAM,CAAC,EACXA,EAAI5G,GAAW,CACb5e,QAASe,OACP,wFAAwFtL,OAAOjB,QAC7F,OACA,WACE,OAAOoqB,CACT,IAEF,KAEF3e,YAAY,EACZQ,QAAQ,EACRC,OAAQA,GAEVpD,EAAMe,UAAU6C,aAAa,SAAU,QAASskB,EAClD,IAEFl0B,OAAOK,eAAe2L,EAAMe,UAAUT,OAAO0B,IAAK,eAAgB,CAYhExM,MAAO,SAAU2yB,EAAU1L,GACzBzc,EAAMe,UAAUT,OAAO0B,IAAIoB,OAAO,gBAAgBvK,KAAK,CACrD6J,QAASe,OACP,aAAatL,OACX,MACAgwB,EACA,IACA,iDAAiDhwB,OACnD,KAEFwK,YAAY,EACZS,OAAQ,CACN,YAAa,WACb,aAAc,CACZV,QAAS,WACTU,OAAQ,CACN5N,MAAO,CACLkN,QAAS,yCACTC,YAAY,EACZzB,MAAO,CAACub,EAAM,YAAcA,GAC5BrZ,OAAQpD,EAAMe,UAAU0b,IAE1B1Z,YAAa,CACX,CACEL,QAAS,KACTxB,MAAO,eAET,WAMZ,IAEFlB,EAAMe,UAAUwO,KAAOvP,EAAMe,UAAUT,OACvCN,EAAMe,UAAUqnB,OAASpoB,EAAMe,UAAUT,OACzCN,EAAMe,UAAUsnB,IAAMroB,EAAMe,UAAUT,OACtCN,EAAMe,UAAU8C,IAAM7D,EAAMe,UAAUjL,OAAO,SAAU,CAAC,GACxDkK,EAAMe,UAAUunB,KAAOtoB,EAAMe,UAAU8C,IACvC7D,EAAMe,UAAUyS,KAAOxT,EAAMe,UAAU8C,IACvC7D,EAAMe,UAAUwnB,IAAMvoB,EAAMe,UAAU8C,GACxC,CA/LAjO,EAAOC,QAAUyK,EACjBA,EAAOQ,YAAc,SACrBR,EAAO0C,QAAU,CAAC,OAAQ,SAAU,MAAO,MAAO,OAAQ,OAAQ,8BCClE,SAASwlB,EAAOxoB,GACdA,EAAMe,UAAUynB,OAAS,CACvBnvB,QAAS,CAAC,iBAAkB,OAC5BoJ,OAAQ,CACNC,QAAS,uBACTS,QAAQ,GAGVN,OAAQ,iEACRD,QACE,8HACFsB,SAAU,uBACVpB,SAAU,0CACVC,YAAa,uBAEjB,CAlBAnN,EAAOC,QAAU2yB,EACjBA,EAAO1nB,YAAc,SACrB0nB,EAAOxlB,QAAU,2BCCjB,SAASylB,EAAUzoB,IAChB,SAAWA,GACV,IAAIgF,EACF,2SACFhF,EAAMe,UAAU0nB,UAAY,CAC1BpvB,QAAS,CACPqJ,QAAS,8BACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,iDACTC,YAAY,EACZQ,QAAQ,GAEVgR,KAAM,CACJzR,QAAS,4BACTS,QAAQ,EACRjC,MAAO,UAET,gBAAiB,CACfwB,QAASe,OACP,OACG,IAAItL,OACH,IACA,mBAAmBA,OACnB,IACA,6FACGA,OANP,cASE6M,EAAS7M,OACT,IACA,cAAcA,OAXhB,kBAcI6M,EAAS7M,OACT,IACA,SAASA,OACT,IACA,YAAYA,OACZ,IACA,aAAaA,OACf,KACF,MAEFwK,YAAY,EACZQ,QAAQ,EACRjC,MAAO,YAET,sBAAuB,CACrBwB,QAAS,+BACTC,YAAY,EACZzB,MAAO,YAETwH,SAAU,CACRhG,QAAS,oBACTxB,MAAO,aAET0B,QAASoC,EACTjB,QAAS,qBACT2hB,KAAM,CACJhjB,QACE,sGACFC,YAAY,EACZzB,MAAO,UAET2B,OAAQ,CACN,CACEH,QACE,wFACFC,YAAY,GAEd,gBAEF+B,SAAU,0DACV6L,MAAO,CACL7N,QAAS,+DACTxB,MAAO,YAET4B,SAAU,6BACVC,YAAa,8BAEhB,CAjFA,CAiFE/C,EACL,CAtFApK,EAAOC,QAAU4yB,EACjBA,EAAU3nB,YAAc,YACxB2nB,EAAUzlB,QAAU,2BCCpB,SAAS0lB,EAAI1oB,GACXA,EAAMe,UAAU2nB,IAAM,CACpBrvB,QAAS,SACTa,KAAM,CACJwI,QAAS,wBACTS,QAAQ,EACRjC,MAAO,SACPkC,OAAQ,CACNgH,UAAW,CACT1H,QAAS,QACTxB,MAAO,iBAIbuB,OAAQ,CACNC,QAAS,wBACTS,QAAQ,GAEVa,SAAU,QACVnB,OAAQ,4CACR8lB,KAAM,CACJjmB,QAAS,cACTxB,MAAO,YAET0B,QACE,uHACFsB,SACE,2ufACFpB,SAAU,CACR,8CACA,CAEEJ,QAAS,iBACTC,YAAY,GAEd,CAEED,QAAS,iBACTC,YAAY,IAGhBI,YAAa,yBAEf/C,EAAMe,UAAU2nB,IAAU,KAAEtlB,OAAOkE,KAAOtH,EAAMe,UAAU2nB,GAC5D,CA/CA9yB,EAAOC,QAAU6yB,EACjBA,EAAI5nB,YAAc,MAClB4nB,EAAI1lB,QAAU,2BCCd,SAAS4lB,EAAQ5oB,GACfA,EAAMe,UAAU6nB,QAAU,CACxBvvB,QAAS,CACPqJ,QAAS,OACTS,QAAQ,GAEVhM,MAAO,CACLuL,QACE,sEACFC,YAAY,EACZS,OAAQ,CACNvJ,SAAU,wBACViJ,SAAU,IACVC,YAAa,MAGjB,oBAAqB,CACnBL,QACE,4IACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNya,MAAO,CACLnb,QAAS,8BACTxB,MAAO,YAETuD,MAAO,CACL/B,QAAS,qCACTC,YAAY,EACZzB,MAAO,YAET,aAAc,CACZwB,QAAS,OACTxB,MAAO,CAAC,QAAS,eAIvB2c,MAAO,CAML,CAEEnb,QAAS,uDACTC,YAAY,EACZzB,MAAO,YAET,CAGEwB,QACE,qGACFC,YAAY,EACZzB,MAAO,YAET,CAEEwB,QACE,mEACFC,YAAY,EACZzB,MAAO,YAET,CAEEwB,QACE,uFACFC,YAAY,EACZzB,MAAO,aAGXuD,MAAO,CACL/B,QAAS,0CACTC,YAAY,EACZQ,QAAQ,EACRjC,MAAO,YAET3E,KAAM,CACJmG,QAAS,gEACTxB,MAAO,UAETuB,OAAQ,CACNC,QAAS,cACTS,QAAQ,GAEVqB,WAAY,CACV9B,QACE,gGACFxB,MAAO,aAET0B,QAAS,CAEP,CACEF,QACE,yOACFC,YAAY,EACZQ,QAAQ,GAEV,CACET,QACE,2KACFC,YAAY,EACZQ,QAAQ,IAGZzI,OAAQ,cACRoI,SAAU,CACRJ,QAAS,gCACTC,YAAY,GAEdI,YAAa,UAEjB,CApHAnN,EAAOC,QAAU+yB,EACjBA,EAAQ9nB,YAAc,UACtB8nB,EAAQ5lB,QAAU,2BCClB,SAAS6lB,EAAM7oB,GACbA,EAAMe,UAAU8nB,MAAQ,CACtBxvB,QAAS,OACTuJ,QACE,s0BACF4G,UAAW,CACT9G,QAAS,cACTxB,MAAO,YAET8C,SAAU,aACVnB,OAAQ,gBACRC,SAAU,mBACVC,YAAa,wBAEjB,CAjBAnN,EAAOC,QAAUgzB,EACjBA,EAAM/nB,YAAc,QACpB+nB,EAAM7lB,QAAU,2BCChB,SAAS8lB,EAAQ9oB,IACd,SAAWA,GACV,IAAI+oB,EAAY,CAEd,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,UACA,QACA,QACA,cACA,OACA,SACA,QACA,SACA,iBACA,aACA,QACA,cACA,OACA,aACA,QACA,gBACA,cACA,gBACA,cACA,WACA,aACA,QACA,SACA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OACA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,mBACA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,WACA,YACA,gBACA,aACA,YACA,QACA,cACA,YACA,cACA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA,aACA,eACA,YAmBEC,EAAkB,OAHtBD,EAAYA,EAAU3nB,KAAI,SAAU0B,GAClC,OAAOA,EAAS5L,QAAQ,IAAK,MAC/B,KACwC+H,KAAK,KAAO,OACpDe,EAAMe,UAAU+nB,QAAU9oB,EAAMe,UAAUjL,OAAO,aAAc,CAAC,GAChEkK,EAAMe,UAAU6C,aAAa,UAAW,SAAU,CAChD/J,SAAU,CACR6I,QACE,oHACFS,QAAQ,EACRC,OAAQ,CACNR,QAASa,OAAO,YAAculB,EAAkB,iBAItDhpB,EAAMe,UAAU+nB,QAAQrmB,OAAOW,OA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","sources":["webpack://@wso2apim/devportal/./node_modules/extend/index.js","webpack://@wso2apim/devportal/./node_modules/inline-style-parser/index.js","webpack://@wso2apim/devportal/./node_modules/is-alphabetical/index.js","webpack://@wso2apim/devportal/./node_modules/is-alphanumerical/index.js","webpack://@wso2apim/devportal/./node_modules/is-buffer/index.js","webpack://@wso2apim/devportal/./node_modules/is-decimal/index.js","webpack://@wso2apim/devportal/./node_modules/is-hexadecimal/index.js","webpack://@wso2apim/devportal/./node_modules/parse-entities/decode-entity.browser.js","webpack://@wso2apim/devportal/./node_modules/parse-entities/index.js","webpack://@wso2apim/devportal/./node_modules/react-syntax-highlighter/dist/esm/prism.js","webpack://@wso2apim/devportal/./node_modules/react-syntax-highlighter/dist/esm/styles/prism/prism.js","webpack://@wso2apim/devportal/./node_modules/react-syntax-highlighter/dist/esm/languages/prism/supported-languages.js","webpack://@wso2apim/devportal/./node_modules/react-syntax-highlighter/dist/esm/styles/prism/vs.js","webpack://@wso2apim/devportal/./node_modules/react-syntax-highlighter/dist/esm/styles/prism/vsc-dark-plus.js","webpack://@wso2apim/devportal/./node_modules/refractor/core.js","webpack://@wso2apim/devportal/./node_modules/refractor/index.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/abap.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/abnf.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/actionscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ada.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/agda.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/al.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/antlr4.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/apacheconf.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/apex.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/apl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/applescript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/aql.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/arduino.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/arff.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/asciidoc.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/asm6502.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/asmatmel.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/aspnet.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/autohotkey.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/autoit.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/avisynth.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/avro-idl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/bash.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/basic.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/batch.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/bbcode.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/bicep.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/birb.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/bison.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/bnf.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/brainfuck.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/brightscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/bro.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/bsl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/c.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/cfscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/chaiscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/cil.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/clike.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/clojure.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/cmake.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/cobol.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/coffeescript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/concurnas.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/coq.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/cpp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/crystal.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/csharp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/cshtml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/csp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/css-extras.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/css.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/csv.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/cypher.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/d.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/dart.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/dataweave.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/dax.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/dhall.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/diff.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/django.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/dns-zone-file.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/docker.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/dot.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ebnf.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/editorconfig.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/eiffel.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ejs.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/elixir.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/elm.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/erb.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/erlang.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/etlua.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/excel-formula.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/factor.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/false.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/firestore-security-rules.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/flow.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/fortran.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/fsharp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ftl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/gap.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/gcode.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/gdscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/gedcom.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/gherkin.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/git.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/glsl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/gml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/gn.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/go-module.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/go.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/graphql.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/groovy.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/haml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/handlebars.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/haskell.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/haxe.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/hcl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/hlsl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/hoon.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/hpkp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/hsts.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/http.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ichigojam.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/icon.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/icu-message-format.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/idris.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/iecst.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ignore.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/inform7.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ini.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/io.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/j.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/java.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/javadoc.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/javadoclike.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/javascript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/javastacktrace.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/jexl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/jolie.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/jq.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/js-extras.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/js-templates.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/jsdoc.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/json.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/json5.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/jsonp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/jsstacktrace.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/jsx.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/julia.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/keepalived.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/keyman.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/kotlin.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/kumir.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/kusto.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/latex.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/latte.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/less.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/lilypond.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/liquid.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/lisp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/livescript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/llvm.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/log.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/lolcode.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/lua.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/magma.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/makefile.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/markdown.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/markup-templating.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/markup.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/matlab.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/maxscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/mel.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/mermaid.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/mizar.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/mongodb.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/monkey.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/moonscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/n1ql.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/n4js.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/nand2tetris-hdl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/naniscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/nasm.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/neon.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/nevod.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/nginx.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/nim.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/nix.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/nsis.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/objectivec.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ocaml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/opencl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/openqasm.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/oz.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/parigp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/parser.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/pascal.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/pascaligo.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/pcaxis.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/peoplecode.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/perl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/php-extras.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/php.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/phpdoc.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/plsql.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/powerquery.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/powershell.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/processing.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/prolog.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/promql.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/properties.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/protobuf.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/psl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/pug.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/puppet.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/pure.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/purebasic.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/purescript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/python.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/q.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/qml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/qore.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/qsharp.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/r.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/racket.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/reason.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/regex.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/rego.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/renpy.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/rest.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/rip.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/roboconf.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/robotframework.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/ruby.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/rust.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/sas.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/sass.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/scala.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/scheme.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/scss.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/shell-session.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/smali.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/smalltalk.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/smarty.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/sml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/solidity.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/solution-file.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/soy.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/sparql.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/splunk-spl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/sqf.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/sql.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/squirrel.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/stan.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/stylus.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/swift.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/systemd.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/t4-cs.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/t4-templating.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/t4-vb.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/tap.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/tcl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/textile.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/toml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/tremor.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/tsx.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/tt2.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/turtle.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/twig.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/typescript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/typoscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/unrealscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/uorazor.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/uri.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/v.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/vala.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/vbnet.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/velocity.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/verilog.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/vhdl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/vim.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/visual-basic.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/warpscript.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/wasm.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/web-idl.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/wiki.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/wolfram.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/wren.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/xeora.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/xml-doc.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/xojo.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/xquery.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/yaml.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/yang.js","webpack://@wso2apim/devportal/./node_modules/refractor/lang/zig.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/comma-separated-tokens/index.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/hast-util-parse-selector/index.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/hastscript/factory.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/hastscript/html.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/hastscript/index.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/prismjs/components/prism-core.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/find.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/html.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/aria.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/html.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/create.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/defined-info.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/info.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/merge.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/schema.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/util/types.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/xlink.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/xml.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/lib/xmlns.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/property-information/normalize.js","webpack://@wso2apim/devportal/./node_modules/refractor/node_modules/space-separated-tokens/index.js","webpack://@wso2apim/devportal/./node_modules/style-to-object/index.js","webpack://@wso2apim/devportal/./node_modules/xtend/immutable.js","webpack://@wso2apim/devportal/./node_modules/comma-separated-tokens/index.js","webpack://@wso2apim/devportal/./node_modules/decode-named-character-reference/index.dom.js","webpack://@wso2apim/devportal/./node_modules/hast-util-whitespace/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-definitions/node_modules/unist-util-visit/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-definitions/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-string/lib/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://@wso2apim/devportal/./node_modules/micromark-factory-space/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-character/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-chunked/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-classify-character/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-combine-extensions/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-decode-string/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-normalize-identifier/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-util-resolve-all/index.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/schema.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/merge.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/create.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/xlink.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/xml.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/xmlns.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/aria.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/html.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/svg.js","webpack://@wso2apim/devportal/./node_modules/property-information/index.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/find.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/hast-to-react.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/normalize.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/defined-info.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/info.js","webpack://@wso2apim/devportal/./node_modules/property-information/lib/util/types.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://@wso2apim/devportal/./node_modules/ccount/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://@wso2apim/devportal/./node_modules/markdown-table/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://@wso2apim/devportal/./node_modules/remark-gfm/index.js","webpack://@wso2apim/devportal/./node_modules/micromark-extension-gfm/index.js","webpack://@wso2apim/devportal/./node_modules/mdast-util-gfm/lib/index.js","webpack://@wso2apim/devportal/./node_modules/space-separated-tokens/index.js","webpack://@wso2apim/devportal/./node_modules/style-to-object/index.mjs","webpack://@wso2apim/devportal/./node_modules/unist-util-generated/lib/index.js","webpack://@wso2apim/devportal/./node_modules/unist-util-is/lib/index.js","webpack://@wso2apim/devportal/./node_modules/unist-util-position/lib/index.js","webpack://@wso2apim/devportal/./node_modules/unist-util-visit-parents/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","'use strict'\n\nmodule.exports = alphabetical\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","'use strict'\n\nmodule.exports = hexadecimal\n\n// Check if the given character code, or the character code at the first\n// character, is hexadecimal.\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nvar legacy = require('character-entities-legacy')\nvar invalid = require('character-reference-invalid')\nvar decimal = require('is-decimal')\nvar hexadecimal = require('is-hexadecimal')\nvar alphanumerical = require('is-alphanumerical')\nvar decodeEntity = require('./decode-entity')\n\nmodule.exports = parseEntities\n\nvar own = {}.hasOwnProperty\nvar fromCharCode = String.fromCharCode\nvar noop = Function.prototype\n\n// Default settings.\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}\n\n// Characters.\nvar tab = 9 // '\\t'\nvar lineFeed = 10 // '\\n'\nvar formFeed = 12 // '\\f'\nvar space = 32 // ' '\nvar ampersand = 38 // '&'\nvar semicolon = 59 // ';'\nvar lessThan = 60 // '<'\nvar equalsTo = 61 // '='\nvar numberSign = 35 // '#'\nvar uppercaseX = 88 // 'X'\nvar lowercaseX = 120 // 'x'\nvar replacementCharacter = 65533 // '�'\n\n// Reference types.\nvar name = 'named'\nvar hexa = 'hexadecimal'\nvar deci = 'decimal'\n\n// Map of bases.\nvar bases = {}\n\nbases[hexa] = 16\nbases[deci] = 10\n\n// Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\nvar tests = {}\n\ntests[name] = alphanumerical\ntests[deci] = decimal\ntests[hexa] = hexadecimal\n\n// Warning types.\nvar namedNotTerminated = 1\nvar numericNotTerminated = 2\nvar namedEmpty = 3\nvar numericEmpty = 4\nvar namedUnknown = 5\nvar numericDisallowed = 6\nvar numericProhibited = 7\n\n// Warning messages.\nvar messages = {}\n\nmessages[namedNotTerminated] =\n  'Named character references must be terminated by a semicolon'\nmessages[numericNotTerminated] =\n  'Numeric character references must be terminated by a semicolon'\nmessages[namedEmpty] = 'Named character references cannot be empty'\nmessages[numericEmpty] = 'Numeric character references cannot be empty'\nmessages[namedUnknown] = 'Named character references must be known'\nmessages[numericDisallowed] =\n  'Numeric character references cannot be disallowed'\nmessages[numericProhibited] =\n  'Numeric character references cannot be outside the permissible Unicode range'\n\n// Wrap to ensure clean parameters are given to `parse`.\nfunction parseEntities(value, options) {\n  var settings = {}\n  var option\n  var key\n\n  if (!options) {\n    options = {}\n  }\n\n  for (key in defaults) {\n    option = options[key]\n    settings[key] =\n      option === null || option === undefined ? defaults[key] : option\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || []\n    settings.position = settings.position.start\n  }\n\n  return parse(value, settings)\n}\n\n// Parse entities.\n// eslint-disable-next-line complexity\nfunction parse(value, settings) {\n  var additional = settings.additional\n  var nonTerminated = settings.nonTerminated\n  var handleText = settings.text\n  var handleReference = settings.reference\n  var handleWarning = settings.warning\n  var textContext = settings.textContext\n  var referenceContext = settings.referenceContext\n  var warningContext = settings.warningContext\n  var pos = settings.position\n  var indent = settings.indent || []\n  var length = value.length\n  var index = 0\n  var lines = -1\n  var column = pos.column || 1\n  var line = pos.line || 1\n  var queue = ''\n  var result = []\n  var entityCharacters\n  var namedEntity\n  var terminated\n  var characters\n  var character\n  var reference\n  var following\n  var warning\n  var reason\n  var output\n  var entity\n  var begin\n  var start\n  var type\n  var test\n  var prev\n  var next\n  var diff\n  var end\n\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0)\n  }\n\n  // Cache the current point.\n  prev = now()\n\n  // Wrap `handleWarning`.\n  warning = handleWarning ? parseError : noop\n\n  // Ensure the algorithm walks over the first character and the end\n  // (inclusive).\n  index--\n  length++\n\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1)\n\n      // The behaviour depends on the identity of the next character.\n      if (\n        following === tab ||\n        following === lineFeed ||\n        following === formFeed ||\n        following === space ||\n        following === ampersand ||\n        following === lessThan ||\n        following !== following ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n\n        continue\n      }\n\n      start = index + 1\n      begin = start\n      end = start\n\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin\n\n        // The behaviour further depends on the next character.\n        following = value.charCodeAt(end)\n\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa\n          end = ++begin\n        } else {\n          // ASCII digits.\n          type = deci\n        }\n      } else {\n        // Named entity.\n        type = name\n      }\n\n      entityCharacters = ''\n      entity = ''\n      characters = ''\n      test = tests[type]\n      end--\n\n      while (++end < length) {\n        following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === name && own.call(legacy, characters)) {\n          entityCharacters = characters\n          entity = legacy[characters]\n        }\n      }\n\n      terminated = value.charCodeAt(end) === semicolon\n\n      if (terminated) {\n        end++\n\n        namedEntity = type === name ? decodeEntity(characters) : false\n\n        if (namedEntity) {\n          entityCharacters = characters\n          entity = namedEntity\n        }\n      }\n\n      diff = 1 + end - start\n\n      if (!terminated && !nonTerminated) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff)\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1)\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty\n\n            if (settings.attribute) {\n              following = value.charCodeAt(end)\n\n              if (following === equalsTo) {\n                warning(reason, diff)\n                entity = null\n              } else if (alphanumerical(following)) {\n                entity = null\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = entity\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff)\n        }\n\n        // When terminated and number, parse as either hexadecimal or decimal.\n        reference = parseInt(characters, bases[type])\n\n        // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff)\n          reference = fromCharCode(replacementCharacter)\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff)\n          reference = invalid[reference]\n        } else {\n          // Parse the number.\n          output = ''\n\n          // Trigger a warning when the parsed number should not be used.\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff)\n          }\n\n          // Stringify the number.\n          if (reference > 0xffff) {\n            reference -= 0x10000\n            output += fromCharCode((reference >>> (10 & 0x3ff)) | 0xd800)\n            reference = 0xdc00 | (reference & 0x3ff)\n          }\n\n          reference = output + fromCharCode(reference)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n      if (reference) {\n        flush()\n\n        prev = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        next = now()\n        next.offset++\n\n        if (handleReference) {\n          handleReference.call(\n            referenceContext,\n            reference,\n            {start: prev, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        prev = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (\n        character === 10 // Line feed\n      ) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (character === character) {\n        queue += fromCharCode(character)\n        column++\n      } else {\n        flush()\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    }\n  }\n\n  // “Throw” a parse-error: a warning.\n  function parseError(code, offset) {\n    var position = now()\n\n    position.column += offset\n    position.offset += offset\n\n    handleWarning.call(warningContext, messages[code], position, code)\n  }\n\n  // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (handleText) {\n        handleText.call(textContext, queue, {start: prev, end: now()})\n      }\n\n      queue = ''\n    }\n  }\n}\n\n// Check if `character` is outside the permissible unicode range.\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n// Check if `character` is disallowed.\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","import highlight from './highlight';\nimport defaultStyle from './styles/prism/prism';\nimport refractor from 'refractor';\nimport supportedLanguages from './languages/prism/supported-languages';\nvar highlighter = highlight(refractor, defaultStyle);\nhighlighter.supportedLanguages = supportedLanguages;\nexport default highlighter;","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"none\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"#f5f2f0\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\"\n  },\n  \"pre[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"background\": \"#f5f2f0\",\n    \"padding\": \".1em\",\n    \"borderRadius\": \".3em\",\n    \"whiteSpace\": \"normal\"\n  },\n  \"comment\": {\n    \"color\": \"slategray\"\n  },\n  \"prolog\": {\n    \"color\": \"slategray\"\n  },\n  \"doctype\": {\n    \"color\": \"slategray\"\n  },\n  \"cdata\": {\n    \"color\": \"slategray\"\n  },\n  \"punctuation\": {\n    \"color\": \"#999\"\n  },\n  \"namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"property\": {\n    \"color\": \"#905\"\n  },\n  \"tag\": {\n    \"color\": \"#905\"\n  },\n  \"boolean\": {\n    \"color\": \"#905\"\n  },\n  \"number\": {\n    \"color\": \"#905\"\n  },\n  \"constant\": {\n    \"color\": \"#905\"\n  },\n  \"symbol\": {\n    \"color\": \"#905\"\n  },\n  \"deleted\": {\n    \"color\": \"#905\"\n  },\n  \"selector\": {\n    \"color\": \"#690\"\n  },\n  \"attr-name\": {\n    \"color\": \"#690\"\n  },\n  \"string\": {\n    \"color\": \"#690\"\n  },\n  \"char\": {\n    \"color\": \"#690\"\n  },\n  \"builtin\": {\n    \"color\": \"#690\"\n  },\n  \"inserted\": {\n    \"color\": \"#690\"\n  },\n  \"operator\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"entity\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\",\n    \"cursor\": \"help\"\n  },\n  \"url\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".language-css .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".style .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"atrule\": {\n    \"color\": \"#07a\"\n  },\n  \"attr-value\": {\n    \"color\": \"#07a\"\n  },\n  \"keyword\": {\n    \"color\": \"#07a\"\n  },\n  \"function\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"class-name\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"regex\": {\n    \"color\": \"#e90\"\n  },\n  \"important\": {\n    \"color\": \"#e90\",\n    \"fontWeight\": \"bold\"\n  },\n  \"variable\": {\n    \"color\": \"#e90\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  }\n};","//\n// This file has been auto-generated by the `npm run build-languages-prism` task\n//\nexport default ['abap', 'abnf', 'actionscript', 'ada', 'agda', 'al', 'antlr4', 'apacheconf', 'apex', 'apl', 'applescript', 'aql', 'arduino', 'arff', 'asciidoc', 'asm6502', 'asmatmel', 'aspnet', 'autohotkey', 'autoit', 'avisynth', 'avro-idl', 'bash', 'basic', 'batch', 'bbcode', 'bicep', 'birb', 'bison', 'bnf', 'brainfuck', 'brightscript', 'bro', 'bsl', 'c', 'cfscript', 'chaiscript', 'cil', 'clike', 'clojure', 'cmake', 'cobol', 'coffeescript', 'concurnas', 'coq', 'cpp', 'crystal', 'csharp', 'cshtml', 'csp', 'css-extras', 'css', 'csv', 'cypher', 'd', 'dart', 'dataweave', 'dax', 'dhall', 'diff', 'django', 'dns-zone-file', 'docker', 'dot', 'ebnf', 'editorconfig', 'eiffel', 'ejs', 'elixir', 'elm', 'erb', 'erlang', 'etlua', 'excel-formula', 'factor', 'false', 'firestore-security-rules', 'flow', 'fortran', 'fsharp', 'ftl', 'gap', 'gcode', 'gdscript', 'gedcom', 'gherkin', 'git', 'glsl', 'gml', 'gn', 'go-module', 'go', 'graphql', 'groovy', 'haml', 'handlebars', 'haskell', 'haxe', 'hcl', 'hlsl', 'hoon', 'hpkp', 'hsts', 'http', 'ichigojam', 'icon', 'icu-message-format', 'idris', 'iecst', 'ignore', 'inform7', 'ini', 'io', 'j', 'java', 'javadoc', 'javadoclike', 'javascript', 'javastacktrace', 'jexl', 'jolie', 'jq', 'js-extras', 'js-templates', 'jsdoc', 'json', 'json5', 'jsonp', 'jsstacktrace', 'jsx', 'julia', 'keepalived', 'keyman', 'kotlin', 'kumir', 'kusto', 'latex', 'latte', 'less', 'lilypond', 'liquid', 'lisp', 'livescript', 'llvm', 'log', 'lolcode', 'lua', 'magma', 'makefile', 'markdown', 'markup-templating', 'markup', 'matlab', 'maxscript', 'mel', 'mermaid', 'mizar', 'mongodb', 'monkey', 'moonscript', 'n1ql', 'n4js', 'nand2tetris-hdl', 'naniscript', 'nasm', 'neon', 'nevod', 'nginx', 'nim', 'nix', 'nsis', 'objectivec', 'ocaml', 'opencl', 'openqasm', 'oz', 'parigp', 'parser', 'pascal', 'pascaligo', 'pcaxis', 'peoplecode', 'perl', 'php-extras', 'php', 'phpdoc', 'plsql', 'powerquery', 'powershell', 'processing', 'prolog', 'promql', 'properties', 'protobuf', 'psl', 'pug', 'puppet', 'pure', 'purebasic', 'purescript', 'python', 'q', 'qml', 'qore', 'qsharp', 'r', 'racket', 'reason', 'regex', 'rego', 'renpy', 'rest', 'rip', 'roboconf', 'robotframework', 'ruby', 'rust', 'sas', 'sass', 'scala', 'scheme', 'scss', 'shell-session', 'smali', 'smalltalk', 'smarty', 'sml', 'solidity', 'solution-file', 'soy', 'sparql', 'splunk-spl', 'sqf', 'sql', 'squirrel', 'stan', 'stylus', 'swift', 'systemd', 't4-cs', 't4-templating', 't4-vb', 'tap', 'tcl', 'textile', 'toml', 'tremor', 'tsx', 'tt2', 'turtle', 'twig', 'typescript', 'typoscript', 'unrealscript', 'uorazor', 'uri', 'v', 'vala', 'vbnet', 'velocity', 'verilog', 'vhdl', 'vim', 'visual-basic', 'warpscript', 'wasm', 'web-idl', 'wiki', 'wolfram', 'wren', 'xeora', 'xml-doc', 'xojo', 'xquery', 'yaml', 'yang', 'zig'];","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"#393A34\",\n    \"fontFamily\": \"\\\"Consolas\\\", \\\"Bitstream Vera Sans Mono\\\", \\\"Courier New\\\", Courier, monospace\",\n    \"direction\": \"ltr\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"fontSize\": \".9em\",\n    \"lineHeight\": \"1.2em\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"#393A34\",\n    \"fontFamily\": \"\\\"Consolas\\\", \\\"Bitstream Vera Sans Mono\\\", \\\"Courier New\\\", Courier, monospace\",\n    \"direction\": \"ltr\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"fontSize\": \".9em\",\n    \"lineHeight\": \"1.2em\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\",\n    \"border\": \"1px solid #dddddd\",\n    \"backgroundColor\": \"white\"\n  },\n  \"pre > code[class*=\\\"language-\\\"]\": {\n    \"fontSize\": \"1em\"\n  },\n  \"pre[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \"code[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \"code[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \"code[class*=\\\"language-\\\"] ::selection\": {\n    \"background\": \"#C1DEF1\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"padding\": \".2em\",\n    \"paddingTop\": \"1px\",\n    \"paddingBottom\": \"1px\",\n    \"background\": \"#f8f8f8\",\n    \"border\": \"1px solid #dddddd\"\n  },\n  \"comment\": {\n    \"color\": \"#008000\",\n    \"fontStyle\": \"italic\"\n  },\n  \"prolog\": {\n    \"color\": \"#008000\",\n    \"fontStyle\": \"italic\"\n  },\n  \"doctype\": {\n    \"color\": \"#008000\",\n    \"fontStyle\": \"italic\"\n  },\n  \"cdata\": {\n    \"color\": \"#008000\",\n    \"fontStyle\": \"italic\"\n  },\n  \"namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"string\": {\n    \"color\": \"#A31515\"\n  },\n  \"punctuation\": {\n    \"color\": \"#393A34\"\n  },\n  \"operator\": {\n    \"color\": \"#393A34\"\n  },\n  \"url\": {\n    \"color\": \"#36acaa\"\n  },\n  \"symbol\": {\n    \"color\": \"#36acaa\"\n  },\n  \"number\": {\n    \"color\": \"#36acaa\"\n  },\n  \"boolean\": {\n    \"color\": \"#36acaa\"\n  },\n  \"variable\": {\n    \"color\": \"#36acaa\"\n  },\n  \"constant\": {\n    \"color\": \"#36acaa\"\n  },\n  \"inserted\": {\n    \"color\": \"#36acaa\"\n  },\n  \"atrule\": {\n    \"color\": \"#0000ff\"\n  },\n  \"keyword\": {\n    \"color\": \"#0000ff\"\n  },\n  \"attr-value\": {\n    \"color\": \"#0000ff\"\n  },\n  \".language-autohotkey .token.selector\": {\n    \"color\": \"#0000ff\"\n  },\n  \".language-json .token.boolean\": {\n    \"color\": \"#0000ff\"\n  },\n  \".language-json .token.number\": {\n    \"color\": \"#0000ff\"\n  },\n  \"code[class*=\\\"language-css\\\"]\": {\n    \"color\": \"#0000ff\"\n  },\n  \"function\": {\n    \"color\": \"#393A34\"\n  },\n  \"deleted\": {\n    \"color\": \"#9a050f\"\n  },\n  \".language-autohotkey .token.tag\": {\n    \"color\": \"#9a050f\"\n  },\n  \"selector\": {\n    \"color\": \"#800000\"\n  },\n  \".language-autohotkey .token.keyword\": {\n    \"color\": \"#00009f\"\n  },\n  \"important\": {\n    \"color\": \"#e90\",\n    \"fontWeight\": \"bold\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"class-name\": {\n    \"color\": \"#2B91AF\"\n  },\n  \".language-json .token.property\": {\n    \"color\": \"#2B91AF\"\n  },\n  \"tag\": {\n    \"color\": \"#800000\"\n  },\n  \"attr-name\": {\n    \"color\": \"#ff0000\"\n  },\n  \"property\": {\n    \"color\": \"#ff0000\"\n  },\n  \"regex\": {\n    \"color\": \"#ff0000\"\n  },\n  \"entity\": {\n    \"color\": \"#ff0000\"\n  },\n  \"directive.tag.tag\": {\n    \"background\": \"#ffff00\",\n    \"color\": \"#393A34\"\n  },\n  \".line-numbers.line-numbers .line-numbers-rows\": {\n    \"borderRightColor\": \"#a5a5a5\"\n  },\n  \".line-numbers .line-numbers-rows > span:before\": {\n    \"color\": \"#2B91AF\"\n  },\n  \".line-highlight.line-highlight\": {\n    \"background\": \"linear-gradient(to right, rgba(193, 222, 241, 0.2) 70%, rgba(221, 222, 241, 0))\"\n  }\n};","export default {\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"#d4d4d4\",\n    \"fontSize\": \"13px\",\n    \"textShadow\": \"none\",\n    \"fontFamily\": \"Menlo, Monaco, Consolas, \\\"Andale Mono\\\", \\\"Ubuntu Mono\\\", \\\"Courier New\\\", monospace\",\n    \"direction\": \"ltr\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\",\n    \"background\": \"#1e1e1e\"\n  },\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"#d4d4d4\",\n    \"fontSize\": \"13px\",\n    \"textShadow\": \"none\",\n    \"fontFamily\": \"Menlo, Monaco, Consolas, \\\"Andale Mono\\\", \\\"Ubuntu Mono\\\", \\\"Courier New\\\", monospace\",\n    \"direction\": \"ltr\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#264F78\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#264F78\"\n  },\n  \"pre[class*=\\\"language-\\\"] *::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#264F78\"\n  },\n  \"code[class*=\\\"language-\\\"] *::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#264F78\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"padding\": \".1em .3em\",\n    \"borderRadius\": \".3em\",\n    \"color\": \"#db4c69\",\n    \"background\": \"#1e1e1e\"\n  },\n  \".namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"doctype.doctype-tag\": {\n    \"color\": \"#569CD6\"\n  },\n  \"doctype.name\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"comment\": {\n    \"color\": \"#6a9955\"\n  },\n  \"prolog\": {\n    \"color\": \"#6a9955\"\n  },\n  \"punctuation\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \".language-html .language-css .token.punctuation\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \".language-html .language-javascript .token.punctuation\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \"property\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"tag\": {\n    \"color\": \"#569cd6\"\n  },\n  \"boolean\": {\n    \"color\": \"#569cd6\"\n  },\n  \"number\": {\n    \"color\": \"#b5cea8\"\n  },\n  \"constant\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"symbol\": {\n    \"color\": \"#b5cea8\"\n  },\n  \"inserted\": {\n    \"color\": \"#b5cea8\"\n  },\n  \"unit\": {\n    \"color\": \"#b5cea8\"\n  },\n  \"selector\": {\n    \"color\": \"#d7ba7d\"\n  },\n  \"attr-name\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"string\": {\n    \"color\": \"#ce9178\"\n  },\n  \"char\": {\n    \"color\": \"#ce9178\"\n  },\n  \"builtin\": {\n    \"color\": \"#ce9178\"\n  },\n  \"deleted\": {\n    \"color\": \"#ce9178\"\n  },\n  \".language-css .token.string.url\": {\n    \"textDecoration\": \"underline\"\n  },\n  \"operator\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \"entity\": {\n    \"color\": \"#569cd6\"\n  },\n  \"operator.arrow\": {\n    \"color\": \"#569CD6\"\n  },\n  \"atrule\": {\n    \"color\": \"#ce9178\"\n  },\n  \"atrule.rule\": {\n    \"color\": \"#c586c0\"\n  },\n  \"atrule.url\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"atrule.url.function\": {\n    \"color\": \"#dcdcaa\"\n  },\n  \"atrule.url.punctuation\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \"keyword\": {\n    \"color\": \"#569CD6\"\n  },\n  \"keyword.module\": {\n    \"color\": \"#c586c0\"\n  },\n  \"keyword.control-flow\": {\n    \"color\": \"#c586c0\"\n  },\n  \"function\": {\n    \"color\": \"#dcdcaa\"\n  },\n  \"function.maybe-class-name\": {\n    \"color\": \"#dcdcaa\"\n  },\n  \"regex\": {\n    \"color\": \"#d16969\"\n  },\n  \"important\": {\n    \"color\": \"#569cd6\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"class-name\": {\n    \"color\": \"#4ec9b0\"\n  },\n  \"maybe-class-name\": {\n    \"color\": \"#4ec9b0\"\n  },\n  \"console\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"parameter\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"interpolation\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"punctuation.interpolation-punctuation\": {\n    \"color\": \"#569cd6\"\n  },\n  \"variable\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"imports.maybe-class-name\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"exports.maybe-class-name\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"escape\": {\n    \"color\": \"#d7ba7d\"\n  },\n  \"tag.punctuation\": {\n    \"color\": \"#808080\"\n  },\n  \"cdata\": {\n    \"color\": \"#808080\"\n  },\n  \"attr-value\": {\n    \"color\": \"#ce9178\"\n  },\n  \"attr-value.punctuation\": {\n    \"color\": \"#ce9178\"\n  },\n  \"attr-value.punctuation.attr-equals\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \"namespace\": {\n    \"color\": \"#4ec9b0\"\n  },\n  \"pre[class*=\\\"language-javascript\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"code[class*=\\\"language-javascript\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"pre[class*=\\\"language-jsx\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"code[class*=\\\"language-jsx\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"pre[class*=\\\"language-typescript\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"code[class*=\\\"language-typescript\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"pre[class*=\\\"language-tsx\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"code[class*=\\\"language-tsx\\\"]\": {\n    \"color\": \"#9cdcfe\"\n  },\n  \"pre[class*=\\\"language-css\\\"]\": {\n    \"color\": \"#ce9178\"\n  },\n  \"code[class*=\\\"language-css\\\"]\": {\n    \"color\": \"#ce9178\"\n  },\n  \"pre[class*=\\\"language-html\\\"]\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \"code[class*=\\\"language-html\\\"]\": {\n    \"color\": \"#d4d4d4\"\n  },\n  \".language-regex .token.anchor\": {\n    \"color\": \"#dcdcaa\"\n  },\n  \".language-html .token.punctuation\": {\n    \"color\": \"#808080\"\n  },\n  \"pre[class*=\\\"language-\\\"] > code[class*=\\\"language-\\\"]\": {\n    \"position\": \"relative\",\n    \"zIndex\": \"1\"\n  },\n  \".line-highlight.line-highlight\": {\n    \"background\": \"#f7ebc6\",\n    \"boxShadow\": \"inset 5px 0 0 #f7d87c\",\n    \"zIndex\": \"0\"\n  }\n};","'use strict'\n\n/* global window, self */\n\n// istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\nvar ctx =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : {}\n\nvar restore = capture()\n\nctx.Prism = {manual: true, disableWorkerMessageHandler: true}\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nvar h = require('hastscript')\nvar decode = require('parse-entities')\nvar Prism = require('prismjs/components/prism-core')\nvar markup = require('./lang/markup')\nvar css = require('./lang/css')\nvar clike = require('./lang/clike')\nvar js = require('./lang/javascript')\n\nrestore()\n\nvar own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n// Construct.\nvar refract = new Refractor()\n\n// Expose.\nmodule.exports = refract\n\n// Create.\nrefract.highlight = highlight\nrefract.register = register\nrefract.alias = alias\nrefract.registered = registered\nrefract.listLanguages = listLanguages\n\n// Register bundled grammars.\nregister(markup)\nregister(css)\nregister(clike)\nregister(js)\n\nrefract.util.encode = encode\nrefract.Token.stringify = stringify\n\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`')\n  }\n\n  // Do not duplicate registrations.\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract)\n  }\n}\n\nfunction alias(name, alias) {\n  var languages = refract.languages\n  var map = name\n  var key\n  var list\n  var length\n  var index\n\n  if (alias) {\n    map = {}\n    map[name] = alias\n  }\n\n  for (key in map) {\n    list = map[key]\n    list = typeof list === 'string' ? [list] : list\n    length = list.length\n    index = -1\n\n    while (++index < length) {\n      languages[list[index]] = languages[key]\n    }\n  }\n}\n\nfunction highlight(value, name) {\n  var sup = Prism.highlight\n  var grammar\n\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  // `name` is a grammar object.\n  if (refract.util.type(name) === 'Object') {\n    grammar = name\n    name = null\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return sup.call(this, value, grammar, name)\n}\n\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`')\n  }\n\n  return own.call(refract.languages, language)\n}\n\nfunction listLanguages() {\n  var languages = refract.languages\n  var list = []\n  var language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\nfunction stringify(value, language, parent) {\n  var env\n\n  if (typeof value === 'string') {\n    return {type: 'text', value: value}\n  }\n\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language)\n  }\n\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  }\n\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias)\n  }\n\n  refract.hooks.run('wrap', env)\n\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\nfunction stringifyAll(values, language) {\n  var result = []\n  var length = values.length\n  var index = -1\n  var value\n\n  while (++index < length) {\n    value = values[index]\n\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value)\n    }\n  }\n\n  index = -1\n  length = result.length\n\n  while (++index < length) {\n    value = result[index]\n    result[index] = refract.Token.stringify(value, language, result)\n  }\n\n  return result\n}\n\nfunction encode(tokens) {\n  return tokens\n}\n\nfunction attributes(attrs) {\n  var key\n\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key])\n  }\n\n  return attrs\n}\n\nfunction capture() {\n  var defined = 'Prism' in ctx\n  /* istanbul ignore next */\n  var current = defined ? ctx.Prism : undefined\n\n  return restore\n\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      ctx.Prism = current\n    } else {\n      delete ctx.Prism\n    }\n\n    defined = undefined\n    current = undefined\n  }\n}\n","'use strict'\n\nvar refractor = require('./core.js')\n\nmodule.exports = refractor\n\nrefractor.register(require('./lang/abap.js'))\nrefractor.register(require('./lang/abnf.js'))\nrefractor.register(require('./lang/actionscript.js'))\nrefractor.register(require('./lang/ada.js'))\nrefractor.register(require('./lang/agda.js'))\nrefractor.register(require('./lang/al.js'))\nrefractor.register(require('./lang/antlr4.js'))\nrefractor.register(require('./lang/apacheconf.js'))\nrefractor.register(require('./lang/apex.js'))\nrefractor.register(require('./lang/apl.js'))\nrefractor.register(require('./lang/applescript.js'))\nrefractor.register(require('./lang/aql.js'))\nrefractor.register(require('./lang/arduino.js'))\nrefractor.register(require('./lang/arff.js'))\nrefractor.register(require('./lang/asciidoc.js'))\nrefractor.register(require('./lang/asm6502.js'))\nrefractor.register(require('./lang/asmatmel.js'))\nrefractor.register(require('./lang/aspnet.js'))\nrefractor.register(require('./lang/autohotkey.js'))\nrefractor.register(require('./lang/autoit.js'))\nrefractor.register(require('./lang/avisynth.js'))\nrefractor.register(require('./lang/avro-idl.js'))\nrefractor.register(require('./lang/bash.js'))\nrefractor.register(require('./lang/basic.js'))\nrefractor.register(require('./lang/batch.js'))\nrefractor.register(require('./lang/bbcode.js'))\nrefractor.register(require('./lang/bicep.js'))\nrefractor.register(require('./lang/birb.js'))\nrefractor.register(require('./lang/bison.js'))\nrefractor.register(require('./lang/bnf.js'))\nrefractor.register(require('./lang/brainfuck.js'))\nrefractor.register(require('./lang/brightscript.js'))\nrefractor.register(require('./lang/bro.js'))\nrefractor.register(require('./lang/bsl.js'))\nrefractor.register(require('./lang/c.js'))\nrefractor.register(require('./lang/cfscript.js'))\nrefractor.register(require('./lang/chaiscript.js'))\nrefractor.register(require('./lang/cil.js'))\nrefractor.register(require('./lang/clojure.js'))\nrefractor.register(require('./lang/cmake.js'))\nrefractor.register(require('./lang/cobol.js'))\nrefractor.register(require('./lang/coffeescript.js'))\nrefractor.register(require('./lang/concurnas.js'))\nrefractor.register(require('./lang/coq.js'))\nrefractor.register(require('./lang/cpp.js'))\nrefractor.register(require('./lang/crystal.js'))\nrefractor.register(require('./lang/csharp.js'))\nrefractor.register(require('./lang/cshtml.js'))\nrefractor.register(require('./lang/csp.js'))\nrefractor.register(require('./lang/css-extras.js'))\nrefractor.register(require('./lang/csv.js'))\nrefractor.register(require('./lang/cypher.js'))\nrefractor.register(require('./lang/d.js'))\nrefractor.register(require('./lang/dart.js'))\nrefractor.register(require('./lang/dataweave.js'))\nrefractor.register(require('./lang/dax.js'))\nrefractor.register(require('./lang/dhall.js'))\nrefractor.register(require('./lang/diff.js'))\nrefractor.register(require('./lang/django.js'))\nrefractor.register(require('./lang/dns-zone-file.js'))\nrefractor.register(require('./lang/docker.js'))\nrefractor.register(require('./lang/dot.js'))\nrefractor.register(require('./lang/ebnf.js'))\nrefractor.register(require('./lang/editorconfig.js'))\nrefractor.register(require('./lang/eiffel.js'))\nrefractor.register(require('./lang/ejs.js'))\nrefractor.register(require('./lang/elixir.js'))\nrefractor.register(require('./lang/elm.js'))\nrefractor.register(require('./lang/erb.js'))\nrefractor.register(require('./lang/erlang.js'))\nrefractor.register(require('./lang/etlua.js'))\nrefractor.register(require('./lang/excel-formula.js'))\nrefractor.register(require('./lang/factor.js'))\nrefractor.register(require('./lang/false.js'))\nrefractor.register(require('./lang/firestore-security-rules.js'))\nrefractor.register(require('./lang/flow.js'))\nrefractor.register(require('./lang/fortran.js'))\nrefractor.register(require('./lang/fsharp.js'))\nrefractor.register(require('./lang/ftl.js'))\nrefractor.register(require('./lang/gap.js'))\nrefractor.register(require('./lang/gcode.js'))\nrefractor.register(require('./lang/gdscript.js'))\nrefractor.register(require('./lang/gedcom.js'))\nrefractor.register(require('./lang/gherkin.js'))\nrefractor.register(require('./lang/git.js'))\nrefractor.register(require('./lang/glsl.js'))\nrefractor.register(require('./lang/gml.js'))\nrefractor.register(require('./lang/gn.js'))\nrefractor.register(require('./lang/go-module.js'))\nrefractor.register(require('./lang/go.js'))\nrefractor.register(require('./lang/graphql.js'))\nrefractor.register(require('./lang/groovy.js'))\nrefractor.register(require('./lang/haml.js'))\nrefractor.register(require('./lang/handlebars.js'))\nrefractor.register(require('./lang/haskell.js'))\nrefractor.register(require('./lang/haxe.js'))\nrefractor.register(require('./lang/hcl.js'))\nrefractor.register(require('./lang/hlsl.js'))\nrefractor.register(require('./lang/hoon.js'))\nrefractor.register(require('./lang/hpkp.js'))\nrefractor.register(require('./lang/hsts.js'))\nrefractor.register(require('./lang/http.js'))\nrefractor.register(require('./lang/ichigojam.js'))\nrefractor.register(require('./lang/icon.js'))\nrefractor.register(require('./lang/icu-message-format.js'))\nrefractor.register(require('./lang/idris.js'))\nrefractor.register(require('./lang/iecst.js'))\nrefractor.register(require('./lang/ignore.js'))\nrefractor.register(require('./lang/inform7.js'))\nrefractor.register(require('./lang/ini.js'))\nrefractor.register(require('./lang/io.js'))\nrefractor.register(require('./lang/j.js'))\nrefractor.register(require('./lang/java.js'))\nrefractor.register(require('./lang/javadoc.js'))\nrefractor.register(require('./lang/javadoclike.js'))\nrefractor.register(require('./lang/javastacktrace.js'))\nrefractor.register(require('./lang/jexl.js'))\nrefractor.register(require('./lang/jolie.js'))\nrefractor.register(require('./lang/jq.js'))\nrefractor.register(require('./lang/js-extras.js'))\nrefractor.register(require('./lang/js-templates.js'))\nrefractor.register(require('./lang/jsdoc.js'))\nrefractor.register(require('./lang/json.js'))\nrefractor.register(require('./lang/json5.js'))\nrefractor.register(require('./lang/jsonp.js'))\nrefractor.register(require('./lang/jsstacktrace.js'))\nrefractor.register(require('./lang/jsx.js'))\nrefractor.register(require('./lang/julia.js'))\nrefractor.register(require('./lang/keepalived.js'))\nrefractor.register(require('./lang/keyman.js'))\nrefractor.register(require('./lang/kotlin.js'))\nrefractor.register(require('./lang/kumir.js'))\nrefractor.register(require('./lang/kusto.js'))\nrefractor.register(require('./lang/latex.js'))\nrefractor.register(require('./lang/latte.js'))\nrefractor.register(require('./lang/less.js'))\nrefractor.register(require('./lang/lilypond.js'))\nrefractor.register(require('./lang/liquid.js'))\nrefractor.register(require('./lang/lisp.js'))\nrefractor.register(require('./lang/livescript.js'))\nrefractor.register(require('./lang/llvm.js'))\nrefractor.register(require('./lang/log.js'))\nrefractor.register(require('./lang/lolcode.js'))\nrefractor.register(require('./lang/lua.js'))\nrefractor.register(require('./lang/magma.js'))\nrefractor.register(require('./lang/makefile.js'))\nrefractor.register(require('./lang/markdown.js'))\nrefractor.register(require('./lang/markup-templating.js'))\nrefractor.register(require('./lang/matlab.js'))\nrefractor.register(require('./lang/maxscript.js'))\nrefractor.register(require('./lang/mel.js'))\nrefractor.register(require('./lang/mermaid.js'))\nrefractor.register(require('./lang/mizar.js'))\nrefractor.register(require('./lang/mongodb.js'))\nrefractor.register(require('./lang/monkey.js'))\nrefractor.register(require('./lang/moonscript.js'))\nrefractor.register(require('./lang/n1ql.js'))\nrefractor.register(require('./lang/n4js.js'))\nrefractor.register(require('./lang/nand2tetris-hdl.js'))\nrefractor.register(require('./lang/naniscript.js'))\nrefractor.register(require('./lang/nasm.js'))\nrefractor.register(require('./lang/neon.js'))\nrefractor.register(require('./lang/nevod.js'))\nrefractor.register(require('./lang/nginx.js'))\nrefractor.register(require('./lang/nim.js'))\nrefractor.register(require('./lang/nix.js'))\nrefractor.register(require('./lang/nsis.js'))\nrefractor.register(require('./lang/objectivec.js'))\nrefractor.register(require('./lang/ocaml.js'))\nrefractor.register(require('./lang/opencl.js'))\nrefractor.register(require('./lang/openqasm.js'))\nrefractor.register(require('./lang/oz.js'))\nrefractor.register(require('./lang/parigp.js'))\nrefractor.register(require('./lang/parser.js'))\nrefractor.register(require('./lang/pascal.js'))\nrefractor.register(require('./lang/pascaligo.js'))\nrefractor.register(require('./lang/pcaxis.js'))\nrefractor.register(require('./lang/peoplecode.js'))\nrefractor.register(require('./lang/perl.js'))\nrefractor.register(require('./lang/php-extras.js'))\nrefractor.register(require('./lang/php.js'))\nrefractor.register(require('./lang/phpdoc.js'))\nrefractor.register(require('./lang/plsql.js'))\nrefractor.register(require('./lang/powerquery.js'))\nrefractor.register(require('./lang/powershell.js'))\nrefractor.register(require('./lang/processing.js'))\nrefractor.register(require('./lang/prolog.js'))\nrefractor.register(require('./lang/promql.js'))\nrefractor.register(require('./lang/properties.js'))\nrefractor.register(require('./lang/protobuf.js'))\nrefractor.register(require('./lang/psl.js'))\nrefractor.register(require('./lang/pug.js'))\nrefractor.register(require('./lang/puppet.js'))\nrefractor.register(require('./lang/pure.js'))\nrefractor.register(require('./lang/purebasic.js'))\nrefractor.register(require('./lang/purescript.js'))\nrefractor.register(require('./lang/python.js'))\nrefractor.register(require('./lang/q.js'))\nrefractor.register(require('./lang/qml.js'))\nrefractor.register(require('./lang/qore.js'))\nrefractor.register(require('./lang/qsharp.js'))\nrefractor.register(require('./lang/r.js'))\nrefractor.register(require('./lang/racket.js'))\nrefractor.register(require('./lang/reason.js'))\nrefractor.register(require('./lang/regex.js'))\nrefractor.register(require('./lang/rego.js'))\nrefractor.register(require('./lang/renpy.js'))\nrefractor.register(require('./lang/rest.js'))\nrefractor.register(require('./lang/rip.js'))\nrefractor.register(require('./lang/roboconf.js'))\nrefractor.register(require('./lang/robotframework.js'))\nrefractor.register(require('./lang/ruby.js'))\nrefractor.register(require('./lang/rust.js'))\nrefractor.register(require('./lang/sas.js'))\nrefractor.register(require('./lang/sass.js'))\nrefractor.register(require('./lang/scala.js'))\nrefractor.register(require('./lang/scheme.js'))\nrefractor.register(require('./lang/scss.js'))\nrefractor.register(require('./lang/shell-session.js'))\nrefractor.register(require('./lang/smali.js'))\nrefractor.register(require('./lang/smalltalk.js'))\nrefractor.register(require('./lang/smarty.js'))\nrefractor.register(require('./lang/sml.js'))\nrefractor.register(require('./lang/solidity.js'))\nrefractor.register(require('./lang/solution-file.js'))\nrefractor.register(require('./lang/soy.js'))\nrefractor.register(require('./lang/sparql.js'))\nrefractor.register(require('./lang/splunk-spl.js'))\nrefractor.register(require('./lang/sqf.js'))\nrefractor.register(require('./lang/sql.js'))\nrefractor.register(require('./lang/squirrel.js'))\nrefractor.register(require('./lang/stan.js'))\nrefractor.register(require('./lang/stylus.js'))\nrefractor.register(require('./lang/swift.js'))\nrefractor.register(require('./lang/systemd.js'))\nrefractor.register(require('./lang/t4-cs.js'))\nrefractor.register(require('./lang/t4-templating.js'))\nrefractor.register(require('./lang/t4-vb.js'))\nrefractor.register(require('./lang/tap.js'))\nrefractor.register(require('./lang/tcl.js'))\nrefractor.register(require('./lang/textile.js'))\nrefractor.register(require('./lang/toml.js'))\nrefractor.register(require('./lang/tremor.js'))\nrefractor.register(require('./lang/tsx.js'))\nrefractor.register(require('./lang/tt2.js'))\nrefractor.register(require('./lang/turtle.js'))\nrefractor.register(require('./lang/twig.js'))\nrefractor.register(require('./lang/typescript.js'))\nrefractor.register(require('./lang/typoscript.js'))\nrefractor.register(require('./lang/unrealscript.js'))\nrefractor.register(require('./lang/uorazor.js'))\nrefractor.register(require('./lang/uri.js'))\nrefractor.register(require('./lang/v.js'))\nrefractor.register(require('./lang/vala.js'))\nrefractor.register(require('./lang/vbnet.js'))\nrefractor.register(require('./lang/velocity.js'))\nrefractor.register(require('./lang/verilog.js'))\nrefractor.register(require('./lang/vhdl.js'))\nrefractor.register(require('./lang/vim.js'))\nrefractor.register(require('./lang/visual-basic.js'))\nrefractor.register(require('./lang/warpscript.js'))\nrefractor.register(require('./lang/wasm.js'))\nrefractor.register(require('./lang/web-idl.js'))\nrefractor.register(require('./lang/wiki.js'))\nrefractor.register(require('./lang/wolfram.js'))\nrefractor.register(require('./lang/wren.js'))\nrefractor.register(require('./lang/xeora.js'))\nrefractor.register(require('./lang/xml-doc.js'))\nrefractor.register(require('./lang/xojo.js'))\nrefractor.register(require('./lang/xquery.js'))\nrefractor.register(require('./lang/yaml.js'))\nrefractor.register(require('./lang/yang.js'))\nrefractor.register(require('./lang/zig.js'))\n","'use strict'\n\nmodule.exports = abap\nabap.displayName = 'abap'\nabap.aliases = []\nfunction abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern:\n        /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function (Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern:\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = actionscript\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function' // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/,\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n","'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = al\nal.displayName = 'al'\nal.aliases = []\nfunction al(Prism) {\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n  Prism.languages.al = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    keyword: [\n      // keywords\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i, // objects and metadata that are used like keywords\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n    ],\n    number:\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n    'class-name':\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n    punctuation: /[()\\[\\]{}:.;,]/\n  }\n}\n","'use strict'\n\nmodule.exports = antlr4\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\nfunction antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n","'use strict'\n\nmodule.exports = apacheconf\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\nfunction apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern:\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern:\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:[\\w=],?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = apex\napex.displayName = 'apex'\napex.aliases = []\nfunction apex(Prism) {\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = applescript\napplescript.displayName = 'applescript'\napplescript.aliases = []\nfunction applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n    ],\n    keyword:\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    'class-name':\n      /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","'use strict'\n\nmodule.exports = aql\naql.displayName = 'aql'\naql.aliases = []\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = arduino\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\nfunction arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","'use strict'\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","'use strict'\n\nmodule.exports = asciidoc\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\nfunction asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/ // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/ // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern:\n          /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|R|TM)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    }) // Allow some nesting. There is no recursion though, so cloning should not be needed.\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    ) // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = asm6502\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    },\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = asmatmel\nasmatmel.displayName = 'asmatmel'\nasmatmel.aliases = []\nfunction asmatmel(Prism) {\n  Prism.languages.asmatmel = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    'r-register': {\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n      alias: 'variable'\n    },\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[acznvshtixy]\\b/i,\n      alias: 'variable'\n    },\n    operator: />>=?|<<=?|&&?|\\|\\|?|[-+*/%&|^!=<>?]=?/,\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  }) // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","'use strict'\n\nmodule.exports = autohotkey\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\nfunction autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: [\n      {\n        pattern: /(^|\\s);.*/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    tag: {\n      // labels\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator:\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    selector:\n      /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n    constant:\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n    builtin:\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n    symbol:\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    important:\n      /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\\b/i,\n    keyword:\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n    punctuation: /[{}[\\]():,]/\n  }\n}\n","'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","'use strict'\n\nmodule.exports = avisynth\navisynth.displayName = 'avisynth'\navisynth.aliases = ['avs']\nfunction avisynth(Prism) {\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n  ;(function (Prism) {\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return replacements[+index]\n      })\n    }\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    var types = /bool|clip|float|int|string|val/.source\n    var internals = [\n      // bools\n      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/\n        .source, // control\n      /apply|assert|default|eval|import|nop|select|undefined/.source, // global\n      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/\n        .source, // conv\n      /hex(?:value)?|value/.source, // numeric\n      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/\n        .source, // trig\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source, // bit\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\n        .source, // runtime\n      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\n        .source, // script\n      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/\n        .source, // string\n      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/\n        .source, // version\n      /isversionorgreater|version(?:number|string)/.source, // helper\n      /buildpixeltype|colorspacenametopixeltype/.source, // avsplus\n      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n    ].join('|')\n    var properties = [\n      // content\n      /has(?:audio|video)/.source, // resolution\n      /height|width/.source, // framerate\n      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source, // interlacing\n      /getparity|is(?:field|frame)based/.source, // color format\n      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/\n        .source, // audio\n      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/\n        .source\n    ].join('|')\n    var filters = [\n      // source\n      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/\n        .source, // color\n      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/\n        .source, // overlay\n      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source, // geometry\n      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/\n        .source, // pixel\n      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/\n        .source, // timeline\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\n        .source, // interlace\n      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/\n        .source, // audio\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/\n        .source, // conditional\n      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/\n        .source, // export\n      /imagewriter/.source, // debug\n      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/\n        .source\n    ].join('|')\n    var allinternals = [internals, properties, filters].join('|')\n    Prism.languages.avisynth = {\n      comment: [\n        {\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n          pattern:\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches /* */ block comments\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches # comments\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // Handle before strings because optional arguments are surrounded by double quotes\n      argument: {\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\n        inside: {\n          keyword: /^\\w+/\n        }\n      },\n      // Optional argument assignment\n      'argument-label': {\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n        lookbehind: true,\n        inside: {\n          'argument-name': {\n            pattern: /^\\w+/,\n            alias: 'punctuation'\n          },\n          punctuation: /=$/\n        }\n      },\n      string: [\n        {\n          // triple double-quoted\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true\n        },\n        {\n          // single double-quoted\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            constant: {\n              // These *are* case-sensitive!\n              pattern:\n                /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n            }\n          }\n        }\n      ],\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\n      variable: /\\b(?:last)\\b/i,\n      boolean: /\\b(?:false|no|true|yes)\\b/i,\n      keyword:\n        /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n      constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n      // AviSynth's internal functions, filters, and properties\n      'builtin-function': {\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\n        alias: 'function'\n      },\n      'type-cast': {\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\n        alias: 'keyword'\n      },\n      // External/user-defined filters\n      function: {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n        lookbehind: true\n      },\n      // Matches a \\ as the first or last character on a line\n      'line-continuation': {\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      number:\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n      punctuation: /[{}\\[\\]();,.]/\n    }\n    Prism.languages.avs = Prism.languages.avisynth\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = avroIdl\navroIdl.displayName = 'avroIdl'\navroIdl.aliases = []\nfunction avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:Infinity|NaN)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n","'use strict'\n\nmodule.exports = bash\nbash.displayName = 'bash'\nbash.aliases = ['shell']\nfunction bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        }, // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        }, // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = basic\nbasic.displayName = 'basic'\nbasic.aliases = []\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = bbcode\nbbcode.displayName = 'bbcode'\nbbcode.aliases = ['shortcode']\nfunction bbcode(Prism) {\n  Prism.languages.bbcode = {\n    tag: {\n      pattern:\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n      inside: {\n        tag: {\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\n          inside: {\n            punctuation: /^\\[\\/?/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\]/,\n        'attr-name': /[^\\s=\\]]+/\n      }\n    }\n  }\n  Prism.languages.shortcode = Prism.languages.bbcode\n}\n","'use strict'\n\nmodule.exports = bicep\nbicep.displayName = 'bicep'\nbicep.aliases = []\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n","'use strict'\n\nmodule.exports = birb\nbirb.displayName = 'birb'\nbirb.aliases = []\nfunction birb(Prism) {\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = bnf\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\nfunction bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n","'use strict'\n\nmodule.exports = brainfuck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","'use strict'\n\nmodule.exports = brightscript\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\nfunction brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n","'use strict'\n\nmodule.exports = bro\nbro.displayName = 'bro'\nbro.aliases = []\nfunction bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:FIXME|TODO|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n      lookbehind: true\n    },\n    builtin:\n      /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n    constant: {\n      pattern: /(\\bconst[ \\t]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = bsl\nbsl.displayName = 'bsl'\nbsl.aliases = []\nfunction bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [\n      // Строки\n      // Strings\n      {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      }, // Дата и время\n      // Date & time\n      {\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n      }\n    ],\n    keyword: [\n      {\n        // RU\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      {\n        // EN\n        pattern:\n          /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n      }\n    ],\n    number: {\n      pattern:\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [\n      /[<>+\\-*/]=?|[%=]/, // RU\n      {\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      }, // EN\n      {\n        pattern: /\\b(?:and|not|or)\\b/i\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [\n      // Теги препроцессора вида &Клиент, &Сервер, ...\n      // Preprocessor tags of the type &Client, &Server, ...\n      {\n        pattern: /^([ \\t]*)&.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }, // Инструкции препроцессора вида:\n      // #Если Сервер Тогда\n      // ...\n      // #КонецЕсли\n      // Preprocessor instructions of the form:\n      // #If Server Then\n      // ...\n      // #EndIf\n      {\n        pattern: /^([ \\t]*)#.*/gm,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }\n    ]\n  }\n  Prism.languages.oscript = Prism.languages['bsl']\n}\n","'use strict'\n\nmodule.exports = c\nc.displayName = 'c'\nc.aliases = []\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","'use strict'\n\nmodule.exports = cfscript\ncfscript.displayName = 'cfscript'\ncfscript.aliases = []\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = chaiscript\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\nfunction chaiscript(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = cil\ncil.displayName = 'cil'\ncil.aliases = []\nfunction cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","'use strict'\n\nmodule.exports = clike\nclike.displayName = 'clike'\nclike.aliases = []\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    char: /\\\\\\w+/,\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","'use strict'\n\nmodule.exports = cmake\ncmake.displayName = 'cmake'\ncmake.aliases = []\nfunction cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n    namespace:\n      /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","'use strict'\n\nmodule.exports = cobol\ncobol.displayName = 'cobol'\ncobol.aliases = []\nfunction cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      inside: {\n        'class-name': /^\\w+/,\n        string: {\n          pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n          lookbehind: true\n        },\n        punctuation: /\\|\\|/\n      }\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    'regex-literal': {\n      pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        regex: /[\\s\\S]+/\n      }\n    },\n    'string-literal': {\n      pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","'use strict'\n\nmodule.exports = coq\ncoq.displayName = 'coq'\ncoq.aliases = []\nfunction coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        }, // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' + // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' + // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet', 'cs']\nfunction csharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    ) // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    }) // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    ) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    }) // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ]) // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = cshtml\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\nfunction cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2) // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/\n        .source\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' + // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' + // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' + // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' + // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')' // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly, // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly, // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly, // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source, // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly, // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*'\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            /(?:await\\b\\s*)?/.source +\n            '(?:' +\n            /\\w+\\b/.source +\n            '|' +\n            round +\n            ')' +\n            '(?:' +\n            /[?!]?\\.\\w+\\b/.source +\n            '|' +\n            round +\n            '|' +\n            square +\n            '|' +\n            angle +\n            round +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'variable',\n        inside: {\n          keyword: /^@/,\n          csharp: cs\n        }\n      },\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\n        'i'\n      )\n    }\n    Prism.languages.csp = {\n      directive: {\n        pattern:\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\n            '|' +\n            /\\*[^\\s;,']*/.source +\n            '|' +\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\n        ),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [\n        {\n          pattern: value(/'unsafe-[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'unsafe'\n        },\n        {\n          pattern: value(/'[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'safe'\n        }\n      ],\n      punctuation: /;/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = css\ncss.displayName = 'css'\ncss.aliases = []\nfunction css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csv\ncsv.displayName = 'csv'\ncsv.aliases = []\nfunction csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","'use strict'\n\nmodule.exports = cypher\ncypher.displayName = 'cypher'\ncypher.aliases = []\nfunction cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source, // // comment\n              /\\/\\/.*/.source, // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source, // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source, // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source, // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'string', {\n    // Characters\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n    char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'string', {\n      'string-literal': {\n        pattern:\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\$\\{?|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.dart\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: undefined\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dataweave\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\nfunction dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:false|true)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dax\ndax.displayName = 'dax'\ndax.aliases = []\nfunction dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = dhall\ndhall.displayName = 'dhall'\ndhall.aliases = []\nfunction dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:None|Some)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n      variable: /\\b\\w+\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dnsZoneFile\ndnsZoneFile.displayName = 'dnsZoneFile'\ndnsZoneFile.aliases = []\nfunction dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","'use strict'\n\nmodule.exports = editorconfig\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\nfunction editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'selector',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      }, // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      }, // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ejs\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\nfunction ejs(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = elixir\nelixir.displayName = 'elixir'\nelixir.aliases = []\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern:\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|exposing|import)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorRuby)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.erb = {\n      delimiter: {\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      ruby: {\n        pattern: /\\s*\\S[\\s\\S]*/,\n        alias: 'language-ruby',\n        inside: Prism.languages.ruby\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","'use strict'\nvar refractorLua = require('./lua.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = etlua\netlua.displayName = 'etlua'\netlua.aliases = []\nfunction etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = excelFormula\nexcelFormula.displayName = 'excelFormula'\nexcelFormula.aliases = []\nfunction excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'keyword'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'property',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'property'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","'use strict'\n\nmodule.exports = factor\nfactor.displayName = 'factor'\nfactor.aliases = []\nfunction factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        },\n        /* from basis/multiline: */\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable', // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ] // that's all for now\n    }\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@', // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index', // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?', // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative', // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot', // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&', // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence' // tafn\n    ]\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = $false\n$false.displayName = '$false'\n$false.aliases = []\nfunction $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = firestoreSecurityRules\nfirestoreSecurityRules.displayName = 'firestoreSecurityRules'\nfirestoreSecurityRules.aliases = []\nfunction firestoreSecurityRules(Prism) {\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","'use strict'\n\nmodule.exports = gcode\ngcode.displayName = 'gcode'\ngcode.aliases = []\nfunction gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","'use strict'\n\nmodule.exports = gdscript\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = gherkin\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\nfunction gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = glsl\nglsl.displayName = 'glsl'\nglsl.aliases = []\nfunction glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = gml\ngml.displayName = 'gml'\ngml.aliases = []\nfunction gml(Prism) {\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n      constant:\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n      variable:\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    })\n}\n","'use strict'\n\nmodule.exports = gn\ngn.displayName = 'gn'\ngn.aliases = ['gni']\nfunction gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","'use strict'\n\nmodule.exports = goModule\ngoModule.displayName = 'goModule'\ngoModule.aliases = []\nfunction goModule(Prism) {\n  // https://go.dev/ref/mod#go-mod-file-module\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    version: {\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    'go-version': {\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    keyword: {\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n      lookbehind: true\n    },\n    operator: /=>/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = go\ngo.displayName = 'go'\ngo.aliases = []\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /\\b[A-Z]\\w*Input\\b/,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++] // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          } // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            } // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    string: [\n      {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern:\n          /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true\n      },\n      {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    number:\n      /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  }) // Handle string interpolation\n  Prism.hooks.add('wrap', function (env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        } // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = haml\nhaml.displayName = 'haml'\nhaml.aliases = []\nfunction haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'symbol'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          ruby: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism.languages.ruby\n          }\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+' // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'symbol'\n            },\n            text: {\n              pattern: /[\\s\\S]+/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs']\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      }, // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern:\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n        lookbehind: true\n      }, // based on naming convention\n      /\\b[A-Z]\\w*/\n    ],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  })\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' + // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","'use strict'\n\nmodule.exports = icuMessageFormat\nicuMessageFormat.displayName = 'icuMessageFormat'\nicuMessageFormat.aliases = []\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","'use strict'\n\nmodule.exports = iecst\niecst.displayName = 'iecst'\niecst.aliases = []\nfunction iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","'use strict'\n\nmodule.exports = ignore\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\nfunction ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            } // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the java naming conventions\n    var className = {\n      pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' + // constant\n          (/NaN|Infinity/.source +\n            '|' + // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' + // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' + // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' + // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' + // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern:\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript') // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","'use strict'\n\nmodule.exports = javastacktrace\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\nfunction javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          }, // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jexl\njexl.displayName = 'jexl'\njexl.aliases = []\nfunction jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","'use strict'\n\nmodule.exports = jolie\njolie.displayName = 'jolie'\njolie.aliases = []\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n    punctuation: /[()[\\]{},;.:]/,\n    builtin:\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n  })\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        keyword: /\\bwith\\b/,\n        'class-name': /\\w+/,\n        punctuation: /,/\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /,/,\n        'class-name': /\\w+/,\n        operator: /=>/\n      }\n    },\n    property: {\n      pattern:\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsExtras\njsExtras.displayName = 'jsExtras'\njsExtras.aliases = []\nfunction jsExtras(Prism) {\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }) // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token] // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      } // keep in mind that we don't support arrays\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // sql`...`\n      createTemplate('sql', /\\bsql/.source), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = ['webmanifest']\nfunction json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jsx\njsx.displayName = 'jsx'\njsx.aliases = []\nfunction jsx(Prism) {\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          alias: 'language-javascript',\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    ) // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","'use strict'\n\nmodule.exports = keepalived\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\nfunction keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern: /\\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kumir\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\nfunction kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kusto\nkusto.displayName = 'kusto'\nkusto.aliases = []\nfunction kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = ['tex', 'context']\nfunction latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source // symbol starting with & used in function arguments\n    var marker = '&' + symbol // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))' // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/, // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            } // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      }, // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = llvm\nllvm.displayName = 'llvm'\nllvm.aliases = []\nfunction llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = magma\nmagma.displayName = 'magma'\nmagma.aliases = []\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = markdown\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\nfunction markdown(Prism) {\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp') // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(\n          textContent(env.content.value),\n          grammar,\n          codeLang\n        )\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    } // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '') // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          } // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            } // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","'use strict'\n\nmodule.exports = maxscript\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\nfunction maxscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp(\n          '((?:' + // start of line\n            (/^/.source +\n              '|' + // operators and other language constructs\n              /[;=<>+\\-*/^({\\[]/.source +\n              '|' + // keywords as part of statements\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\n                .source) +\n            ')[ \\t]*)' +\n            '(?!' +\n            keywords.source +\n            ')' +\n            /[a-z_]\\w*\\b/.source +\n            '(?=[ \\t]*(?:' + // variable\n            ('(?!' +\n              keywords.source +\n              ')' +\n              /[a-z_]/.source +\n              '|' + // number\n              /\\d|-\\.?\\d/.source +\n              '|' + // other expressions or literals\n              /[({'\"$@#?]/.source) +\n            '))',\n          'im'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern:\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [\n        {\n          pattern:\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n          lookbehind: true\n        },\n        /\\b(?:e|pi)\\b/\n      ],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = mel\nmel.displayName = 'mel'\nmel.aliases = []\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        } // See rest below\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function:\n      /\\b\\w+(?=\\()|\\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [\n      /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel\n}\n","'use strict'\n\nmodule.exports = mermaid\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\nfunction mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = mongodb\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\nfunction mongodb(Prism) {\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice', // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit', // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields', // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField', // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = monkey\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    comment: {\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /\\b[?%#$]/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = moonscript\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\nfunction moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      }, // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","'use strict'\n\nmodule.exports = n1ql\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\nfunction n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nand2tetrisHdl\nnand2tetrisHdl.displayName = 'nand2tetrisHdl'\nnand2tetrisHdl.aliases = []\nfunction nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = naniscript\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = []\nfunction naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|DEFAULT|FLOAT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = neon\nneon.displayName = 'neon'\nneon.aliases = []\nfunction neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nim\nnim.displayName = 'nim'\nnim.aliases = []\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      pattern:\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n      greedy: true\n    },\n    char: {\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators (and anything really) inside backticks\n    identifier: {\n      pattern: /`[^`\\r\\n]+`/,\n      greedy: true,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: null // see below\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'important'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\n}\n","'use strict'\n\nmodule.exports = nsis\nnsis.displayName = 'nsis'\nnsis.aliases = []\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n    variable: /\\$\\w[\\w\\.]*/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = objectivec\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\nfunction objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","'use strict'\n\nmodule.exports = ocaml\nocaml.displayName = 'ocaml'\nocaml.aliases = []\nfunction ocaml(Prism) {\n  // https://ocaml.org/manual/lex.html\n  Prism.languages.ocaml = {\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n        greedy: true\n      }\n    ],\n    number: [\n      // binary and octal\n      /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n      /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n      /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n    ],\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'property'\n    },\n    label: {\n      pattern: /\\B~\\w+/,\n      alias: 'property'\n    },\n    'type-variable': {\n      pattern: /\\B'\\w+/,\n      alias: 'function'\n    },\n    variant: {\n      pattern: /`\\w+/,\n      alias: 'symbol'\n    },\n    // For the list of keywords and operators,\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n    keyword:\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'operator-like-punctuation': {\n      pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n      alias: 'punctuation'\n    },\n    // Custom operators are allowed\n    operator:\n      /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n    punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = opencl\nopencl.displayName = 'opencl'\nopencl.aliases = []\nfunction opencl(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword:\n        /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n      number:\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n      boolean: /\\b(?:false|true)\\b/,\n      'constant-opencl-kernel': {\n        pattern:\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n        alias: 'constant'\n      }\n    })\n    Prism.languages.insertBefore('opencl', 'class-name', {\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n      'builtin-type': {\n        pattern:\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n        alias: 'keyword'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern:\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern:\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern:\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes) // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    if (Prism.languages.cpp) {\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-cpp'] = {\n        pattern:\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n        alias: 'keyword'\n      }\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = openqasm\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\nfunction openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n","'use strict'\n\nmodule.exports = oz\noz.displayName = 'oz'\noz.aliases = []\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","'use strict'\n\nmodule.exports = parser\nparser.displayName = 'parser'\nparser.aliases = []\nfunction parser(Prism) {\n  ;(function (Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern:\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:false|true)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator:\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  })\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pcaxis\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\nfunction pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /NO|YES/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n","'use strict'\n\nmodule.exports = peoplecode\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\nfunction peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source, // REM comments\n        /\\bREM[^;]*;/.source, // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source, // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n","'use strict'\n\nmodule.exports = perl\nperl.displayName = 'perl'\nperl.aliases = []\nfunction perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        }, // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        }, // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        }, // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source, // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source, // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }, // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n        /[&*$@%]\\^[A-Z_]/, // ${...}\n        /[&*$@%]#?(?=\\{)/, // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/, // $1\n        /[&*$@%]\\d+/, // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nmodule.exports = phpExtras\nphpExtras.displayName = 'phpExtras'\nphpExtras.aliases = []\nfunction phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: {\n      pattern: /\\$this\\b/,\n      alias: 'keyword'\n    },\n    global:\n      /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /\\b(?:parent|self|static)\\b/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = php\nphp.displayName = 'php'\nphp.aliases = []\nfunction php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        }, // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = phpdoc\nphpdoc.displayName = 'phpdoc'\nphpdoc.aliases = []\nfunction phpdoc(Prism) {\n  Prism.register(refractorPhp)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        pattern: RegExp(\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\n            typeExpression +\n            '\\\\s+)?)\\\\$\\\\w+'\n        ),\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\n              typeExpression\n          ),\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n            punctuation: /[|\\\\[\\]()]/\n          }\n        }\n      ]\n    })\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\n  })(Prism)\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = plsql\nplsql.displayName = 'plsql'\nplsql.aliases = []\nfunction plsql(Prism) {\n  Prism.register(refractorSql)\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n      greedy: true\n    },\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n    keyword:\n      /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n    operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n  })\n  Prism.languages.insertBefore('plsql', 'operator', {\n    label: {\n      pattern: /<<\\s*\\w+\\s*>>/,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = powerquery\npowerquery.displayName = 'powerquery'\npowerquery.aliases = []\nfunction powerquery(Prism) {\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n  Prism.languages.powerquery = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'quoted-identifier': {\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    constant: [\n      /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n      /\\bOccurrence\\.(?:All|First|Last)\\b/,\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n      /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\n      /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n      /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\n      /\\bPrecision\\.(?:Decimal|Double)\\b/,\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n      /\\bnull\\b/\n    ],\n    boolean: /\\b(?:false|true)\\b/,\n    keyword:\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n    function: {\n      pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    'data-type': {\n      pattern:\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n      lookbehind: true\n    },\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n    punctuation: /[,;\\[\\](){}]/\n  }\n  Prism.languages.pq = Prism.languages['powerquery']\n  Prism.languages.mscript = Prism.languages['powerquery']\n}\n","'use strict'\n\nmodule.exports = powershell\npowershell.displayName = 'powershell'\npowershell.aliases = []\nfunction powershell(Prism) {\n  ;(function (Prism) {\n    var powershell = (Prism.languages.powershell = {\n      comment: [\n        {\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^`])#.*/,\n          lookbehind: true\n        }\n      ],\n      string: [\n        {\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern: /'(?:[^']|'')*'/,\n          greedy: true\n        }\n      ],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:false|true)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n      ],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword:\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern:\n          /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    }) // Variable interpolation inside strings, and nested expressions\n    powershell.string[0].inside = {\n      function: {\n        // Allow for one level of nesting\n        pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n        lookbehind: true,\n        inside: powershell\n      },\n      boolean: powershell.boolean,\n      variable: powershell.variable\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = prolog\nprolog.displayName = 'prolog'\nprolog.aliases = []\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+(?:\\.\\d*)?/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = promql\npromql.displayName = 'promql'\npromql.aliases = []\nfunction promql(Prism) {\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n  ;(function (Prism) {\n    // PromQL Aggregation Operators\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n    var aggregations = [\n      'sum',\n      'min',\n      'max',\n      'avg',\n      'group',\n      'stddev',\n      'stdvar',\n      'count',\n      'count_values',\n      'bottomk',\n      'topk',\n      'quantile'\n    ] // PromQL vector matching + the by and without clauses\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n    var vectorMatching = [\n      'on',\n      'ignoring',\n      'group_right',\n      'group_left',\n      'by',\n      'without'\n    ] // PromQL offset modifier\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n    var offsetModifier = ['offset']\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\n    Prism.languages.promql = {\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      'vector-match': {\n        // Match the comma-separated label lists inside vector matching:\n        pattern: new RegExp(\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          'label-key': {\n            pattern: /\\b[^,]+\\b/,\n            alias: 'attr-name'\n          },\n          punctuation: /[(),]/\n        }\n      },\n      'context-labels': {\n        pattern: /\\{[^{}]*\\}/,\n        inside: {\n          'label-key': {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n            alias: 'attr-name'\n          },\n          'label-value': {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\{|\\}|=~?|![=~]|,/\n        }\n      },\n      'context-range': [\n        {\n          pattern: /\\[[\\w\\s:]+\\]/,\n          // [1m]\n          inside: {\n            punctuation: /\\[|\\]|:/,\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        },\n        {\n          pattern: /(\\boffset\\s+)\\w+/,\n          // offset 1m\n          lookbehind: true,\n          inside: {\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        }\n      ],\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      number:\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n      punctuation: /[{};()`,.[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = properties\nproperties.displayName = 'properties'\nproperties.aliases = []\nfunction properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    'attr-value': {\n      pattern:\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true\n    },\n    'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n    punctuation: /[=:]/\n  }\n}\n","'use strict'\n\nmodule.exports = protobuf\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\nfunction protobuf(Prism) {\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = psl\npsl.displayName = 'psl'\npsl.aliases = []\nfunction psl(Prism) {\n  Prism.languages.psl = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n      alias: 'string',\n      greedy: true\n    },\n    keyword:\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n    constant:\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n    boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n    variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n    builtin: {\n      pattern:\n        /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n      alias: 'builtin-function'\n    },\n    'foreach-variable': {\n      pattern:\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n      lookbehind: true,\n      greedy: true\n    },\n    function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n    number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n    punctuation: /[(){}\\[\\];,]/\n  }\n}\n","'use strict'\n\nmodule.exports = pug\npug.displayName = 'pug'\npug.aliases = []\nfunction pug(Prism) {\n  ;(function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern:\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          text: /\\S[\\s\\S]*/\n        }\n      },\n      'multiline-plain-text': {\n        pattern:\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern:\n          /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        }, // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      'plain-text': {\n        pattern:\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: Prism.languages.javascript\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/,\n          'attr-id': /#[\\w\\-]+/,\n          'attr-class': /\\.[\\w\\-]+/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: Prism.languages.javascript\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\n        .source // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {\n        filter: 'atpl',\n        language: 'twig'\n      },\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'ejs',\n      'handlebars',\n      'less',\n      'livescript',\n      'markdown',\n      {\n        filter: 'sass',\n        language: 'scss'\n      },\n      'stylus'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('<filter_name>', function () {\n              return filter.filter\n            }),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            text: {\n              pattern: /\\S[\\s\\S]*/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n          }\n        }, // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        }, // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:false|true)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pure\npure.displayName = 'pure'\npure.aliases = []\nfunction pure(Prism) {\n  ;(function (Prism) {\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern:\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function:\n        /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      // eslint-disable-next-line no-misleading-character-class\n      operator:\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {\n        lang: 'c++',\n        alias: 'cpp'\n      },\n      'fortran'\n    ]\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '<lang>',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    }) // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = purebasic\npurebasic.displayName = 'purebasic'\npurebasic.aliases = []\nfunction purebasic(Prism) {\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword:\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator:\n      /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+\\$?/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n        ],\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        register:\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n        number:\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = purescript\npurescript.displayName = 'purescript'\npurescript.aliases = ['purs']\nfunction purescript(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\n    keyword:\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin functions only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n    operator: [\n      // Infix operators\n      Prism.languages.haskell.operator[0], // ASCII operators\n      Prism.languages.haskell.operator[2], // All UTF16 Unicode operator symbols\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n    ]\n  })\n  Prism.languages.purs = Prism.languages.purescript\n}\n","'use strict'\n\nmodule.exports = python\npython.displayName = 'python'\npython.aliases = ['py']\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","'use strict'\n\nmodule.exports = qml\nqml.displayName = 'qml'\nqml.aliases = []\nfunction qml(Prism) {\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = qsharp\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\nfunction qsharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    ) // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    }) // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = racket\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\nfunction racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","'use strict'\n\nmodule.exports = regex\nregex.displayName = 'regex'\nregex.aliases = []\nfunction regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rego\nrego.displayName = 'rego'\nrego.aliases = []\nfunction rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","'use strict'\n\nmodule.exports = renpy\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n    keyword:\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern:\n        /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","'use strict'\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rust\nrust.displayName = 'rust'\nrust.aliases = []\nfunction rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  ;(function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    }\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    }\n    var macroKeyword = {\n      pattern:\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    }\n    var comment = [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n        lookbehind: true\n      }\n    ]\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    }\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    }\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    }\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var globalStatements = {\n      pattern:\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var actionSets =\n      /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/\n        .source\n    var casActions = {\n      pattern: RegExp(\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\n          /<act>/g,\n          function () {\n            return actionSets\n          }\n        ),\n        'i'\n      ),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n            return actionSets\n          }),\n          'i'\n        ),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    }\n    var keywords = {\n      pattern:\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n      lookbehind: true\n    }\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:cards|(?:data)?lines)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern:\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern:\n              /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern:\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern:\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern:\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern:\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\n            /<str>/g,\n            function () {\n              return stringPattern\n            }\n          ),\n          'im'\n        ),\n        lookbehind: true,\n        inside: args\n      },\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern:\n          /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n      punctuation: punctuation\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sass\nsass.displayName = 'sass'\nsass.aliases = []\nfunction sass(Prism) {\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n","'use strict'\n\nmodule.exports = scheme\nscheme.displayName = 'scheme'\nscheme.aliases = []\nfunction scheme(Prism) {\n  ;(function (Prism) {\n    Prism.languages.scheme = {\n      // this supports \"normal\" single-line comments:\n      //   ; comment\n      // and (potentially nested) multiline comments:\n      //   #| comment #| nested |# still comment |#\n      // (only 1 level of nesting is supported)\n      comment:\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      symbol: {\n        pattern: /'[^()\\[\\]#'\\s]+/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n        greedy: true\n      },\n      'lambda-parameter': [\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n        {\n          pattern:\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n          lookbehind: true\n        },\n        {\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n          lookbehind: true\n        }\n      ],\n      keyword: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      builtin: {\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      number: {\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n        //\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n        // <num R>       := <prefix R><complex R>\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\n        //                | <decimal R>\n        //\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n        // <uint R>      := <digit R>+\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n        // <radix 2>     := #b\n        // <radix 8>     := #o\n        // <radix 10>    := (?:#d)?\n        // <radix 16>    := #x\n        // <digit 2>     := [01]\n        // <digit 8>     := [0-7]\n        // <digit 10>    := \\d\n        // <digit 16>    := [0-9a-f]\n        //\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n        // pattern:\n        pattern: RegExp(\n          SortedBNF({\n            '<ureal dec>':\n              /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n            '<complex dec>':\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\n                .source,\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n            '<complex box>':\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\n                .source,\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\n              .source,\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\n              .source\n          }),\n          'i'\n        ),\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      function: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      identifier: {\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      punctuation: /[()\\[\\]']/\n    }\n    /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */\n    function SortedBNF(grammar) {\n      for (var key in grammar) {\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n          return '(?:' + grammar[key].trim() + ')'\n        })\n      } // return the last item\n      return grammar[key]\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' + // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' + // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' + // shell symbol\n            /[$#%](?=\\s)/.source + // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = smali\nsmali.displayName = 'smali'\nsmali.aliases = []\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = smalltalk\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n          },\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [\n        {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^[{`]|[`}]$/,\n                  alias: 'punctuation'\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: null // see below\n                }\n              }\n            },\n            variable: /\\$\\w+/\n          }\n        },\n        {\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n          greedy: true\n        }\n      ],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n      ]\n    }\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\n      Prism.languages.smarty\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\n      Prism.languages.smarty\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\n    var smartyPattern = RegExp(\n      // comments\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\n        '|' + // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n        '|' + // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n          /<str>/g,\n          function () {\n            return string.source\n          }\n        ),\n      'g'\n    ) // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}'\n      var smartyLiteralEnd = '{/literal}'\n      var smartyLiteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLiteralEnd) {\n            smartyLiteralMode = false\n          }\n          if (!smartyLiteralMode) {\n            if (match === smartyLiteralStart) {\n              smartyLiteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sml\nsml.displayName = 'sml'\nsml.aliases = ['smlnj']\nfunction sml(Prism) {\n  // https://smlfamily.github.io/sml97-defn.pdf\n  // https://people.mpi-sws.org/~rossberg/sml.html\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\n    Prism.languages.sml = {\n      // allow one level of nesting\n      comment:\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n      string: {\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': [\n        {\n          // This is only an approximation since the real grammar is context-free\n          //\n          // Why the main loop so complex?\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n          // followed by a long identifier.\n          pattern: RegExp(\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n              .replace(/<NOT-LAST>/g, function () {\n                return /\\s*(?:[*,]|->)/.source\n              })\n              .replace(/<TERMINAL>/g, function () {\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\n                  .source\n              })\n              .replace(/<LONG-ID>/g, function () {\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\n              })\n              .replace(/<KEYWORD>/g, function () {\n                return keywords.source\n              }),\n            'i'\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern:\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n        lookbehind: true\n      },\n      keyword: keywords,\n      variable: {\n        pattern: /(^|[^\\w'])'[\\w']*/,\n        lookbehind: true\n      },\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n      word: {\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n        alias: 'constant'\n      },\n      boolean: /\\b(?:false|true)\\b/i,\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n      punctuation: /[(){}\\[\\].:,;]/\n    }\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\n    Prism.languages.smlnj = Prism.languages.sml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = solidity\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\nfunction solidity(Prism) {\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n","'use strict'\n\nmodule.exports = solutionFile\nsolutionFile.displayName = 'solutionFile'\nsolutionFile.aliases = []\nfunction solutionFile(Prism) {\n  ;(function (Prism) {\n    var guid = {\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n      alias: 'constant',\n      inside: {\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages['solution-file'] = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n        greedy: true,\n        inside: {\n          guid: guid\n        }\n      },\n      object: {\n        // Foo\n        //   Bar(\"abs\") = 9\n        //   EndBar\n        //   Prop = TRUE\n        // EndFoo\n        pattern:\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'keyword'\n      },\n      property: {\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n        lookbehind: true,\n        inside: {\n          guid: guid\n        }\n      },\n      guid: guid,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\n      operator: /=/,\n      punctuation: /[(),]/\n    }\n    Prism.languages['sln'] = Prism.languages['solution-file']\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern:\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorTurtle = require('./turtle.js')\nmodule.exports = sparql\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\nfunction sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n","'use strict'\n\nmodule.exports = splunkSpl\nsplunkSpl.displayName = 'splunkSpl'\nsplunkSpl.aliases = []\nfunction splunkSpl(Prism) {\n  Prism.languages['splunk-spl'] = {\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true\n    },\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n    keyword:\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n    'operator-word': {\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n      alias: 'operator'\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    property: /\\b\\w+(?=\\s*=(?!=))/,\n    date: {\n      // MM/DD/YYYY(:HH:MM:SS)?\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n      alias: 'number'\n    },\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /\\b(?:f|false|t|true)\\b/i,\n    operator: /[<>=]=?|[-+*/%|]/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = sqf\nsqf.displayName = 'sqf'\nsqf.aliases = []\nfunction sqf(Prism) {\n  Prism.languages.sqf = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function:\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n    number:\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n    'magic-variable': {\n      pattern:\n        /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n      alias: 'keyword'\n    },\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n  })\n  Prism.languages.insertBefore('sqf', 'string', {\n    macro: {\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /#[a-z]+\\b/i,\n          alias: 'keyword'\n        },\n        comment: Prism.languages.sqf.comment\n      }\n    }\n  })\n  delete Prism.languages.sqf['class-name']\n}\n","'use strict'\n\nmodule.exports = sql\nsql.displayName = 'sql'\nsql.aliases = []\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = squirrel\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\nfunction squirrel(Prism) {\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'string', {\n    char: {\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n      lookbehind: true,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = stan\nstan.displayName = 'stan'\nstan.aliases = []\nfunction stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/, // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern:\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern:\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = swift\nswift.displayName = 'swift'\nswift.aliases = []\nfunction swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","'use strict'\n\nmodule.exports = systemd\nsystemd.displayName = 'systemd'\nsystemd.aliases = []\nfunction systemd(Prism) {\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n  ;(function (Prism) {\n    var comment = {\n      pattern: /^[;#].*/m,\n      greedy: true\n    }\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\n    Prism.languages.systemd = {\n      comment: comment,\n      section: {\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'section-name': {\n            pattern: /[\\s\\S]+/,\n            alias: 'selector'\n          }\n        }\n      },\n      key: {\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n        greedy: true,\n        alias: 'attr-name'\n      },\n      value: {\n        // This pattern is quite complex because of two properties:\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n        //  2) Line continuations.\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\n        pattern: RegExp(\n          /(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n            '(?:' +\n            quotesSource +\n            '|(?=[^\"\\r\\n]))' + // main loop\n            '(?:' +\n            (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n              '|' +\n              '[ \\t]+(?:(?![ \\t\"])|' +\n              quotesSource +\n              ')' + // line continuation\n              '|' +\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'attr-value',\n        inside: {\n          comment: comment,\n          quoted: {\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\n            lookbehind: true,\n            greedy: true\n          },\n          punctuation: /\\\\$/m,\n          boolean: {\n            pattern: /^(?:false|no|off|on|true|yes)$/,\n            greedy: true\n          }\n        }\n      },\n      punctuation: /=/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = t4Cs\nt4Cs.displayName = 't4Cs'\nt4Cs.aliases = []\nfunction t4Cs(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorCsharp)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","'use strict'\n\nmodule.exports = t4Templating\nt4Templating.displayName = 't4Templating'\nt4Templating.aliases = []\nfunction t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorVbnet = require('./vbnet.js')\nmodule.exports = t4Vb\nt4Vb.displayName = 't4Vb'\nt4Vb.aliases = []\nfunction t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = tcl\ntcl.displayName = 'tcl'\ntcl.aliases = []\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:else|elseif)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = tremor\ntremor.displayName = 'tremor'\ntremor.aliases = []\nfunction tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n","'use strict'\nvar refractorJsx = require('./jsx.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = tsx\ntsx.displayName = 'tsx'\ntsx.aliases = []\nfunction tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript)\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript) // doesn't work with TS because TS is too complex\n    delete Prism.languages.tsx['parameter']\n    delete Prism.languages.tsx['literal-property'] // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n    var tag = Prism.languages.tsx.tag\n    tag.pattern = RegExp(\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\n      tag.pattern.flags\n    )\n    tag.lookbehind = true\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = tt2\ntt2.displayName = 'tt2'\ntt2.aliases = []\nfunction tt2(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }) // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = turtle\nturtle.displayName = 'turtle'\nturtle.aliases = []\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern:\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern:\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern:\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return\n    }\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\n  })\n}\n","'use strict'\n\nmodule.exports = typescript\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\nfunction typescript(Prism) {\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    }) // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    ) // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property'] // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = typoscript\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\nfunction typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = unrealscript\nunrealscript.displayName = 'unrealscript'\nunrealscript.aliases = ['uc', 'uscript']\nfunction unrealscript(Prism) {\n  Prism.languages.unrealscript = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    category: {\n      pattern:\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        property: /\\b\\w+(?=\\s*=)/,\n        operator: /=/,\n        punctuation: /[<>|]/\n      }\n    },\n    macro: {\n      pattern: /`\\w+/,\n      alias: 'property'\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n    operator:\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n    punctuation: /[()[\\]{};,.]/\n  }\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\n}\n","'use strict'\n\nmodule.exports = uorazor\nuorazor.displayName = 'uorazor'\nuorazor.aliases = []\nfunction uorazor(Prism) {\n  Prism.languages.uorazor = {\n    'comment-hash': {\n      pattern: /#.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    'comment-slash': {\n      pattern: /\\/\\/.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      },\n      greedy: true\n    },\n    'source-layers': {\n      pattern:\n        /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n      alias: 'function'\n    },\n    'source-commands': {\n      pattern:\n        /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n      alias: 'function'\n    },\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    function:\n      /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n    keyword:\n      /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n}\n","'use strict'\n\nmodule.exports = uri\nuri.displayName = 'uri'\nuri.aliases = ['url']\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source + // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n          ('(?:' + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') + // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n","'use strict'\n\nmodule.exports = v\nv.displayName = 'v'\nv.aliases = []\nfunction v(Prism) {\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: {\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        alias: 'quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n            lookbehind: true,\n            inside: {\n              'interpolation-variable': {\n                pattern: /^\\$\\w[\\s\\S]*$/,\n                alias: 'variable'\n              },\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              'interpolation-expression': interpolationExpr\n            }\n          }\n        }\n      },\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'string', {\n      char: {\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n        // using {1,2} instead of `u` flag for compatibility\n        alias: 'rune'\n      }\n    })\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorBasic = require('./basic.js')\nmodule.exports = vbnet\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\nfunction vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = verilog\nverilog.displayName = 'verilog'\nverilog.aliases = []\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'kernel-function': {\n      // support for any kernel function (ex: $display())\n      pattern: /\\B\\$\\w+\\b/,\n      alias: 'property'\n    },\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\b\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword:\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n    // support for time ticks, vectors, and real numbers\n    number:\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vhdl\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    constant: /\\b(?:library|use)\\b/i,\n    // support for predefined attributes included\n    keyword:\n      /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator:\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vim\nvim.displayName = 'vim'\nvim.aliases = []\nfunction vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\b\\w+(?=\\()/,\n    keyword:\n      /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin:\n      /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator:\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = visualBasic\nvisualBasic.displayName = 'visualBasic'\nvisualBasic.aliases = []\nfunction visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern:\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'property',\n      greedy: true\n    },\n    string: {\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern:\n        /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n      alias: 'number'\n    },\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n    boolean: /\\b(?:False|Nothing|True)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n  Prism.languages.vba = Prism.languages['visual-basic']\n}\n","'use strict'\n\nmodule.exports = warpscript\nwarpscript.displayName = 'warpscript'\nwarpscript.aliases = []\nfunction warpscript(Prism) {\n  Prism.languages.warpscript = {\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern:\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n      greedy: true\n    },\n    variable: /\\$\\S+/,\n    macro: {\n      pattern: /@\\S+/,\n      alias: 'property'\n    },\n    // WarpScript doesn't have any keywords, these are all functions under the control category\n    // https://www.warp10.io/tags/control\n    keyword:\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n    number:\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n    boolean: /\\b(?:F|T|false|true)\\b/,\n    punctuation: /<%|%>|[{}[\\]()]/,\n    // Some operators from the \"operators\" category\n    // https://www.warp10.io/tags/operators\n    operator:\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n  }\n}\n","'use strict'\n\nmodule.exports = wasm\nwasm.displayName = 'wasm'\nwasm.aliases = []\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern:\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n    number:\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = webIdl\nwebIdl.displayName = 'webIdl'\nwebIdl.aliases = []\nfunction webIdl(Prism) {\n  ;(function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\n    var type =\n      '(?:' +\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\n      '|' +\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\n      '|' +\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\n      id +\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\n      ')' +\n      /(?:\\s*\\?)?/.source\n    var typeInside = {}\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\n              type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // callback return type\n          pattern: RegExp(\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // typedef\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\n              .source + id\n          ),\n          lookbehind: true\n        },\n        {\n          // inheritance\n          pattern: RegExp(/(:\\s*)/.source + id),\n          lookbehind: true\n        }, // includes and implements\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n        {\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n          lookbehind: true\n        },\n        {\n          // function return type, parameter types, and dictionary members\n          pattern: RegExp(\n            type +\n              '(?=' +\n              /\\s*(?:\\.{3}\\s*)?/.source +\n              id +\n              /\\s*[(),;=]/.source +\n              ')'\n          ),\n          inside: typeInside\n        }\n      ],\n      builtin:\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/, // type keywords\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    }\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key]\n      }\n    }\n    Prism.languages['webidl'] = Prism.languages['web-idl']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = wiki\nwiki.displayName = 'wiki'\nwiki.aliases = []\nfunction wiki(Prism) {\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold-italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true,\n          alias: ['bold', 'italic']\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/, // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = wolfram\nwolfram.displayName = 'wolfram'\nwolfram.aliases = ['mathematica', 'wl', 'nb']\nfunction wolfram(Prism) {\n  Prism.languages.wolfram = {\n    // Allow one level of nesting - note: regex taken from applescipt\n    comment: /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n    context: {\n      pattern: /\\b\\w+`+\\w*/,\n      alias: 'class-name'\n    },\n    blank: {\n      pattern: /\\b\\w+_\\b/,\n      alias: 'regex'\n    },\n    'global-variable': {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    },\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator:\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\^|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.mathematica = Prism.languages.wolfram\n  Prism.languages.wl = Prism.languages.wolfram\n  Prism.languages.nb = Prism.languages.wolfram\n}\n","'use strict'\n\nmodule.exports = wren\nwren.displayName = 'wren'\nwren.aliases = []\nfunction wren(Prism) {\n  // https://wren.io/\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [\n      {\n        // support 3 levels of nesting\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n        pattern:\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [\n      {\n        // class definition\n        // class Meta {}\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      }, // A class must always start with an uppercase.\n      // File.read\n      /\\b[A-Z][a-z\\d_]*\\b/\n    ],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword:\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  }\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern:\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern:\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xojo\nxojo.displayName = 'xojo'\nxojo.aliases = []\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    directive: {\n      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n      alias: 'property'\n    },\n    keyword:\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n    operator:\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = xquery\nxquery.displayName = 'xquery'\nxquery.aliases = []\nfunction xquery(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[-\\w:]+/,\n      axis: {\n        pattern:\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern:\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern:\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern:\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern =\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\n      /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n      inside: Prism.languages.xquery,\n      alias: 'language-xquery'\n    } // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' && // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yang\nyang.displayName = 'yang'\nyang.aliases = []\nfunction yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n","'use strict'\n\nmodule.exports = zig\nzig.displayName = 'zig'\nzig.aliases = []\nfunction zig(Prism) {\n  ;(function (Prism) {\n    function literal(str) {\n      return function () {\n        return str\n      }\n    }\n    var keyword =\n      /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var PREFIX_TYPE_OP =\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\n        /<ALIGN>/g,\n        literal(ALIGN)\n      )\n    var SUFFIX_EXPR =\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\n        /<ID>/g,\n        literal(IDENTIFIER)\n      )\n    var TYPE =\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\n    /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */\n    Prism.languages.zig = {\n      comment: [\n        {\n          pattern: /\\/\\/[/!].*/,\n          alias: 'doc-comment'\n        },\n        /\\/{2}.*/\n      ],\n      string: [\n        {\n          // \"string\" and c\"string\"\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // multiline strings and c-strings\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      char: {\n        // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n        pattern:\n          /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n        lookbehind: true,\n        greedy: true\n      },\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n      label: {\n        pattern:\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n        lookbehind: true\n      },\n      'class-name': [\n        // const Foo = struct {};\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n        {\n          // const x: i32 = 9;\n          // var x: Bar;\n          // fn foo(x: bool, y: f32) void {}\n          pattern: RegExp(\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          // extern fn foo(x: f64) f64; (optional alignment)\n          pattern: RegExp(\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      'builtin-type': {\n        pattern:\n          /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n        alias: 'keyword'\n      },\n      keyword: keyword,\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n      number:\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n      punctuation: /[.:,;(){}[\\]]/\n    }\n    Prism.languages.zig['class-name'].forEach(function (obj) {\n      if (obj.inside === null) {\n        obj.inside = Prism.languages.zig\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar search = /[#.]/g\n\n// Create a hast element from a simple CSS selector.\nfunction parse(selector, defaultTagName) {\n  var value = selector || ''\n  var name = defaultTagName || 'div'\n  var props = {}\n  var start = 0\n  var subvalue\n  var previous\n  var match\n\n  while (start < value.length) {\n    search.lastIndex = start\n    match = search.exec(value)\n    subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        name = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (props.className) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {type: 'element', tagName: name, properties: props, children: []}\n}\n","'use strict'\n\nvar find = require('property-information/find')\nvar normalize = require('property-information/normalize')\nvar parseSelector = require('hast-util-parse-selector')\nvar spaces = require('space-separated-tokens').parse\nvar commas = require('comma-separated-tokens').parse\n\nmodule.exports = factory\n\nvar own = {}.hasOwnProperty\n\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null\n\n  return h\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName)\n    var children = Array.prototype.slice.call(arguments, 2)\n    var name = node.tagName.toLowerCase()\n    var property\n\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties)\n      properties = null\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property])\n      }\n    }\n\n    addChild(node.children, children)\n\n    if (node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  function addProperty(properties, key, value) {\n    var info\n    var property\n    var result\n\n    // Ignore nullish and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return\n    }\n\n    info = find(schema, key)\n    property = info.property\n    result = value\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result)\n      } else if (info.commaSeparated) {\n        result = commas(result)\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '))\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result)\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result)\n    }\n\n    properties[property] = parsePrimitives(info, property, result)\n  }\n}\n\nfunction isChildren(value, node) {\n  return (\n    typeof value === 'string' ||\n    'length' in value ||\n    isNode(node.tagName, value)\n  )\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true\n  }\n\n  type = type.toLowerCase()\n\n  if (tagName === 'button') {\n    return (\n      type !== 'menu' &&\n      type !== 'submit' &&\n      type !== 'reset' &&\n      type !== 'button'\n    )\n  }\n\n  return 'value' in value\n}\n\nfunction addChild(nodes, value) {\n  var index\n  var length\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n    return\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1\n    length = value.length\n\n    while (++index < length) {\n      addChild(nodes, value[index])\n    }\n\n    return\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n\n  nodes.push(value)\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index\n  var length\n  var result\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value)\n  }\n\n  length = value.length\n  index = -1\n  result = []\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index])\n  }\n\n  return result\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result)\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (\n      typeof result === 'string' &&\n      (result === '' || normalize(value) === normalize(name))\n    ) {\n      result = true\n    }\n  }\n\n  return result\n}\n\nfunction style(value) {\n  var result = []\n  var key\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '))\n  }\n\n  return result.join('; ')\n}\n\nfunction createAdjustMap(values) {\n  var length = values.length\n  var index = -1\n  var result = {}\n  var value\n\n  while (++index < length) {\n    value = values[index]\n    result[value.toLowerCase()] = value\n  }\n\n  return result\n}\n","'use strict'\n\nvar schema = require('property-information/html')\nvar factory = require('./factory')\n\nvar html = factory(schema, 'div')\nhtml.displayName = 'html'\n\nmodule.exports = html\n","'use strict'\n\nmodule.exports = require('./html')\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","'use strict'\n\nvar normalize = require('./normalize')\nvar DefinedInfo = require('./lib/util/defined-info')\nvar Info = require('./lib/util/info')\n\nvar data = 'data'\n\nmodule.exports = find\n\nvar valid = /^data[-\\w.:]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\nfunction find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return data + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return data + value\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar html = require('./lib/html')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, html])\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\n\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\n\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nvar boolean = types.boolean\nvar overloadedBoolean = types.overloadedBoolean\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\n\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","'use strict'\n\nvar caseSensitiveTransform = require('./case-sensitive-transform')\n\nmodule.exports = caseInsensitiveTransform\n\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","'use strict'\n\nmodule.exports = caseSensitiveTransform\n\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","'use strict'\n\nvar normalize = require('../../normalize')\nvar Schema = require('./schema')\nvar DefinedInfo = require('./defined-info')\n\nmodule.exports = create\n\nfunction create(definition) {\n  var space = definition.space\n  var mustUseProperty = definition.mustUseProperty || []\n  var attributes = definition.attributes || {}\n  var props = definition.properties\n  var transform = definition.transform\n  var property = {}\n  var normal = {}\n  var prop\n  var info\n\n  for (prop in props) {\n    info = new DefinedInfo(\n      prop,\n      transform(attributes, prop),\n      props[prop],\n      space\n    )\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true\n    }\n\n    property[prop] = info\n\n    normal[normalize(prop)] = prop\n    normal[normalize(info.attribute)] = prop\n  }\n\n  return new Schema(property, normal, space)\n}\n","'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","'use strict'\n\nmodule.exports = Info\n\nvar proto = Info.prototype\n\nproto.space = null\nproto.attribute = null\nproto.property = null\nproto.boolean = false\nproto.booleanish = false\nproto.overloadedBoolean = false\nproto.number = false\nproto.commaSeparated = false\nproto.spaceSeparated = false\nproto.commaOrSpaceSeparated = false\nproto.mustUseProperty = false\nproto.defined = false\n\nfunction Info(property, attribute) {\n  this.property = property\n  this.attribute = attribute\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar Schema = require('./schema')\n\nmodule.exports = merge\n\nfunction merge(definitions) {\n  var length = definitions.length\n  var property = []\n  var normal = []\n  var index = -1\n  var info\n  var space\n\n  while (++index < length) {\n    info = definitions[index]\n    property.push(info.property)\n    normal.push(info.normal)\n    space = info.space\n  }\n\n  return new Schema(\n    xtend.apply(null, property),\n    xtend.apply(null, normal),\n    space\n  )\n}\n","'use strict'\n\nmodule.exports = Schema\n\nvar proto = Schema.prototype\n\nproto.space = null\nproto.normal = {}\nproto.property = {}\n\nfunction Schema(property, normal, space) {\n  this.property = property\n  this.normal = normal\n\n  if (space) {\n    this.space = space\n  }\n}\n","'use strict'\n\nvar powers = 0\n\nexports.boolean = increment()\nexports.booleanish = increment()\nexports.overloadedBoolean = increment()\nexports.number = increment()\nexports.spaceSeparated = increment()\nexports.commaSeparated = increment()\nexports.commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return Math.pow(2, ++powers)\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n})\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n})\n","'use strict'\n\nmodule.exports = normalize\n\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = String(value || empty).trim()\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return values.join(space).trim()\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n// To do: next major: expose functions that yields extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * autolink literal syntax.\n *\n * @type {Extension}\n */\nexport const gfmAutolinkLiteral = {\n  text\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {void}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: not used here.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {void}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {void}\n   */\n  consume(events) {\n    this.map.sort((a, b) => a[0] - b[0])\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]))\n      // eslint-disable-next-line unicorn/no-array-push-push\n      vecs.push(this.map[index][2])\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {void}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       console.log('to do: links?', add, rmCurr)\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'left' | 'center' | 'right' | 'none'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {Array<Align>}\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * table syntax.\n *\n * @type {Extension}\n */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolveAll: resolveTable\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n// eslint-disable-next-line complexity\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/// Generate a cell.\n/**\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {Range} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {readonly Point}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration.\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","character","code","charCodeAt","alphabetical","decimal","isBuffer","el","characters","char","entity","document","createElement","innerHTML","textContent","legacy","invalid","hexadecimal","alphanumerical","decodeEntity","option","settings","defaults","indent","entityCharacters","namedEntity","terminated","reference","following","warning","output","begin","test","prev","next","diff","additional","nonTerminated","handleText","text","handleReference","handleWarning","textContext","referenceContext","warningContext","index","queue","result","now","offset","messages","noop","lineFeed","ampersand","tab","formFeed","space","lessThan","fromCharCode","numberSign","uppercaseX","lowercaseX","hexa","deci","tests","own","semicolon","namedUnknown","namedNotTerminated","namedEmpty","attribute","equalsTo","numericNotTerminated","parseInt","bases","numericProhibited","replacementCharacter","numericDisallowed","disallowed","numericEmpty","flush","join","parse","String","Function","highlighter","highlight","supportedLanguages","defined","current","ctx","globalThis","self","window","g","restore","Prism","undefined","manual","disableWorkerMessageHandler","h","decode","markup","css","clike","js","Refractor","refract","register","grammar","displayName","languages","sup","util","alias","list","map","registered","language","listLanguages","encode","tokens","Token","stringify","parent","env","values","stringifyAll","tag","classes","attributes","concat","hooks","run","attrs","refractor","abap","string","pattern","lookbehind","keyword","number","operator","punctuation","aliases","abnf","coreRules","greedy","inside","range","terminal","repetition","definition","RegExp","rule","actionscript","insertBefore","xml","ada","boolean","variable","agda","function","al","antlr4","escape","action","command","annotation","label","constant","g4","apacheconf","regex","refractorSql","apex","keywords","className","insertClassName","classNameInside","sql","trigger","apl","statement","assignment","dfn","applescript","aql","identifier","refractorCpp","arduino","builtin","ino","arff","asciidoc","quoted","interpreted","table","specifiers","title","hr","admonition","callout","macro","inline","url","italic","bold","replacement","copyFromAsciiDoc","keys","o","l","split","rest","add","adoc","asm6502","directive","asmatmel","refractorCsharp","aspnet","csharp","javascript","autohotkey","selector","symbol","important","autoit","avisynth","replacements","flags","types","allinternals","argument","avs","avroIdl","avdl","bash","envVars","commandAfterHeredoc","insideString","environment","shebang","toBeCopied","shell","basic","batch","parameter","bbcode","shortcode","bicep","interpolation","expression","datatype","decorator","birb","metadata","refractorC","bison","delimiter","bnf","rbnf","brainfuck","pointer","increment","decrement","branching","brightscript","bro","bsl","oscript","cfscript","scope","cfc","chaiscript","cpp","cil","clojure","cmake","namespace","inserted","cobol","level","coffeescript","script","coffee","concurnas","langext","conc","coq","commentSource","punct","modName","generic","refractorRuby","crystal","ruby","args","expansion","nested","depthLog2","keywordKinds","keywordsToPattern","words","typeDeclarationKeywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","array","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","regularString","verbatimString","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","cs","cshtml","commentLike","stringLike","round","square","curly","angle","tagAttrs","tagContent","tagRegion","html","block","razor","csp","scheme","none","nonce","hash","host","cssExtras","selectorInside","class","id","combinator","unit","hexcode","color","atrule","addInlined","addAttribute","csv","cypher","relationship","d","dart","packagePrefix","generics","dataweave","date","dax","measure","dhall","coord","PREFIXES","unchanged","forEach","prefix","refractorMarkupTemplating","django","filter","markupTemplating","buildPlaceholders","tokenizePlaceholders","jinja2","dnsZoneFile","docker","spaceAfterBackSlash","stringRule","commentRule","instruction","dockerfile","dot","ID","IDInside","withID","gv","ebnf","special","editorconfig","section","eiffel","ejs","eta","elixir","doc","atom","elm","hvariable","erb","erlang","refractorLua","etlua","lua","excelFormula","sheet","file","path","cell","row","factor","comment_inside","string_inside","regexp","combinators","arrToWordsRegExp","builtins","k","$false","firestoreSecurityRules","method","flow","unshift","fortran","fsharp","ftl","FTL_EXPR","gap","continuation","gcode","checksum","gdscript","gedcom","gherkin","tableRow","pystring","feature","scenario","outline","td","th","git","deleted","glsl","gml","gamemakerlanguage","gn","gni","goModule","version","go","graphql","description","markdown","scalar","fragment","object","validTokens","token","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","open","close","stackHeight","groovy","haml","doctype","filters","all_filters","handlebars","brackets","hbs","haskell","hs","haxe","reification","hcl","heredoc","hlsl","hoon","hpkp","hsts","http","headerValueOf","uri","header","langs","httpLanguages","json","plain","suffixTypes","getSuffixPattern","contentType","suffix","ichigojam","icon","icuMessageFormat","stringPattern","argumentSource","nestedMessage","message","refractorHaskell","idris","idr","iecst","address","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","verb","ini","io","j","adverb","conjunction","java","classNamePrefix","refractorJava","refractorJavadoclike","javadoc","codeLinePattern","memberReference","field","javadoclike","addSupport","javaDocLike","docLanguage","lang","callback","tokenName","docCommentSupport","hashbang","javastacktrace","summary","exceptions","more","jexl","transform","jolie","aggregates","redirects","jq","stringInterpolation","jsExtras","withId","imports","spread","arrow","dom","console","maybeClassNameTokens","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenize","tokenizeInterpolationExpression","tempGrammar","apply","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","walkTokens","s","before","substring","middle","after","afterTokens","Boolean","typescript","ts","jsx","tsx","stringContent","findTemplateStrings","embedded","refractorTypescript","jsdoc","parameterPrefix","example","null","webmanifest","refractorJson","json5","jsonp","jsstacktrace","braces","stringifyToken","openedTags","notTagNorBrace","tagName","pop","openedBraces","plainText","julia","keepalived","ip","email","keyman","kotlin","interpolationInside","kt","kts","kumir","nonId","wrapId","prolog","kum","kusto","datetime","latex","funcPattern","insideEqu","cdata","equation","headline","tex","context","refractorPhp","latte","php","markupLatte","less","refractorScheme","lilypond","schemeExpression","ly","liquid","empty","insideRaw","tagMatch","lisp","simple_form","primitive","marker","par","nestedPar","heading","declare","interactive","defvar","defun","lambda","car","arg","varform","forms","arglist","sublist","elisp","emacs","livescript","llvm","log","exception","separator","domain","uuid","time","lolcode","magma","generator","makefile","inner","createInline","tableCell","tableLine","yaml","blockquote","strike","codeLang","codeBlock","toLowerCase","cls","tagPattern","Number","fromCodePoint","KNOWN_ENTITY_NAMES","plugins","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","getElementById","amp","lt","gt","quot","md","defineProperties","placeholderPattern","replaceFilter","tokenStack","includedCdataInside","def","attrName","mathml","svg","ssml","rss","matlab","maxscript","mel","flag","mermaid","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","n4js","n4jsd","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","define","nani","input","stack","bracket","bracketsIndex","isBracketsBalanced","nasm","neon","literal","nevod","fields","search","quantifier","colon","nginx","nim","nix","antiquotation","nsis","objectivec","objc","ocaml","variant","opencl","openqasm","qasm","oz","parigp","parser","pascal","asm","objectpascal","pascaligo","reduce","accum","p","pcaxis","tlist","px","peoplecode","pcode","perl","filehandle","phpExtras","global","package","string_interpolation","phpdoc","plsql","powerquery","pq","mscript","powershell","processing","promql","vectorMatching","properties","protobuf","builtinTypes","psl","pug","each","branch","mixin","filter_pattern","puppet","pure","inlineLanguageRe","purebasic","pbfasm","purescript","purs","python","py","q","qml","jsString","jsComment","jsExpr","qore","qsharp","qualifiedName","interpolationExpr","qs","r","ellipsis","racket","rkt","specialEscape","rangeChar","groupName","backreference","anchor","group","alternation","rego","renpy","rpy","role","link","rip","roboconf","component","optional","wildcard","robotframework","createSection","extendecInside","docTag","testNameLike","testPropertyLike","documentation","variables","tasks","robot","percentExpression","symbolName","rb","rust","multilineComment","sas","numericConstant","macroVariable","macroKeyword","step","func","format","equals","altformat","globalStatements","submitStatement","actionSets","casActions","datalines","sass","scala","SortedBNF","scss","refractorBash","shellSession","strings","info","user","smali","smalltalk","smarty","smartyPattern","smartyLiteralMode","sml","word","smlnj","solidity","sol","solutionFile","guid","soy","numberPattern","soyLitteralMode","refractorTurtle","sparql","rq","splunkSpl","sqf","squirrel","stan","higherOrderFunctions","constraint","stylus","swift","nil","omit","systemd","quotesSource","refractorT4Templating","t4Cs","t4","createT4","t4Templating","createBlock","contentAlias","insideLang","standard","refractorVbnet","t4Vb","refractorYaml","tap","fail","pass","pragma","bailout","plan","subtest","yamlish","tcl","textile","modifierRegex","parenthesesRegex","withModifier","modifierTokens","phrase","modifier","cite","span","image","footnote","acronym","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","toml","insertKey","tremor","extractor","troy","trickle","refractorJsx","tt2","turtle","trig","twig","at","typoscript","tsconfig","unrealscript","category","uc","uscript","uorazor","query","pair","authority","port","v","vala","refractorBasic","vbnet","velocity","unparsed","verilog","vhdl","vim","visualBasic","vb","vba","warpscript","wasm","webIdl","wiki","emphasis","nowiki","wolfram","blank","mathematica","wl","nb","wren","xeora","xeoracube","xmlDoc","insertDocComment","docComment","slashDocComment","tickDocComment","xojo","xquery","extension","axis","anchorOrAlias","plainKey","createValuePattern","yml","yang","zig","IDENTIFIER","ALIGN","TYPE","comma","lastIndex","defaultTagName","subvalue","previous","props","children","find","normalize","parseSelector","spaces","commas","schema","caseSensitive","adjust","createAdjustMap","isNode","isChildren","addProperty","addChild","spaceSeparated","commaSeparated","commaOrSpaceSeparated","parsePrimitive","parsePrimitives","nodes","positiveNumber","isNaN","overloadedBoolean","factory","_self","uniqueId","plainTextGrammar","_","objId","deepClone","visited","getLanguage","element","parentElement","setLanguage","classList","currentScript","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plaintext","txt","redef","insert","root","newToken","old","DFS","propertyType","highlightAll","async","highlightAllUnder","container","elements","querySelectorAll","highlightElement","nodeName","insertHighlightedCode","highlightedCode","hasAttribute","setAttribute","Worker","worker","onmessage","evt","data","postMessage","JSON","immediateClose","tokenList","LinkedList","addAfter","head","matchGrammar","tail","toArray","all","callbacks","matchedStr","matchPattern","lookbehindLength","startNode","startPos","rematch","patterns","cause","patternObj","currentNode","reach","removeCount","from","to","matchStr","removeFrom","removeRange","nestedRematch","newNode","count","e","addEventListener","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","WorkerGlobalScope","DefinedInfo","Info","normal","Type","valid","dash","camelcase","datasetToProperty","cap","kebab","datasetToAttribute","$0","merge","xlink","xmlns","aria","create","booleanish","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","caseInsensitiveTransform","acceptcharset","classname","htmlfor","httpequiv","mustUseProperty","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","loading","loop","low","manifest","max","maxLength","media","min","minLength","multiple","muted","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextMenu","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scoped","seamless","selected","shape","size","sizes","slot","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","event","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scrolling","standby","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","caseSensitiveTransform","Schema","checks","checksLength","mask","check","proto","xtend","definitions","powers","pow","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlLang","xmlBase","xmlSpace","xmlnsxlink","xmlnsXLink","whiteSpace","StyleToObject","iterator","hasIterator","len","padRight","padLeft","decodeNamedCharacterReference","characterReference","thing","visit","tree","visitor","reverse","parents","cache","clean","emptyOptions","one","includeImageAlt","includeHtml","blankLine","effects","ok","nok","partial","factorySpace","limit","POSITIVE_INFINITY","enter","consume","exit","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","remove","items","parameters","chunkStart","classifyCharacter","combineExtensions","extensions","syntaxExtension","hook","left","right","constructs","existing","decodeNumericCharacterReference","base","characterEscapeOrReference","decodeString","$1","$2","hex","normalizeIdentifier","resolveAll","events","called","resolve","includes","assign","blocking","fetchPriority","inert","onBeforeMatch","onBeforeToggle","onContextLost","onContextRestored","onScrollEnd","popover","popoverTarget","popoverTargetAction","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","writingSuggestions","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","order","orient","orientation","origin","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","dashes","hastToReact","super","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","seen","domainInside","trail","domainAfter","domainAtPunctuation","sizeOpen","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","attempt","wwwAfter","protocolAutolink","buffer","previousProtocol","protocolPrefixInside","protocol","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","gfmAtext","previousEmail","atext","emailDomain","emailDomainAfter","emailDomainDot","gfmAutolinkLiteral","_balanced","_gfmAutolinkLiteralWalkedInto","sliceSerialize","tokenizePotentialGfmFootnoteCall","gfmFootnotes","labelStart","codePointAt","resolveToPotentialGfmFootnoteCall","_bufferIndex","chunk","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","_container","labelAtMarker","labelInside","labelAfter","labelEscape","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","tokenizer","_open","_close","strikethrough","nextEvents","insideSpan","attentionMarkers","EditMap","editMap","addImpl","sort","a","b","vecs","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","sizeB","bodyRowStart","headRowBefore","lazy","headRowBreak","headRowStart","interrupt","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","disable","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","_align","rowEnd","previousCell","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","_gfmTasklistFirstContentOfListItem","spaceThenNonSpace","gfmTaskListItem","ccount","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transforms","ignored","pairs","toPairs","pairIndex","grandparent","change","matchObject","findAndReplace","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","config","autolinkEmail","autolinkProtocol","gfmAutolinkLiteralToMarkdown","unsafe","parts","isCorrectDomain","trailExec","closingParenIndex","openingParens","closingParens","splitUrl","association","between","state","repeat","eol","patternCompile","_compiled","atBreak","patternInScope","listInScope","safe","positions","infos","numerical","escapeBackslashes","whole","track","lineShift","move","chunks","shift","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","resume","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","footnoteReference","safeOptions","tracker","subexit","footnoteDefinition","indentLines","indexStack","createTracker","child","handle","bulletLastUsed","containerFlow","containerPhrasing","handlers","peek","handleDelete","gfmStrikethroughFromMarkdown","canContainEols","gfmStrikethroughToMarkdown","delete","inlineCode","sequence","defaultStringLength","toAlignment","gfmTableFromMarkdown","setData","tableData","enterCell","tableHeader","codeText","getData","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","paragraph","siblings","firstParaghraph","sibling","gfmTaskListItemToMarkdown","listItem","checkable","checkbox","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","ordered","incrementListMarker","ceil","remarkGfm","resolveTo","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","generated","convert","castFactory","anyFactory","propsFactory","pointStart","point","pointEnd","EXIT","visitParents","subresult","grandparents","toResult"],"sourceRoot":""}