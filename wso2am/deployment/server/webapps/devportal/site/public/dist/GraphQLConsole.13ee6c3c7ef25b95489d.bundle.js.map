{"version":3,"file":"GraphQLConsole.13ee6c3c7ef25b95489d.bundle.js","mappings":"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","sources":["webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GraphQLConsole/QueryComplexityView.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GraphQLConsole/GraphQLUI.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GraphQLConsole/FormDialogBase.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GraphQLConsole/AddEditAdditionalHeaders.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GraphQLConsole/DeleteHeader.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GraphQLConsole/AdditionalHeaders.jsx","webpack://@wso2apim/devportal/./source/src/app/components/Apis/Details/GraphQLConsole/GraphQLConsole.jsx"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Divider from '@mui/material/Divider';\nimport { ApiContext } from '../ApiContext';\nimport Api from '../../../../data/api';\nimport Progress from '../../../Shared/Progress';\n\nconst PREFIX = 'QueryComplexityView';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    title: `${PREFIX}-title`,\n    heading: `${PREFIX}-heading`,\n    column: `${PREFIX}-column`,\n    row: `${PREFIX}-row`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.root}`]: {\n        width: '100%',\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: theme.typography.pxToRem(29),\n        fontWeight: 'bold',\n        flexBasis: '50%',\n        flexShrink: 0,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(2),\n        marginRight: theme.spacing(1),\n    },\n\n    [`& .${classes.heading}`]: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n        flexBasis: '50%',\n        flexShrink: 0,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n\n}));\n\nconst StyledAccordionDetails = styled(AccordionDetails)((\n    {\n        theme,\n    },\n) => ({\n\n    [`& .${classes.column}`]: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n        flexBasis: '33.33%',\n        marginLeft: theme.spacing(1),\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'flex',\n    },\n}));\n\n/**\n * This component retrieve complexity details of API\n * @param {*} props The props passed to the layout\n */\nexport default function QueryComplexityView() {\n    const { api } = useContext(ApiContext);\n    const [typelist, setTypeList] = useState([]);\n    const [state, setState] = useState(null);\n\n    const useThemeDetector = () => {\n        const getCurrentTheme = () => window.matchMedia('(prefers-color-scheme: dark)').matches;\n        const [isDarkTheme, setIsDarkTheme] = useState(getCurrentTheme());\n        const mqListener = ((e) => {\n            setIsDarkTheme(e.matches);\n        });\n\n        useEffect(() => {\n            const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\n            darkThemeMq.addEventListener('change', mqListener);\n            return () => darkThemeMq.removeEventListener('change', mqListener);\n        }, []);\n        return isDarkTheme;\n    };\n\n    const isDarkTheme = useThemeDetector();\n\n    /**\n     * If no complexity is defined for fields,Get default complexity value of 1.\n     */\n    function getDefaultComplexity() {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexityType = apiClient.getGraphqlPoliciesComplexityTypes(apiId);\n        promisedComplexityType\n            .then((res) => {\n                const array = [];\n                res.typeList.map((respond) => {\n                    respond.fieldList.map((ob) => {\n                        const obj = {};\n                        obj.type = respond.type;\n                        obj.field = ob;\n                        obj.complexityValue = 1;\n                        array.push(obj);\n                        return ob;\n                    });\n                    return array;\n                });\n                setState(array);\n                const type = [...new Set(array.map((respond) => respond.type))];\n                setTypeList(type);\n            });\n    }\n\n    useEffect(() => {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexity = apiClient.getGraphqlPoliciesComplexity(apiId);\n        promisedComplexity\n            .then((res) => {\n                setState(res.list);\n                const type = [...new Set(res.list.map((respond) => respond.type))];\n                setTypeList(type);\n                if (res.list.length === 0) {\n                    getDefaultComplexity();\n                }\n            });\n    }, []);\n\n    if (state === null) {\n        return <Progress />;\n    }\n    return (\n        <Root>\n            <div>\n                <div className={classes.title} style={{ display: 'flex', position: 'relative' }}>\n                    <div>\n                        <FormattedMessage\n                            id='Apis.Details.GraphQLConsole.QueryComplexityView.title'\n                            defaultMessage='Custom Complexity Values'\n                        />\n                    </div>\n                </div>\n                <Divider />\n                <div\n                    className={classes.root}\n                    style={{ maxHeight: '704px', overflow: 'scroll' }}\n                >\n                    <div>\n                        {typelist.map((res) => (\n                            <Accordion\n                                sx={{\n                                    backgroundColor: isDarkTheme ? '#212a3b' : '#fff',\n                                    color: isDarkTheme ? '#b7c2d7' : '#3b4b68',\n                                }}\n                            >\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon sx={{ color: isDarkTheme ? '#b7c2d7' : '#3b4b68' }} />}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <Typography className={classes.heading}>\n                                        {res}\n                                    </Typography>\n                                </AccordionSummary>\n                                <Divider />\n                                {state.map((respond) => ((respond.type === res) && (\n                                    <StyledAccordionDetails>\n                                        <div className={classes.row}>\n                                            <div className={classes.column}>\n                                                {respond.field}\n                                                &lsquo;&#58;&rsquo;\n                                            </div>\n                                            <div className={classes.column}>\n                                                {respond.complexityValue}\n                                            </div>\n                                        </div>\n                                    </StyledAccordionDetails>\n                                )))}\n                            </Accordion>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </Root>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, useEffect, useRef, useContext,\n} from 'react';\nimport { styled } from '@mui/material';\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.css';\nimport '@graphiql/plugin-explorer/dist/style.css';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { createGraphiQLFetcher } from '@graphiql/toolkit';\nimport { explorerPlugin } from '@graphiql/plugin-explorer';\nimport QueryStatsIcon from '@mui/icons-material/QueryStats';\nimport { ApiContext } from '../ApiContext';\nimport Api from '../../../../data/api';\nimport QueryComplexityView from './QueryComplexityView';\nimport Progress from '../../../Shared/Progress';\n\nconst { buildSchema } = require('graphql');\n\nconst Root = styled('div')(() => ({\n    '& .graphiql-explorer-root': {\n        height: '716px !important',\n        '&>div:first-child': {\n            overflow: 'auto !important',\n        },\n    },\n    '& .graphiql-container .graphiql-plugin': {\n        overflowY: 'unset',\n    },\n}));\n\n/**\n *\n * @param {*} props\n */\nexport default function GraphQLUI(props) {\n    const {\n        authorizationHeader,\n        URLs,\n        securitySchemeType,\n        accessTokenProvider,\n        additionalHeaders,\n    } = props;\n    const { api } = useContext(ApiContext);\n    const [schema, setSchema] = useState(null);\n    const [query, setQuery] = useState('');\n    const graphiqlEl = useRef(null);\n\n    useEffect(() => {\n        const apiID = api.id;\n        const apiClient = new Api();\n        const promiseGraphQL = apiClient.getGraphQLSchemaByAPIId(apiID);\n        promiseGraphQL\n            .then((res) => {\n                const graphqlSchemaObj = buildSchema(res.data);\n                setSchema(graphqlSchemaObj);\n            });\n    }, []);\n\n    /**\n     * Get subscription fetcher.\n     * @param {string} wsUrl subscription websocket URL\n     * @return {string} The subscription fetcher\n     */\n    function queryFetcher(wsUrl) {\n        let token;\n        if (api.advertiseInfo && api.advertiseInfo.advertised) {\n            token = accessTokenProvider();\n        } else if (securitySchemeType === 'API-KEY') {\n            token = accessTokenProvider();\n        } else if (securitySchemeType === 'BASIC') {\n            token = 'Basic ' + accessTokenProvider();\n        } else {\n            token = 'Bearer ' + accessTokenProvider();\n        }\n\n        const headers = {\n            [authorizationHeader]: token,\n        };\n\n        additionalHeaders.forEach((header) => {\n            headers[header.name] = header.value;\n        });\n\n        return createGraphiQLFetcher({\n            headers,\n            url: URLs ? URLs.https : null,\n            subscriptionUrl: wsUrl === null || wsUrl === undefined ? null\n                : wsUrl + '?access_token=' + accessTokenProvider(),\n        });\n    }\n\n    const explorer = explorerPlugin();\n\n    const queryComplexityAnalyzer = {\n        title: 'Query Complexity Analyzer',\n        icon: () => <QueryStatsIcon />,\n        content: () => <QueryComplexityView />,\n    };\n\n    if (schema === null) {\n        return <Progress />;\n    } else {\n        return (\n            <>\n                <Root>\n                    <Box display='flex'>\n                        <Box display='flex' width={1}>\n                            <Box display='flex' height='800px' flexGrow={1}>\n                                <GraphiQL\n                                    ref={graphiqlEl}\n                                    fetcher={(queryFetcher(URLs && URLs.wss))}\n                                    schema={schema}\n                                    query={query}\n                                    onEditQuery={setQuery}\n                                    plugins={[explorer, queryComplexityAnalyzer]}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Root>\n            </>\n        );\n    }\n}\n\nGraphQLUI.propTypes = {\n    classes: PropTypes.shape({\n        paper: PropTypes.string.isRequired,\n    }).isRequired,\n    additionalHeaders: PropTypes.shape({\n        array: PropTypes.arrayOf(PropTypes.element).isRequired,\n    }).isRequired,\n};\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage } from 'react-intl';\n/**\n * Render base for dialogs.\n * @returns {JSX} Header AppBar components.\n */\nfunction FormDialogBase({\n    title,\n    children,\n    icon,\n    triggerButtonText,\n    saveButtonText,\n    formSaveCallback,\n    dialogOpenCallback,\n    triggerIconProps,\n}) {\n    const [open, setOpen] = React.useState(false);\n    const [saving, setSaving] = useState(false);\n\n    const handleClickOpen = () => {\n        dialogOpenCallback();\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const saveTriggerd = () => {\n        const savedPromise = formSaveCallback();\n        if (typeof savedPromise === 'function') {\n            savedPromise(setOpen);\n        } else if (savedPromise) {\n            setSaving(true);\n            savedPromise.then((data) => {\n                Alert.success(data);\n            }).catch((e) => {\n                Alert.error(e);\n            }).finally(() => {\n                setSaving(false);\n                handleClose();\n            });\n        }\n    };\n\n    return (\n        <>\n            {icon && (\n                <IconButton {...triggerIconProps} onClick={handleClickOpen} size='large'>\n                    {icon}\n                </IconButton>\n            )}\n            {triggerButtonText && (\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                <Button onClick={handleClickOpen}>\n                    {triggerButtonText}\n                </Button>\n            )}\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{title}</DialogTitle>\n                <DialogContent>\n                    {children}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>\n                        <FormattedMessage\n                            id='Apis.Details.Graphql.Console.form.cancel.btn'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button onClick={saveTriggerd} color='primary' variant='contained' disabled={saving}>\n                        {saving ? (<CircularProgress size={16} />) : (<>{saveButtonText}</>)}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nFormDialogBase.defaultProps = {\n    dialogOpenCallback: () => {},\n    triggerButtonProps: {\n        variant: 'contained',\n        color: 'primary',\n    },\n    triggerIconProps: {\n        color: 'primary',\n        component: 'span',\n    },\n};\n\nFormDialogBase.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n    icon: PropTypes.element.isRequired,\n    triggerButtonText: PropTypes.string.isRequired,\n    saveButtonText: PropTypes.string.isRequired,\n    triggerButtonProps: PropTypes.shape({}),\n    triggerIconProps: PropTypes.shape({}),\n    formSaveCallback: PropTypes.func.isRequired,\n    dialogOpenCallback: PropTypes.func,\n};\n\nexport default FormDialogBase;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport FormDialogBase from 'AppComponents/Apis/Details/GraphQLConsole/FormDialogBase';\nimport TextField from '@mui/material/TextField';\nimport CreateIcon from '@mui/icons-material/Create';\nimport Typography from '@mui/material/Typography';\n\nconst PREFIX = 'AddEditAdditionalHeaders';\n\nconst classes = {\n    error: `${PREFIX}-error`,\n};\n\nconst StyledFormDialogBase = styled(FormDialogBase)((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.error}`]: {\n        color: theme.palette.error.dark,\n    },\n}));\n\n/**\n * Render delete dialog box.\n * @param {JSON} props component props.\n * @returns {JSX} Loading animation.\n */\nfunction AddEditAdditionalHeaders(props) {\n    const intl = useIntl();\n    const { callBack, item } = props;\n    let initName = '';\n    let initValue = '';\n\n    if (item != null) {\n        initName = item.name;\n        initValue = item.value;\n    }\n\n    const [name, setName] = useState(initName);\n    const [value, setValue] = useState(initValue);\n    const [validating, setValidating] = useState(false);\n    const onChange = (e) => {\n        const { target: { name: field, value: fieldValue } } = e;\n        switch (field) {\n            case 'name':\n                setName(fieldValue);\n                break;\n            case 'value':\n                setValue(fieldValue);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const hasErrors = (fieldName, fieldValue, validatingActive) => {\n        let error = false;\n        if (!validatingActive) {\n            return (false);\n        }\n        switch (fieldName) {\n            case 'name':\n                error = fieldValue === '' ? fieldName + ' is Empty' : false;\n                break;\n            case 'value':\n                error = fieldValue === '' ? fieldName + ' is Empty' : false;\n                break;\n            default:\n                break;\n        }\n        return error;\n    };\n    const formHasErrors = (validatingActive = false) => {\n        if (hasErrors('name', name, validatingActive)\n        || hasErrors('value', value, validatingActive)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n    const formSaveCallback = () => {\n        setValidating(true);\n        if (!formHasErrors(true)) {\n            return ((setOpen) => {\n                callBack({ name, value }, item);\n                setOpen(false);\n            });\n        }\n        return false;\n    };\n    return (\n        <StyledFormDialogBase\n            title={item === undefined\n                ? `${intl.formatMessage({\n                    id: 'GraphQL.Devportal.Tryout.Additional.header.add.new',\n                    defaultMessage: 'Add New ',\n                })}`\n                : `${intl.formatMessage({\n                    id: 'GraphQL.Devportal.Tryout.Additional.header.edit',\n                    defaultMessage: 'Edit ',\n                })}`}\n            saveButtonText={intl.formatMessage({\n                id: 'GraphQL.Devportal.Tryout.Additional.header.dialog.btn.save',\n                defaultMessage: 'Save',\n            })}\n            triggerButtonText={item ? null : intl.formatMessage({\n                id: 'GraphQL.Devportal.Tryout.Additional.header.dialog.trigger.add',\n                defaultMessage: 'Add',\n            })}\n            icon={item ? <CreateIcon /> : null}\n            triggerButtonProps={{\n                color: 'default',\n                variant: 'contained',\n                size: 'small',\n            }}\n            formSaveCallback={formSaveCallback}\n        >\n            <DialogContentText>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='GraphQL.Devportal.Tryout.Addtional.headers.help'\n                        defaultMessage='This configuration is used to add additional Headers.'\n                    />\n                </Typography>\n            </DialogContentText>\n            <TextField\n                margin='dense'\n                name='name'\n                value={item === undefined ? null : name}\n                onChange={onChange}\n                label={(\n                    <span>\n                        <FormattedMessage\n                            id='GraphQL.Devportal.Tryout.Additional.header.form.name'\n                            defaultMessage='Header Name'\n                        />\n                        <span className={classes.error}>*</span>\n                    </span>\n                )}\n                fullWidth\n                multiline\n                helperText={hasErrors('name', name, validating) || intl.formatMessage({\n                    id: 'GraphQL.Devportal.Tryout.Additional.header.form.name.help',\n                    defaultMessage: 'Provide Name',\n                })}\n                variant='outlined'\n                error={hasErrors('name', name, validating)}\n            />\n            <TextField\n                margin='dense'\n                name='value'\n                value={item === undefined ? null : value}\n                onChange={onChange}\n                label={(\n                    <span>\n                        <FormattedMessage\n                            id='GraphQL.Devportal.Tryout.Additional.header.form.value'\n                            defaultMessage='Header Value'\n                        />\n\n                        <span className={classes.error}>*</span>\n                    </span>\n                )}\n                fullWidth\n                multiline\n                helperText={hasErrors('value', value, validating) || intl.formatMessage({\n                    id: 'GraphQL.Devportal.Tryout.Additional.header.form.value.help',\n                    defaultMessage: 'Provide Value',\n                })}\n                variant='outlined'\n                error={hasErrors('value', value, validating)}\n            />\n        </StyledFormDialogBase>\n    );\n}\nAddEditAdditionalHeaders.propTypes = {\n    row: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n    }).isRequired,\n};\nexport default AddEditAdditionalHeaders;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FormDialogBase from 'AppComponents/Apis/Details/GraphQLConsole/FormDialogBase';\n/**\n * Render delete dialog box.\n * @param {JSON} props component props.\n * @returns {JSX} Loading animation.\n */\nfunction DeleteHeader({ item, callBack }) {\n    const formSaveCallback = () => {\n        return (setOpen) => {\n            callBack(item);\n            setOpen(false);\n        };\n    };\n    const intl = useIntl();\n\n    return (\n        <FormDialogBase\n            title={intl.formatMessage({\n                id: 'Apis.Details.Graphql.console.delete.title',\n                defaultMessage: 'Delete Additional Header',\n            })}\n            saveButtonText={intl.formatMessage({\n                id: 'Apis.Details.Graphql.console.delete.btn',\n                defaultMessage: 'Delete',\n            })}\n            icon={<DeleteIcon />}\n            formSaveCallback={formSaveCallback}\n        >\n            <DialogContentText>\n                {item.name}\n                <FormattedMessage\n                    id='Throttling.Advanced.Delete.will.be.deleted'\n                    defaultMessage=' will be deleted.'\n                />\n\n            </DialogContentText>\n        </FormDialogBase>\n    );\n}\nDeleteHeader.propTypes = {\n    row: PropTypes.shape({}).isRequired,\n    callBack: PropTypes.func.isRequired,\n    item: PropTypes.shape({\n        name: PropTypes.shape({}).isRequired,\n    }).isRequired,\n};\nexport default DeleteHeader;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport cloneDeep from 'lodash.clonedeep';\nimport AddEditAdditionalHeaders from 'AppComponents/Apis/Details/GraphQLConsole/AddEditAdditionalHeaders';\nimport DeleteHeader from 'AppComponents/Apis/Details/GraphQLConsole/DeleteHeader';\nimport Divider from '@mui/material/Divider';\n\nconst PREFIX = 'AdditionalHeaders';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    heading: `${PREFIX}-heading`,\n    secondaryHeading: `${PREFIX}-secondaryHeading`,\n    table: `${PREFIX}-table`,\n    expandContentRoot: `${PREFIX}-expandContentRoot`,\n    subsubTitle: `${PREFIX}-subsubTitle`,\n    alert: `${PREFIX}-alert`,\n    hr: `${PREFIX}-hr`,\n    descriptionBox: `${PREFIX}-descriptionBox`,\n};\n\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`&.${classes.root}`]: {\n        width: '100%',\n        marginBottom: 20,\n    },\n\n    [`& .${classes.heading}`]: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        flex: 1,\n        alignItems: 'center',\n    },\n\n    [`& .${classes.secondaryHeading}`]: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.table}`]: {\n        marginBottom: 40,\n        background: '#efefef',\n        '& th': {\n            background: '#ccc',\n        },\n    },\n\n    [`& .${classes.expandContentRoot}`]: {\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.subsubTitle}`]: {\n        fontSize: '0.81rem',\n    },\n\n    [`& .${classes.alert}`]: {\n        flex: 1,\n    },\n\n    [`& .${classes.hr}`]: {\n        border: 'solid 1px #efefef',\n        width: '100%',\n    },\n\n    [`& .${classes.descriptionBox}`]: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * Create UUID\n * @returns {string} random uuid string.\n */\nfunction getUUID() {\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\n}\n/**\n * Render a list\n * @returns {JSX} Header AppBar components.\n * @param {JSON} props Provides props from parent\n */\nfunction AdditionalHeaders(props) {\n    const { additionalHeaders, setAdditionalHeaders } = props;\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const getNewItem = () => {\n        return ({\n            id: '',\n            name: '',\n            value: '',\n        });\n    };\n\n    const addItem = (item) => {\n        const { name, value } = item;\n        const newItem = getNewItem();\n        newItem.id = getUUID();\n        newItem.name = name;\n        newItem.value = value;\n        const updatedAdditionalHeaders = cloneDeep(additionalHeaders);\n        updatedAdditionalHeaders.push(newItem);\n        setAdditionalHeaders(updatedAdditionalHeaders);\n    };\n\n    const deleteItem = (item) => {\n        const updatedAdditionalHeaders = cloneDeep(additionalHeaders);\n        for (let i = 0; i < updatedAdditionalHeaders.length; i++) {\n            if (updatedAdditionalHeaders[i].id === item.id) {\n                updatedAdditionalHeaders.splice(i, 1);\n            }\n        }\n        setAdditionalHeaders(updatedAdditionalHeaders);\n    };\n\n    const updateItem = (item, originalItem) => {\n        const { name, value } = item;\n        const updatedAdditionalHeaders = cloneDeep(additionalHeaders);\n        for (let i = 0; i < updatedAdditionalHeaders.length; i++) {\n            if (updatedAdditionalHeaders[i].id === originalItem.id) {\n                updatedAdditionalHeaders[i].name = name;\n                updatedAdditionalHeaders[i].value = value;\n            }\n        }\n        setAdditionalHeaders(updatedAdditionalHeaders);\n    };\n\n    return (\n        <Root className={classes.root}>\n            <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                >\n                    <div className={classes.heading}>\n                        {!expanded && (\n                            <Typography variant='caption'>\n                                <FormattedMessage\n                                    id='GraphQL.Devportal.Tryout.Addtional.headers.title.text'\n                                    defaultMessage='Add additional headers'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                    {!expanded && (\n                        <Typography className={classes.secondaryHeading}>\n                            <FormattedMessage\n                                id='GraphQL.Devportal.Tryout.Addtional.headers.expand.group'\n                                defaultMessage='Expand to edit'\n                            />\n                        </Typography>\n                    )}\n                    {expanded && (\n                        <Typography className={classes.secondaryHeading}>\n                            <FormattedMessage\n                                id='GraphQL.Devportal.Tryout.Addtional.headers.hide.group'\n                                defaultMessage='Hide group'\n                            />\n                        </Typography>\n                    )}\n                </AccordionSummary>\n                <AccordionDetails classes={{ root: classes.expandContentRoot }}>\n                    <>\n                        <Divider sx={{ opacity: 0.2 }} className={classes.customDivider} />\n                        <Box component='div' marginLeft={1} display='flex' alignItems='center'>\n                            <Box flex={1}>\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='GraphQL.Devportal.Tryout.Addtional.headers.help'\n                                        defaultMessage='This configuration is used to add additional Headers.'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box component='span' m={1}>\n                                <AddEditAdditionalHeaders\n                                    callBack={addItem}\n                                />\n\n                            </Box>\n                        </Box>\n\n                        {additionalHeaders && (\n                            <Box component='div' marginLeft={1}>\n                                <Table className={classes.table} size='small' aria-label='a dense table'>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>\n                                                <>\n                                                    <FormattedMessage\n                                                        id='GraphQL.Devportal.Tryout.Additional.headers.header.name'\n                                                        defaultMessage='Header Name'\n                                                    />\n                                                </>\n                                            </TableCell>\n                                            <TableCell>\n                                                <>\n                                                    <FormattedMessage\n                                                        id='GraphQL.Devportal.Tryout.Additional.headers.header.value'\n                                                        defaultMessage='Header Value'\n                                                    />\n                                                </>\n                                            </TableCell>\n                                            <TableCell />\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {additionalHeaders.map((item) => (\n                                            <TableRow key={item.headerName}>\n                                                <TableCell component='td' scope='row'>\n                                                    {item.name}\n                                                </TableCell>\n                                                <TableCell component='td' scope='row'>\n                                                    {item.value}\n                                                </TableCell>\n                                                <TableCell width={100} className={classes.actionColumn}>\n                                                    <Box display='flex'>\n                                                        <AddEditAdditionalHeaders\n                                                            item={item}\n                                                            callBack={updateItem}\n                                                        />\n                                                        <DeleteHeader\n                                                            item={item}\n                                                            callBack={deleteItem}\n                                                        />\n                                                    </Box>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        )}\n                    </>\n                    <Divider />\n                </AccordionDetails>\n            </Accordion>\n        </Root>\n    );\n}\nAdditionalHeaders.propTypes = {\n    dataRow: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n    }).isRequired,\n    additionalHeaders: PropTypes.shape({\n        array: PropTypes.arrayOf(PropTypes.element).isRequired,\n    }).isRequired,\n};\nexport default AdditionalHeaders;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\nimport Icon from '@mui/material/Icon';\nimport Box from '@mui/material/Box';\nimport GraphQLUI from './GraphQLUI';\nimport TryOutController from '../../../Shared/ApiTryOut/TryOutController';\nimport { ApiContext } from '../ApiContext';\nimport Api from '../../../../data/api';\nimport Progress from '../../../Shared/Progress';\nimport AdditionalHeaders from './AdditionalHeaders';\n\nconst PREFIX = 'GraphQLConsole';\n\nconst classes = {\n    buttonIcon: `${PREFIX}-buttonIcon`,\n    paper: `${PREFIX}-paper`,\n    grid: `${PREFIX}-grid`,\n    userNotificationPaper: `${PREFIX}-userNotificationPaper`,\n    titleSub: `${PREFIX}-titleSub`,\n};\n\n// TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.\nconst Root = styled('div')((\n    {\n        theme,\n    },\n) => ({\n    [`& .${classes.buttonIcon}`]: {\n        marginRight: 10,\n    },\n\n    [`& .${classes.paper}`]: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.grid}`]: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n        paddingRight: theme.spacing(2),\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.userNotificationPaper}`]: {\n        padding: theme.spacing(2),\n    },\n\n    [`& .${classes.titleSub}`]: {\n        marginLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n}));\n\nexport default function GraphQLConsole() {\n    const { api } = useContext(ApiContext);\n    const environmentObject = api.endpointURLs;\n    const [URLs, setURLs] = useState(environmentObject.length > 0 ? environmentObject[0].URLs : null);\n    const [securitySchemeType, setSecurityScheme] = useState('OAUTH');\n    const [notFound, setNotFound] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [selectedEnvironment, setSelectedEnvironment] = useState();\n    const [environments, setEnvironments] = useState();\n    const [scopes, setScopes] = useState([]);\n    const [productionAccessToken, setProductionAccessToken] = useState();\n    const [sandboxAccessToken, setSandboxAccessToken] = useState();\n    const [selectedKeyType, setSelectedKey] = useState('PRODUCTION');\n    const [sandboxApiKey, setSandboxApiKey] = useState('');\n    const [productionApiKey, setProductionApiKey] = useState('');\n    const [advAuthHeader, setAdvAuthHeader] = useState('Authorization');\n    const [advAuthHeaderValue, setAdvAuthHeaderValue] = useState('');\n    const [selectedEndpoint, setSelectedEndpoint] = useState('PRODUCTION');\n    const [keys, setKeys] = useState([]);\n    const [additionalHeaders, setAdditionalHeaders] = useState([]);\n    const user = AuthManager.getUser();\n    const isAdvertised = api.advertiseInfo && api.advertiseInfo.advertised;\n\n    useEffect(() => {\n        const apiID = api.id;\n        const apiClient = new Api();\n        const promiseAPI = apiClient.getAPIById(apiID);\n\n        promiseAPI\n            .then((apiResponse) => {\n                const apiData = apiResponse.obj;\n                if (apiData.endpointURLs) {\n                    const environment = apiData.endpointURLs.map((endpoint) => {\n                        return { name: endpoint.environmentName, displayName: endpoint.environmentDisplayName };\n                    });\n                    setEnvironments(environment);\n                }\n                if (apiData.scopes) {\n                    const scopeList = apiData.scopes.map((scope) => { return scope.name; });\n                    setScopes(scopeList);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    /**\n     * Load the access token for given key type\n     */\n    function updateAccessToken() {\n        let accessToken;\n        if (keys.get(selectedKeyType)) {\n            ({ accessToken } = keys.get(selectedKeyType).token);\n        }\n        if (selectedKeyType === 'PRODUCTION') {\n            setProductionAccessToken(accessToken);\n        } else {\n            setSandboxAccessToken(accessToken);\n        }\n    }\n\n    /**\n     * Generate the URLs object for third party APIs\n     * @param url endpoint URL\n     * @returns {{wss: null, http: null, https: null, ws: null}}\n     */\n    function generateUrls(url) {\n        const urlJson = {\n            http: null,\n            https: null,\n            ws: null,\n            wss: null,\n        };\n        const [protocol] = url.split('://');\n        if (protocol === 'http' || protocol === 'https' || protocol === 'ws' || protocol === 'wss') {\n            urlJson[protocol] = url;\n        }\n        return urlJson;\n    }\n\n    /**\n     * get the URLs object for GraphQL APIs\n     * @returns {*}\n     */\n    function getURLs() {\n        if (api.advertiseInfo && api.advertiseInfo.advertised) {\n            if (selectedEndpoint === 'PRODUCTION') {\n                return generateUrls(api.advertiseInfo.apiExternalProductionEndpoint);\n            } else if (selectedEndpoint === 'SANDBOX') {\n                return generateUrls(api.advertiseInfo.apiExternalSandboxEndpoint);\n            }\n        }\n        return URLs;\n    }\n\n    /**\n     * set Password\n     * @param {*} selectedKey\n     * @param {*} isUpdateToken\n     */\n    function setSelectedKeyType(selectedKey, isUpdateToken) {\n        if (isUpdateToken && !isAdvertised) {\n            setSelectedKey(selectedKey, updateAccessToken);\n        } else {\n            setSelectedKey(selectedKey);\n        }\n    }\n\n    function accessTokenProvider() {\n        if (isAdvertised) {\n            return advAuthHeaderValue;\n        }\n        if (securitySchemeType === 'BASIC') {\n            const credentials = username + ':' + password;\n            return btoa(credentials);\n        }\n        if (securitySchemeType === 'API-KEY') {\n            if (selectedKeyType === 'PRODUCTION') {\n                return productionApiKey;\n            } else {\n                return sandboxApiKey;\n            }\n        } else if (selectedKeyType === 'PRODUCTION') {\n            return productionAccessToken;\n        } else {\n            return sandboxAccessToken;\n        }\n    }\n\n    if (api == null) {\n        return <Progress />;\n    }\n    if (notFound) {\n        return 'API Not found !';\n    }\n    let isApiKeyEnabled = false;\n\n    let authorizationHeader = api.authorizationHeader ? api.authorizationHeader : 'Authorization';\n\n    if (api && api.securityScheme) {\n        isApiKeyEnabled = api.securityScheme.includes('api_key');\n        if (isApiKeyEnabled && securitySchemeType === 'API-KEY') {\n            authorizationHeader = api.apiKeyHeader ? api.apiKeyHeader : 'ApiKey';\n        }\n    }\n\n    if (isAdvertised) {\n        authorizationHeader = advAuthHeader;\n    }\n\n    return (\n        <Root>\n            <Typography variant='h4' className={classes.titleSub}>\n                <FormattedMessage id='Apis.Details.GraphQLConsole.GraphQLConsole.title' defaultMessage='Try Out' />\n            </Typography>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    {!user && !isAdvertised && (\n                        <Grid item md={6}>\n                            <Paper className={classes.userNotificationPaper}>\n                                <Typography variant='h5' component='h3'>\n                                    <Icon>info</Icon>\n                                    {' '}\n                                    <FormattedMessage id='notice' defaultMessage='Notice' />\n                                </Typography>\n                                <Typography component='p'>\n                                    <FormattedMessage\n                                        id='api.console.require.access.token'\n                                        defaultMessage={'You need an access token to try the API. Please log '\n                                            + 'in and subscribe to the API to generate an access token. If you already '\n                                            + 'have an access token, please provide it below.'}\n                                    />\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    )}\n                </Grid>\n                <Grid container className={classes.grid}>\n                    <TryOutController\n                        setSecurityScheme={setSecurityScheme}\n                        securitySchemeType={securitySchemeType}\n                        setSelectedEnvironment={setSelectedEnvironment}\n                        selectedEnvironment={selectedEnvironment}\n                        productionAccessToken={productionAccessToken}\n                        setProductionAccessToken={setProductionAccessToken}\n                        sandboxAccessToken={sandboxAccessToken}\n                        setSandboxAccessToken={setSandboxAccessToken}\n                        environments={environments}\n                        scopes={scopes}\n                        setUsername={setUsername}\n                        setPassword={setPassword}\n                        username={username}\n                        password={password}\n                        setSelectedKeyType={setSelectedKeyType}\n                        selectedKeyType={selectedKeyType}\n                        setKeys={setKeys}\n                        setURLs={setURLs}\n                        setProductionApiKey={setProductionApiKey}\n                        setSandboxApiKey={setSandboxApiKey}\n                        productionApiKey={productionApiKey}\n                        sandboxApiKey={sandboxApiKey}\n                        environmentObject={environmentObject}\n                        setAdvAuthHeader={setAdvAuthHeader}\n                        setAdvAuthHeaderValue={setAdvAuthHeaderValue}\n                        advAuthHeader={advAuthHeader}\n                        advAuthHeaderValue={advAuthHeaderValue}\n                        setSelectedEndpoint={setSelectedEndpoint}\n                        selectedEndpoint={selectedEndpoint}\n                        api={api}\n                        URLs={URLs}\n                    />\n                </Grid>\n                <Box display='flex' justifyContent='center'>\n                    <Box\n                        width='50%'\n                        display='flex'\n                        flexDirection='column'\n                    >\n                        <Box ml={-5} display='flex'>\n                            <Typography variant='h5' component='h3' color='textPrimary'>\n                                <FormattedMessage\n                                    id='api.console.gql.additional.headers'\n                                    defaultMessage='Additional Headers'\n                                />\n                            </Typography>\n                        </Box>\n                    </Box>\n                </Box>\n                <Grid container className={classes.grid}>\n                    <Grid item md={6}>\n                        <AdditionalHeaders\n                            setAdditionalHeaders={setAdditionalHeaders}\n                            additionalHeaders={additionalHeaders}\n                        />\n                    </Grid>\n                </Grid>\n            </Paper>\n            <Paper className={classes.paper}>\n                <GraphQLUI\n                    authorizationHeader={authorizationHeader}\n                    URLs={getURLs()}\n                    securitySchemeType={securitySchemeType}\n                    accessTokenProvider={accessTokenProvider}\n                    additionalHeaders={additionalHeaders}\n                />\n            </Paper>\n        </Root>\n    );\n}\n\nGraphQLConsole.propTypes = {\n    classes: PropTypes.shape({\n        paper: PropTypes.string.isRequired,\n        titleSub: PropTypes.string.isRequired,\n        root: PropTypes.string.isRequired,\n    }).isRequired,\n};\n"],"names":["PREFIX","classes","root","title","heading","column","row","Root","styled","_ref","theme","width","fontSize","typography","pxToRem","fontWeight","flexBasis","flexShrink","marginTop","spacing","marginBottom","marginRight","fontWeightRegular","StyledAccordionDetails","AccordionDetails","_ref2","marginLeft","display","QueryComplexityView","api","useContext","ApiContext","typelist","setTypeList","useState","state","setState","isDarkTheme","useThemeDetector","setIsDarkTheme","window","matchMedia","matches","mqListener","e","useEffect","darkThemeMq","addEventListener","removeEventListener","apiId","id","Api","getGraphqlPoliciesComplexity","then","res","list","type","Set","map","respond","length","getGraphqlPoliciesComplexityTypes","array","typeList","fieldList","ob","obj","field","complexityValue","push","getDefaultComplexity","React","Progress","className","style","position","FormattedMessage","defaultMessage","Divider","maxHeight","overflow","Accordion","sx","backgroundColor","color","AccordionSummary","expandIcon","ExpandMoreIcon","Typography","buildSchema","require","height","overflowY","GraphQLUI","props","authorizationHeader","URLs","securitySchemeType","accessTokenProvider","additionalHeaders","schema","setSchema","query","setQuery","graphiqlEl","useRef","apiID","getGraphQLSchemaByAPIId","graphqlSchemaObj","data","explorer","explorerPlugin","queryComplexityAnalyzer","icon","QueryStatsIcon","content","Box","flexGrow","GraphiQL","ref","fetcher","wsUrl","token","advertiseInfo","advertised","headers","forEach","header","name","value","createGraphiQLFetcher","url","https","subscriptionUrl","queryFetcher","wss","onEditQuery","plugins","propTypes","PropTypes","paper","isRequired","FormDialogBase","children","triggerButtonText","saveButtonText","formSaveCallback","dialogOpenCallback","triggerIconProps","open","setOpen","saving","setSaving","handleClickOpen","handleClose","IconButton","_extends","onClick","size","Button","Dialog","onClose","DialogTitle","DialogContent","DialogActions","saveTriggerd","savedPromise","Alert","success","catch","error","finally","variant","disabled","CircularProgress","defaultProps","triggerButtonProps","component","StyledFormDialogBase","palette","dark","AddEditAdditionalHeaders","intl","useIntl","callBack","item","initName","initValue","setName","setValue","validating","setValidating","onChange","target","fieldValue","hasErrors","fieldName","validatingActive","undefined","formatMessage","CreateIcon","arguments","formHasErrors","DialogContentText","TextField","margin","label","fullWidth","multiline","helperText","DeleteHeader","DeleteIcon","secondaryHeading","table","expandContentRoot","subsubTitle","alert","hr","descriptionBox","flex","alignItems","text","secondary","background","flexDirection","border","AdditionalHeaders","setAdditionalHeaders","expanded","setExpanded","deleteItem","updatedAdditionalHeaders","cloneDeep","i","splice","updateItem","originalItem","event","isExpanded","opacity","customDivider","m","newItem","Math","random","toString","substring","Date","now","Table","TableHead","TableRow","TableCell","TableBody","key","headerName","scope","actionColumn","dataRow","buttonIcon","grid","userNotificationPaper","titleSub","padding","paddingRight","justifyContent","paddingTop","paddingBottom","GraphQLConsole","environmentObject","endpointURLs","setURLs","setSecurityScheme","notFound","setNotFound","username","setUsername","password","setPassword","selectedEnvironment","setSelectedEnvironment","environments","setEnvironments","scopes","setScopes","productionAccessToken","setProductionAccessToken","sandboxAccessToken","setSandboxAccessToken","selectedKeyType","setSelectedKey","sandboxApiKey","setSandboxApiKey","productionApiKey","setProductionApiKey","advAuthHeader","setAdvAuthHeader","advAuthHeaderValue","setAdvAuthHeaderValue","selectedEndpoint","setSelectedEndpoint","keys","setKeys","user","AuthManager","getUser","isAdvertised","updateAccessToken","accessToken","get","generateUrls","urlJson","http","ws","protocol","split","getAPIById","apiResponse","apiData","environment","endpoint","environmentName","displayName","environmentDisplayName","scopeList","status","isApiKeyEnabled","securityScheme","includes","apiKeyHeader","Paper","Grid","container","md","Icon","TryOutController","setSelectedKeyType","selectedKey","isUpdateToken","ml","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","getURLs","btoa"],"sourceRoot":""}