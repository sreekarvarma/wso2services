{"version":3,"file":"ListingTextEditor.da34e7ec1da653c6e64c.bundle.js","mappings":"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","sources":["webpack://@wso2apim/publisher/./source/src/app/components/Apis/Details/Documents/TextEditor.jsx"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Slide from '@mui/material/Slide';\nimport Icon from '@mui/material/Icon';\nimport Paper from '@mui/material/Paper';\nimport { EditorState, convertToRaw, ContentState, convertFromHTML } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst PREFIX = 'TextEditor';\n\nconst classes = {\n    appBar: `${PREFIX}-appBar`,\n    flex: `${PREFIX}-flex`,\n    popupHeader: `${PREFIX}-popupHeader`,\n    splitWrapper: `${PREFIX}-splitWrapper`,\n    docName: `${PREFIX}-docName`,\n    button: `${PREFIX}-button`\n};\n\nconst StyledDialog = styled(Dialog)({\n    [`& .${classes.appBar}`]: {\n        position: 'relative',\n    },\n    [`& .${classes.flex}`]: {\n        flex: 1,\n    },\n    [`& .${classes.popupHeader}`]: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    [`& .${classes.splitWrapper}`]: {\n        padding: 0,\n        height: 'calc(100vh - 64px)',\n        overflow: 'hidden',\n    },\n    [`& .${classes.docName}`]: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    [`& .${classes.button}`]: {\n        height: 30,\n        marginLeft: 30,\n    },\n});\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction TextEditor(props) {\n    const {\n        intl, apiType, showAtOnce, history, docId,\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [open, setOpen] = useState(showAtOnce);\n\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    const onEditorStateChange = (newEditorState) => {\n        setEditorState(newEditorState);\n    };\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const addContentToDoc = () => {\n        const restAPI = isAPIProduct ? new APIProduct() : new Api();\n        setIsUpdating(true);\n        const contentToSave = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n        const docPromise = restAPI.addInlineContentToDocument(api.id, docId, 'INLINE', contentToSave);\n        docPromise\n            .then((response) => {\n                Alert.info(`${response.obj.name} ${intl.formatMessage({\n                    id: 'Apis.Details.Documents.TextEditor.update.success.message',\n                    defaultMessage: 'updated successfully.',\n                })}`);\n                toggleOpen();\n                setIsUpdating(false);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(`${error} ${intl.formatMessage({\n                    id: 'Apis.Details.Documents.TextEditor.update.error.message',\n                    defaultMessage: 'update failed.',\n                })}`);\n                setIsUpdating(false);\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = isAPIProduct ? new APIProduct() : new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, docId);\n        docPromise\n            .then((doc) => {\n                const contentBlock = htmlToDraft(doc.text);\n                if (contentBlock) {\n                    const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n                    const editorState = EditorState.createWithContent(contentState);\n                    setEditorState(editorState);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const {  docName } = props;\n    return (\n        <div>\n            <Button\n                onClick={toggleOpen} disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || api.isRevision}\n                aria-label={'Edit Content of ' + docName}\n            >\n                <Icon>description</Icon>\n                <FormattedMessage id='Apis.Details.Documents.TextEditor.edit.content' defaultMessage='Edit Content' />\n            </Button>\n            <StyledDialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close' size='large'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.edit.content.of'\n                            defaultMessage='Edit Content of'\n                        />{' '}\n                        \"{docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' disabled={isUpdating} color='primary' onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.update.content.button'\n                            defaultMessage='Update Content'\n                        />\n                        {isUpdating && <CircularProgress size={24} />}\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Editor\n                        editorState={editorState}\n                        wrapperClassName='draftjs-wrapper'\n                        editorClassName='draftjs-editor'\n                        editorStyle={{ height: 'calc(100vh - 128px)', overflowY: 'auto' }}\n                        onEditorStateChange={onEditorStateChange}\n                    />\n                </div>\n            </StyledDialog>\n        </div>\n    );\n}\n\nTextEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    docId: PropTypes.string.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    showAtOnce: PropTypes.bool.isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withRouter((TextEditor)));\n"],"names":["PREFIX","classes","appBar","concat","flex","popupHeader","splitWrapper","docName","button","StyledDialog","styled","Dialog","_defineProperty","position","display","flexDirection","alignItems","padding","height","overflow","marginLeft","Transition","props","React","Slide","_extends","direction","TextEditor","_this","intl","showAtOnce","apiType","history","docId","_useContext","useContext","APIContext","api","isAPIProduct","_useState2","_slicedToArray","useState","open","setOpen","_useState4","EditorState","createEmpty","editorState","setEditorState","_useState6","isUpdating","setIsUpdating","toggleOpen","updateDoc","listingPath","id","push","APIProduct","Api","getInlineContentOfDocument","then","doc","contentBlock","htmlToDraft","text","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","catch","error","status","setState","apiNotFound","Button","onClick","disabled","isRestricted","isRevision","Icon","FormattedMessage","defaultMessage","fullScreen","onClose","TransitionComponent","Paper","square","className","IconButton","color","size","Typography","variant","restAPI","contentToSave","draftToHtml","convertToRaw","getCurrentContent","addInlineContentToDocument","response","Alert","info","obj","name","formatMessage","CircularProgress","Editor","wrapperClassName","editorClassName","editorStyle","overflowY","onEditorStateChange","newEditorState","propTypes","PropTypes","isRequired","CONSTS","API","injectIntl","withRouter"],"sourceRoot":""}