{"version":3,"file":"DeferredAPIs.21ac3b66ef2968cd5676.bundle.js","mappings":"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","sources":["webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/ApiThumbClassic.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/APIThumbPlain.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/ApiThumb.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/DocThumb.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/components/LandingMenuItem.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/components/LandingMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/APICreateMenuSection.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/SampleAPI/components/TaskState.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/SampleAPI/SampleAPI.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/Menus/RestAPIMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/Menus/SoapAPIMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/Menus/GraphqlAPIMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/Menus/StreamingAPIMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/Menus/DesignAssistantMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/Menus/AIAPIMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/index.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Landing/Menus/ServiceCatalogMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Shared/MenuButton.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/APICreateMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/TopMenu.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProduct.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DefThumbClassic.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/DefThumbPlain.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/DefThumb.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/TableView/TableView.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/Listing.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/ApiChatBanner.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/TextInput/TextInput.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/ApiChatExecute.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/CustomizedAccordions.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/ApiChatResponse.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/SampleQueryCard.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/swagger-ui-overrides.css?7ea2","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/SwaggerUI.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/DisplayCode.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/AlertDialog.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/WelcomeMessage.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/LoadingDots.tsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/SimilaritySearch.js","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/APICreateWithAI.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Apis.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Details/components/DeleteApiButton.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/APICards/ImageUtils.js","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/Background.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/ImageGenerator.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Listing/components/ImageGenerator/BaseThumbnail.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Shared/MuiAlert.jsx","webpack://@wso2apim/publisher/./source/src/app/data/APIProduct.js","webpack://@wso2apim/publisher/./source/src/app/data/ScopeValidation.jsx","webpack://@wso2apim/publisher/./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/swagger-ui-overrides.css"],"sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport API from 'AppData/api';\nimport Popover from '@mui/material/Popover';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\nimport Configurations from 'Config';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport EmailIcon from '@mui/icons-material/Email';\n\nimport { green } from '@mui/material/colors';\nimport BaseThumbnail from '../BaseThumbnail';\n\nconst PREFIX = 'ApiThumbClassic';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    providerText: `${PREFIX}-providerText`,\n    apiDetails: `${PREFIX}-apiDetails`,\n    apiActions: `${PREFIX}-apiActions`,\n    deleteProgress: `${PREFIX}-deleteProgress`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    imageWrapper: `${PREFIX}-imageWrapper`,\n    thumbContent: `${PREFIX}-thumbContent`,\n    thumbLeft: `${PREFIX}-thumbLeft`,\n    thumbRight: `${PREFIX}-thumbRight`,\n    thumbInfo: `${PREFIX}-thumbInfo`,\n    textTruncate: `${PREFIX}-textTruncate`,\n    imageOverlap: `${PREFIX}-imageOverlap`,\n    row: `${PREFIX}-row`,\n    textWrapper: `${PREFIX}-textWrapper`,\n    thumbRightBy: `${PREFIX}-thumbRightBy`,\n    thumbRightByLabel: `${PREFIX}-thumbRightByLabel`,\n    ribbon: `${PREFIX}-ribbon`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.card}`]: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n\n    [`& .${classes.providerText}`]: {\n        textTransform: 'capitalize',\n    },\n\n    [`& .${classes.apiDetails}`]: { \n        padding: theme.spacing(1.5), \n        paddingBottom: 0 \n    },\n\n    [`& .${classes.apiActions}`]: { \n        justifyContent: 'space-between',\n        padding: `0px 2px ${theme.spacing(1)} 12px`,\n        height: 48\n    },\n\n    [`& .${classes.deleteProgress}`]: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: '90%',\n        whiteSpace: 'nowrap',\n        color: theme.palette.text.secondary,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n\n    [`& .${classes.imageWrapper}`]: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.thumbContent}`]: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n\n    [`& .${classes.thumbLeft}`]: {\n        width: `calc(50% - 4px)`,\n    },\n\n    [`& .${classes.thumbRight}`]: {\n        width: `calc(50% - 4px)`,\n    },\n\n    [`& .${classes.textTruncate}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n\n    [`& .${classes.imageOverlap}`]: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n\n    [`& .${classes.row}`]: {\n        display: 'flex',\n        gap: '8px',\n    },\n\n    [`& .${classes.textWrapper}`]: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n\n    [`& .${classes.thumbRightBy}`]: {\n        'margin-right': '5px',\n        height: 18,\n        borderRadius: 8,\n    },\n\n    [`& .${classes.thumbRightByLabel}`]: {\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n\n    [`& .${classes.ribbon}`]: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '12px',\n        fontWeight: 800,\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        position: 'absolute',\n        padding: '5px',\n        width: '80px',\n        zIndex: 3,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n\n    [`& .${classes.popover}`]: {\n        pointerEvents: 'none',\n    },\n\n    [`& .${classes.paper}`]: {\n        padding: theme.spacing(1),\n        maxWidth: '300px',\n    },\n}));\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass APIThumb extends Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { \n            isHover: false, \n            loading: false, \n            businessAnchorEl: null, \n            businessOpenPopover: false, \n            technicalAnchorEl: null, \n            technicalOpenPopover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n        this.setLoading = this.setLoading.bind(this);\n    }\n\n    /**\n     *\n     * Set loading state\n     * @param {String} loadingState New state value\n     * @memberof APIThumb\n     */\n    setLoading(loadingState) {\n        this.setState({ loading: loadingState });\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    handleBusinessPopoverOpen = (event) => {\n        this.setState({ businessAnchorEl: event.currentTarget, businessOpenPopover: true });\n    };\n\n    handleBusinessPopoverClose = () => {\n        this.setState({ businessAnchorEl: null, businessOpenPopover: false });\n    };\n\n    handleTechnicalPopoverOpen = (event) => {\n        this.setState({ technicalAnchorEl: event.currentTarget, technicalOpenPopover: true });\n    };\n\n    handleTechnicalPopoverClose = () => {\n        this.setState({ technicalAnchorEl: null, technicalOpenPopover: false });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const { api, isAPIProduct, theme, updateData } = this.props;\n        const { isHover, loading } = this.state;\n        let overviewPath = '';\n        const { tileDisplayInfo } = Configurations.apis;\n        if (api.apiType) {\n            overviewPath = isAPIProduct ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n        } else {\n            overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n        }\n        let lifecycleState;\n        if (isAPIProduct) {\n            api.apiType = API.CONSTS.APIProduct;\n            lifecycleState = api.state === 'PROTOTYPED' ? 'PRE-RELEASED' : api.state;\n        } else {\n            api.apiType = API.CONSTS.API;\n            lifecycleState = api.lifeCycleStatus === 'PROTOTYPED' ? 'PRE-RELEASED' : api.lifeCycleStatus;\n        }\n\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n\n        return (\n            <StyledCard\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                elevation={isHover ? 4 : 1}\n                className={classes.card}\n                data-testid={'card-' + api.name + api.version}\n            >\n                {api.advertiseOnly && (\n                    <div className={classes.ribbon} data-testid='third-party-api-card-label'>third party</div>\n                )}\n                <div style={{ position: \"relative\" }}>\n                    <CardMedia\n                        src='None'\n                        component={BaseThumbnail}\n                        height={theme.custom.thumbnail.height}\n                        width={theme.custom.thumbnail.width}\n                        title='Thumbnail'\n                        api={api}\n                    />\n                    {api.monetizedInfo && tileDisplayInfo.showMonetizedState && \n                        <div className={classes.thumbLeft} style={{ position: \"absolute\", bottom: 0 }}>\n                            <MonetizationOnIcon fontSize='medium' style={{ color: '#FFD700', paddingLeft: '2px' }} />\n                        </div>\n                    }\n                </div>\n                <CardContent className={classes.apiDetails}>\n                    <div className={classes.textWrapper}>\n                        <Link to={overviewPath}>\n                            <Typography\n                                gutterBottom variant='h4'\n                                className={classes.thumbHeader}\n                                title={api.name}\n                                id={api.name}>\n                                {api.name}\n                            </Typography>\n                        </Link>\n                    </div>\n                    <div className={classes.row}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage id='by' defaultMessage='By' />\n                            <FormattedMessage id='colon' defaultMessage=':' />\n                            &nbsp;\n                            {api.provider}\n                        </Typography>\n                    </div>\n                    <div className={classes.row}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1' className={classes.textTruncate}>\n                                {api.version}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                            </Typography>\n                        </div>\n\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' className={classes.textTruncate}>\n                                {api.context}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom className={classes.context}>\n                                {api.type === 'WS' ? (\n                                    <FormattedMessage\n                                        defaultMessage='Channel'\n                                        id='Apis.Listing.ApiThumb.channel'\n                                    />\n                                ) : (\n                                    <FormattedMessage\n                                        defaultMessage='Context'\n                                        id='Apis.Listing.ApiThumb.context'\n                                    />\n                                )}\n                            </Typography>\n                        </div>\n                    </div>\n                    {(tileDisplayInfo.showBusinessDetails || tileDisplayInfo.showTechnicalDetails) && (\n                        <>\n                            <hr />\n                            <div className={classes.row}>\n                                <Typography variant='body2' gutterBottom align='left'>\n                                    <FormattedMessage\n                                        defaultMessage='Owners'\n                                        id='Apis.Listing.ApiThumb.owners'\n                                    />\n                                </Typography>\n                            </div>\n                            {tileDisplayInfo.showBusinessDetails &&\n                                <div className={classes.row}>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='left'\n                                        onMouseEnter={this.handleBusinessPopoverOpen}\n                                        onMouseLeave={this.handleBusinessPopoverClose}\n                                        className={classes.textTruncate}\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage='Business'\n                                            id='Apis.Listing.ApiThumb.owners.business'\n                                        />\n                                        {': '}\n                                        {api.businessOwner ? (api.businessOwner): (\n                                            <span style={{ color: '#808080' }}>\n                                                Not Provided\n                                            </span>\n                                        )}\n                                    </Typography>\n                                    {api.businessOwnerEmail && (\n                                        <Popover\n                                            id='mouse-over-popover'\n                                            sx={{\n                                                pointerEvents: 'none',\n                                            }}\n                                            open={this.state.businessOpenPopover}\n                                            anchorEl={this.state.businessAnchorEl}\n                                            anchorOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right',\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'left',\n                                            }}\n                                            onClose={this.handleBusinessPopoverClose}\n                                            disableRestoreFocus\n                                        >\n                                            <div style={{\n                                                display: 'flex',\n                                                flexDirection: 'column'\n                                            }}\n                                            >\n                                                <div style={{ display: 'flex', padding: '4px' }}>\n                                                    <EmailIcon fontSize='small' />\n                                                    <Typography\n                                                        variant='body2'\n                                                        style={{ marginLeft: '8px' }}\n                                                    >\n                                                        {api.businessOwnerEmail}\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        </Popover>\n                                    )}\n                                </div>}\n                            {tileDisplayInfo.showTechnicalDetails &&\n                                <div className={classes.row}>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom align='left'\n                                        onMouseEnter={this.handleTechnicalPopoverOpen}\n                                        onMouseLeave={this.handleTechnicalPopoverClose}\n                                        className={classes.textTruncate}\n                                    >\n                                        <FormattedMessage\n                                            defaultMessage='Technical'\n                                            id='Apis.Listing.ApiThumb.owners.technical'\n                                        />\n                                        {': '}\n                                        {api.technicalOwner ? (api.technicalOwner): (\n                                            <span style={{ color: '#808080' }}>\n                                                Not Provided\n                                            </span>\n                                        )}\n                                    </Typography>\n                                    {api.technicalOwnerEmail && (\n                                        <Popover\n                                            id='mouse-over-popover'\n                                            sx={{\n                                                pointerEvents: 'none',\n                                            }}\n                                            open={this.state.technicalOpenPopover}\n                                            anchorEl={this.state.technicalAnchorEl}\n                                            anchorOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right',\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'left',\n                                            }}\n                                            onClose={this.handleTechnicalPopoverClose}\n                                            disableRestoreFocus\n                                        >\n                                            <div style={{\n                                                display: 'flex',\n                                                flexDirection: 'column'\n                                            }}\n                                            >\n                                                <div style={{ display: 'flex', padding: '4px' }}>\n                                                    <EmailIcon fontSize='small' />\n                                                    <Typography\n                                                        variant='body2'\n                                                        style={{ marginLeft: '8px' }}\n                                                    >\n                                                        {api.technicalOwnerEmail}\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        </Popover>\n                                    )}\n                                </div>}\n                            <hr />\n                        </>\n                    )}\n                </CardContent>\n                <CardActions className={classes.apiActions} data-testid={'card-action-' + api.name + api.version}>\n                    <div>\n                        <Chip\n                            size='small'\n                            classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            label={lifecycleState}\n                            color='default'\n                            data-testid='itest-api-lifecycleState'\n                        />\n                        {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label={api.transportType === undefined\n                                    ? api.type : api.transportType}\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WS') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSOCKET'\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WEBSUB') && (api.gatewayVendor === 'wso2') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSUB'\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WEBSUB') && (api.gatewayVendor === 'solace') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='SOLACE API'\n                                style={{ backgroundColor: '#00c995' }}\n                            />\n                        )}\n                    </div>\n                    {!isRestricted(['apim:api_create'], api) && (\n                        <>\n                            <DeleteApiButton\n                                setLoading={this.setLoading}\n                                api={api}\n                                updateData={updateData}\n                                isAPIProduct={isAPIProduct}\n                            />\n                            {loading && <CircularProgress className={classes.deleteProgress} />}\n                        </>\n                    )}\n                </CardActions>\n            </StyledCard>\n        );\n    }\n}\n\nAPIThumb.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiType: PropTypes.string.isRequired,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    updateData: PropTypes.func.isRequired,\n};\n\nexport default injectIntl((props) => {\n    const theme = useTheme();\n    return <APIThumb {...props} theme={theme} />;\n});\n","import React, { useEffect, useState } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Api from 'AppData/api';\nimport Popover from '@mui/material/Popover';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\nimport Configurations from 'Config';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport EmailIcon from '@mui/icons-material/Email';\n\nimport getIcon from './ImageUtils';\n\nconst PREFIX = 'APIThumbPlain';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    caption: `${PREFIX}-caption`,\n    imageDisplay: `${PREFIX}-imageDisplay`,\n    thumbRightBy: `${PREFIX}-thumbRightBy`,\n    thumbRightByLabel: `${PREFIX}-thumbRightByLabel`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.root}`]: {\n        minWidth: 200,\n        marginTop: 10,\n        marginBottom: 10,\n        marginRight: 10,\n    },\n\n    [`& .${classes.bullet}`]: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        paddingLeft: '5px',\n    },\n\n    [`& .${classes.caption}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.imageDisplay}`]: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n\n    [`& .${classes.thumbRightBy}`]: {\n        'margin-right': '5px',\n        height: 18,\n        borderRadius: 8,\n    },\n\n    [`& .${classes.thumbRightByLabel}`]: {\n        paddingLeft: 5,\n        paddingRight: 5,\n    },\n\n    [`& .${classes.typo}`]: {\n        display: 'flex'\n    },\n\n    [`& .${classes.truncate}`]: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '175px',\n    },\n\n    [`& .${classes.popover}`]: {\n        pointerEvents: 'none',\n    },\n\n    [`& .${classes.paper}`]: {\n        padding: theme.spacing(1),\n        maxWidth: '300px',\n    },\n\n    [`& .${classes.ribbon}`]: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: '12px',\n        fontWeight: 800,\n        color: '#616161',\n        position: 'absolute',\n        padding: '5px',\n        width: '80px',\n        zIndex: 3,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction APIThumbPlain(props) {\n    const theme = useTheme();\n\n    const {\n        api, showInfo, isAPIProduct, updateData,\n    } = props;\n    const { custom: { thumbnail } } = theme;\n    const {\n        name, version, context, provider,\n    } = api;\n\n    const [imageConf, setImageConf] = useState({\n        selectedIcon: '',\n        category: '',\n        color: '#ccc',\n    });\n    const [imageObj, setIMageObj] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const { tileDisplayInfo } = Configurations.apis;\n    const [businessAnchorEl, setBusinessAnchorEl] = useState(null);\n    const [technicalAnchorEl, setTechnicalAnchorEl] = useState(null);\n    const [businessOpenPopover, setBusinessOpenPopover] = useState(false);\n    const [technicalOpenPopover, setTechnicalOpenPopover] = useState(false);\n\n    useEffect(() => {\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    setImageConf({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                    });\n                } else if (response && response.data.size > 0) {\n                    setIMageObj(windowURL.createObjectURL(response.data));\n                }\n            }\n        }).finally(() => {\n            setImageLoaded(true);\n        });\n    }, []);\n    let ImageView;\n    if (!imageLoaded) {\n        ImageView = (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    } else if (imageObj) {\n        ImageView = (\n            <img\n                src={imageObj}\n                alt='API Thumbnail'\n                className={classes.imageDisplay}\n            />\n        );\n    } else {\n        ImageView = (\n            <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: imageConf.color }}>\n                {getIcon(imageConf.selectedIcon, imageConf.category, theme, api)}\n            </Icon>\n        );\n    }\n\n    const handleBusinessPopoverOpen = (event) => {\n        setBusinessOpenPopover(true);\n        setBusinessAnchorEl(event.currentTarget);\n    };\n\n    const handleBusinessPopoverClose = () => {\n        setBusinessAnchorEl(null);\n        setBusinessOpenPopover(false);\n    };\n\n    const handleTechnicalPopoverOpen = (event) => {\n        setTechnicalAnchorEl(event.currentTarget);\n        setTechnicalOpenPopover(true);\n    };\n\n    const handleTechnicalPopoverClose = () => {\n        setTechnicalAnchorEl(null);\n        setTechnicalOpenPopover(false);\n    };\n\n    if (!showInfo) {\n        return (\n            <Link to={'/apis/' + api.id} aria-hidden='true'>\n                <Box display='flex'>\n                    <Box>\n                        {!thumbnail.defaultApiImage && ImageView}\n                        {thumbnail.defaultApiImage\n                        && (\n                            <img\n                                src={Configurations.app.context + thumbnail.defaultApiImage}\n                                alt='img'\n                            />\n                        )}\n                    </Box>\n                </Box>\n\n            </Link>\n        );\n    }\n    return (\n        <StyledCard className={classes.root} variant='outlined'>\n            <Box mb={2} pl={1}>\n                {api.advertiseOnly && (\n                    <div className={classes.ribbon}>third party</div>\n                )}\n            </Box>\n            <CardContent>\n                <Box id={api.name}>\n                    <Link to={'/apis/' + api.id + '/overview'} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                {!thumbnail.defaultApiImage && ImageView}\n                                {thumbnail.defaultApiImage\n                                && <img src={Configurations.app.context + thumbnail.defaultApiImage} alt='img' />}\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={name}\n                                className={classes.thumbHeader}\n                            >\n                                {name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box display='flex'>\n                    <Box flex={1}>\n                        {provider && (\n                            <>\n                                <Typography\n                                    variant='caption'\n                                    gutterBottom\n                                    align='left'\n                                    className={classes.caption}\n                                    component='span'\n                                >\n                                    <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                    <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                </Typography>\n                                <Typography variant='body2' component='span'>{provider}</Typography>\n                            </>\n                        )}\n                    </Box>\n                    <Box>\n                        {api.monetizedInfo && tileDisplayInfo.showMonetizedState &&\n                            <MonetizationOnIcon fontSize='medium'/>\n                        }\n                    </Box>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{version}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {context}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                        </Typography>\n                    </Box>\n                </Box>\n\n                {(tileDisplayInfo.showBusinessDetails || tileDisplayInfo.showTechnicalDetails) && (\n                    <>\n                        <hr />\n                        <div>\n                            <div>\n                                <div>\n                                    <Typography variant='body2' gutterBottom align='left'>\n                                        <FormattedMessage\n                                            defaultMessage='Owners'\n                                            id='Apis.Listing.ApiThumb.owners'\n                                        />\n                                    </Typography>\n                                </div>\n                                {tileDisplayInfo.showBusinessDetails &&\n                                    <div>\n                                        <Typography\n                                            variant='caption'\n                                            gutterBottom\n                                            align='left'\n                                            onMouseEnter={handleBusinessPopoverOpen}\n                                            onMouseLeave={handleBusinessPopoverClose}\n                                            className={classes.typo}\n                                        >\n                                            <div style={{\n                                                whiteSpace: 'nowrap',\n                                                paddingRight: '5px'\n                                            }}\n                                            >\n                                                <FormattedMessage\n                                                    defaultMessage='Business'\n                                                    id='Apis.Listing.ApiThumb.owners.business'\n                                                />\n                                                {' : '}\n                                            </div>\n                                            <div className={classes.truncate}>\n                                                {api.businessOwner\n                                                    ? (api.businessOwner)\n                                                    : (\n                                                        <span\n                                                            style={{ color: '#808080', fontWeight: 'bold' }}\n                                                        >\n                                                            Not Provided\n                                                        </span>\n                                                    )}\n                                            </div>\n                                        </Typography>\n                                        {api.businessOwnerEmail && (\n                                            <Popover\n                                                id='mouse-over-popover'\n                                                className={classes.popover}\n                                                classes={{\n                                                    paper: classes.paper,\n                                                }}\n                                                open={businessOpenPopover}\n                                                anchorEl={businessAnchorEl}\n                                                anchorOrigin={{\n                                                    vertical: 'top',\n                                                    horizontal: 'right',\n                                                }}\n                                                transformOrigin={{\n                                                    vertical: 'bottom',\n                                                    horizontal: 'left',\n                                                }}\n                                                onClose={handleBusinessPopoverClose}\n                                                disableRestoreFocus\n                                            >\n                                                <div style={{\n                                                    display: 'flex',\n                                                    flexDirection: 'column'\n                                                }}\n                                                >\n                                                    <div style={{ display: 'flex' }}>\n                                                        <EmailIcon fontSize='small' />\n                                                        <Typography\n                                                            variant='body2'\n                                                            style={{ marginLeft: '8px' }}\n                                                        >\n                                                            {api.businessOwnerEmail}\n                                                        </Typography>\n                                                    </div>\n                                                </div>\n                                            </Popover>\n                                        )}\n                                    </div>}\n                                {tileDisplayInfo.showTechnicalDetails &&\n                                    <div>\n                                        <Typography\n                                            variant='caption'\n                                            gutterBottom align='left'\n                                            onMouseEnter={handleTechnicalPopoverOpen}\n                                            onMouseLeave={handleTechnicalPopoverClose}\n                                            className={classes.typo}\n                                        >\n                                            <div style={{\n                                                whiteSpace: 'nowrap',\n                                                paddingRight: '5px'\n                                            }}\n                                            >\n                                                <FormattedMessage\n                                                    defaultMessage='Technical'\n                                                    id='Apis.Listing.ApiThumb.owners.technical'\n                                                />\n                                                {' : '}\n                                            </div>\n                                            <div className={classes.truncate}>\n                                                {api.technicalOwner\n                                                    ? (api.technicalOwner)\n                                                    : (\n                                                        <span\n                                                            style={{ color: '#808080', fontWeight: 'bold' }}\n                                                        >\n                                                            Not Provided\n                                                        </span>\n                                                    )}\n                                            </div>\n                                        </Typography>\n                                        {api.technicalOwnerEmail && (\n                                            <Popover\n                                                id='mouse-over-popover'\n                                                className={classes.popover}\n                                                classes={{\n                                                    paper: classes.paper,\n                                                }}\n                                                open={technicalOpenPopover}\n                                                anchorEl={technicalAnchorEl}\n                                                anchorOrigin={{\n                                                    vertical: 'top',\n                                                    horizontal: 'right',\n                                                }}\n                                                transformOrigin={{\n                                                    vertical: 'bottom',\n                                                    horizontal: 'left',\n                                                }}\n                                                onClose={handleTechnicalPopoverClose}\n                                                disableRestoreFocus\n                                            >\n                                                <div style={{\n                                                    display: 'flex',\n                                                    flexDirection: 'column'\n                                                }}\n                                                >\n                                                    <div style={{ display: 'flex' }}>\n                                                        <EmailIcon fontSize='small' />\n                                                        <Typography\n                                                            variant='body2'\n                                                            style={{ marginLeft: '8px' }}\n                                                        >\n                                                            {api.technicalOwnerEmail}\n                                                        </Typography>\n                                                    </div>\n                                                </div>\n                                            </Popover>\n                                        )}\n                                    </div>}\n                            </div>\n                        </div>\n                        <hr />\n                    </>\n                )}\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        {!isAPIProduct && (\n                            <Chip\n                                label={api.apiType === Api.CONSTS.APIProduct ? api.state : api.lifeCycleStatus}\n                                color='default'\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                            />\n                        )}\n                        {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label={api.transportType === undefined\n                                    ? api.type : api.transportType}\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WS') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSOCKET'\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WEBSUB') && (api.gatewayVendor === 'wso2') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='WEBSUB'\n                                color='primary'\n                            />\n                        )}\n                        {(api.type === 'WEBSUB') && (api.gatewayVendor === 'solace') && (\n                            <Chip\n                                size='small'\n                                classes={{ root: classes.thumbRightBy, label: classes.thumbRightByLabel }}\n                                label='SOLACE API'\n                                style={{ backgroundColor: '#00c995' }}\n                            />\n                        )}\n                    </Box>\n                    {!isRestricted(['apim:api_create'], api) && (\n                        <>\n                            <DeleteApiButton\n                                setLoading={setLoading}\n                                api={api}\n                                updateData={updateData}\n                                isAPIProduct={isAPIProduct}\n                            />\n                            {loading && <CircularProgress className={classes.deleteProgress} />}\n                        </>\n                    )}\n                </Box>\n            </CardContent>\n        </StyledCard>\n    );\n}\n\n\nAPIThumbPlain.defaultProps = {\n    showInfo: true,\n};\nAPIThumbPlain.propTypes = {\n    showInfo: PropTypes.bool,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default APIThumbPlain;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport ApiThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/ApiThumbClassic';\nimport APIThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/APIThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function APIThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n    return (\n        <APIThumbPlain {...props} />\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@mui/material/Link';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\nimport LetterGenerator from 'AppComponents/Apis/Listing/components/ImageGenerator/LetterGenerator';\nimport Configurations from 'Config';\nimport DescriptionTwoToneIcon from '@mui/icons-material/DescriptionTwoTone';\nimport LinkIcon from '@mui/icons-material/Link';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\nconst PREFIX = 'DocThumb';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    thumbHeader: `${PREFIX}-thumbHeader`\n};\n\nconst StyledLink = styled(Link)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.card}`]: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        maxWidth: theme.spacing(16),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    \n    [`& .${classes.defaultCardContent}`]: {\n        height: '111px',\n    },\n\n    [`& .${classes.maxCardContent}`]: {\n        height: '208px',\n    },\n    \n    [`& .${classes.minCardContent}`]: {\n        height: '187px',\n    },\n}));\n\n\nconst DocThumb = (props) => {\n    const { doc } = props;\n    const [isHover, setIsHover] = useState(false);\n    const toggleMouseOver = () => setIsHover(!isHover);\n\n    let thumbIcon;\n    let PrefixIcon = TextFieldsIcon;\n    if (doc.sourceType === 'FILE') {\n        PrefixIcon = PictureAsPdfIcon;\n        thumbIcon = DescriptionTwoToneIcon;\n    } else if (doc.sourceType === 'URL') {\n        PrefixIcon = LinkIcon;\n    }\n    let configValue;\n    const { tileDisplayInfo } = Configurations.apis;\n    if (tileDisplayInfo.showBusinessDetails === true && tileDisplayInfo.showTechnicalDetails === true) {\n        configValue = 2;\n    } else if (tileDisplayInfo.showBusinessDetails === true || tileDisplayInfo.showTechnicalDetails === true) {\n        configValue = 1;\n    }\n    let cardContentClassName;\n    if (configValue === 1) {\n        cardContentClassName = classes.minCardContent;\n    } else if (configValue === 2) {\n        cardContentClassName = classes.maxCardContent;\n    } else {\n        cardContentClassName = classes.defaultCardContent;\n    }\n    return (\n        <StyledLink\n            underline='none'\n            component={RouterLink}\n            to={'/apis/' + doc.apiUUID + '/documents/' + doc.id + '/details'}\n            aria-hidden='true'\n        >\n            <Card\n                onMouseOver={toggleMouseOver}\n                onFocus={toggleMouseOver}\n                onMouseOut={toggleMouseOver}\n                onBlur={toggleMouseOver}\n                elevation={isHover ? 4 : 1}\n                className={classes.card}\n            >\n                <CardMedia\n                    width={240}\n                    component={LetterGenerator}\n                    height={140}\n                    title='Thumbnail'\n                    artifact={{ name: 'Doc' }}\n                    charLength={3}\n                    ThumbIcon={thumbIcon}\n                    bgColor={false}\n                />\n                <CardContent className={cardContentClassName}>\n                    <Grid\n                        container\n                        direction='column'\n                        justifyContent='space-evenly'\n                        alignItems='flex-start'\n                    >\n                        <Grid item>\n                            <Box display='flex' alignItems='center' flexDirection='row' fontFamily='fontFamily'>\n                                <Box display='flex'>\n                                    <PrefixIcon color='primary' />\n                                </Box>\n                                <Box\n                                    className={classes.thumbHeader}\n                                    color='text.primary'\n                                    fontSize='h4.fontSize'\n                                    ml={1}\n                                >\n                                    {doc.name}\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item>\n                            <Box mt={3} fontFamily='fontFamily'>\n                                <Box color='primary.main'>\n                                    {doc.associatedType}\n                                </Box>\n                                <Box color='text.primary' fontSize='h6.fontSize'>\n                                    {doc.apiName}\n                                </Box>\n                                <Box color='text.secondary' fontSize='body1.fontSize'>\n                                    Version:\n                                    {' '}\n                                    {doc.apiVersion}\n                                </Box>\n                            </Box>\n                        </Grid>\n\n                    </Grid>\n                </CardContent>\n            </Card>\n        </StyledLink>\n    );\n};\n\nDocThumb.propTypes = {\n    doc: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        sourceType: PropTypes.string.isRequired,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default DocThumb;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nconst PREFIX = 'DocThumbPlain';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    caption: `${PREFIX}-caption`,\n    imageDisplay: `${PREFIX}-imageDisplay`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.root}`]: {\n        minWidth: 200,\n        marginTop: 10,\n        marginRight: 10,\n        marginBottom: 10,\n    },\n\n    [`& .${classes.bullet}`]: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n\n    [`& .${classes.contextBox}`]: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n\n    [`& .${classes.caption}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.imageDisplay}`]: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    }\n}));\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction DocThumbPlain(props) {\n\n    const { doc } = props;\n    return (\n        <StyledCard className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={'/apis/' + doc.apiUUID + '/documents/' + doc.id + '/details'} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: '#ccc' }}>\n                                    description\n                                </Icon>\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={doc.name}\n                                className={classes.thumbHeader}\n                            >\n                                {doc.name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box mt={2}>\n                    <Typography variant='subtitle1' className={classes.contextBox}>\n                        {doc.apiName}\n                    </Typography>\n                    <Typography\n                        variant='caption'\n                        gutterBottom\n                        align='right'\n                        className={classes.caption}\n                        Component='div'\n                    >\n                        <FormattedMessage\n                            id='Apis.Listing.components.ImageGenerator.DocThumb.apiName'\n                            defaultMessage='API Name'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{doc.sourceType}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.sourceType'\n                                defaultMessage='Source Type:'\n                            />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {doc.apiVersion}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiVersion'\n                                defaultMessage='API Version'\n                            />\n                        </Typography>\n                    </Box>\n                </Box>\n\n\n            </CardContent>\n        </StyledCard>\n    );\n}\n\nexport default DocThumbPlain;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport DocThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbClassic';\nimport DocThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DocThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function DocThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    const { classes, doc } = props;\n\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <DocThumbClassic classes={classes} doc={doc} />\n        );\n    }\n    return (\n        <DocThumbPlain doc={doc} />\n    );\n}\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\nconst PREFIX = 'LandingMenuItem';\n\nconst classes = {\n    linkRoot: `${PREFIX}-linkRoot`\n};\n\nconst StyledGrid = styled(Grid)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.linkRoot}`]: {\n        color: theme.custom.landingPage.menu.primary,\n        '&:hover': {\n            backgroundColor: '#0B78F014',\n            textDecoration: 'none',\n        },\n    }\n}));\n\nconst LandingMenuItem = (props) => {\n    const {\n        helperText, children, id, linkTo, component = 'Link', onClick, dense, disabled = false,\n    } = props;\n\n    return (\n        <StyledGrid\n            item\n            xs={12}\n        >\n            <Typography\n                color='primary'\n                variant={dense ? 'subtitle1' : 'h6'}\n            >\n                {/* Using React Router Links with Material-UI Links\n                Pattern as suggested in https://material-ui.com/guides/composition/#link */}\n                {component.toLowerCase() === 'link' && (\n                    <Link\n                        className={classes.linkRoot}\n                        id={id}\n                        component={RouterLink}\n                        to={linkTo}\n                        underline='hover'\n                    >\n                        {children}\n                    </Link>\n                )}\n                {component.toLowerCase() === 'button' && (\n                    <Button\n                        disabled={disabled}\n                        id={id}\n                        size={dense ? 'small' : 'medium'}\n                        onClick={onClick}\n                        color='primary'\n                        variant='outlined'\n                    >\n                        {children}\n                    </Button>\n                )}\n\n            </Typography>\n            <Box\n                color='text.secondary'\n                fontFamily='fontFamily'\n                fontSize={dense ? 'caption.fontSize' : 'body2.fontSize'}\n            >\n                {helperText}\n            </Box>\n        </StyledGrid>\n    );\n};\n\nexport default LandingMenuItem;\n","import React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Configurations from 'Config';\nimport Fade from '@mui/material/Fade';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { blue } from '@mui/material/colors';\n\nconst PREFIX = 'LandingMenu';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    boxTransition: `${PREFIX}-boxTransition`,\n    overlayBox: `${PREFIX}-overlayBox`,\n    overlayCloseButton: `${PREFIX}-overlayCloseButton`\n};\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n    [`& .${classes.root}`]: {\n        minWidth: theme.spacing(32),\n    },\n\n    [`& .${classes.boxTransition}`]: {\n        transition: 'box-shadow 0.9s cubic-bezier(.25,.8,.25,1)',\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.overlayBox}`]: {\n        cursor: 'auto',\n        outline: 'none',\n        'border-color': '#f9f9f9', // TODO: take from theme ~tmkb\n        'box-shadow': '0 0 6px 4px #f9f9f9',\n        'border-radius': '5px',\n    },\n\n    [`& .${classes.overlayCloseButton}`]: {\n        float: 'right',\n    }\n}));\n\nconst LandingMenu = (props) => {\n    const {\n        title, icon, children, id,\n    } = props;\n    const [isHover, setIsHover] = useState(false);\n    const [isCollapsed, setIsCollapsed] = useState(false);\n    const [isFadeOut, setIsFadeOut] = useState(true);\n\n    const onMouseOver = () => {\n        setIsHover(true);\n    };\n    const onMouseOut = () => {\n        setIsHover(false);\n    };\n\n    return (\n        <StyledGrid\n            className={classes.root}\n            item\n            xs={12}\n            sm={6}\n            md={3}\n            lg={2}\n        >\n            <Box\n                id={id}\n                className={classes.boxTransition}\n                onMouseOver={onMouseOver}\n                onMouseOut={onMouseOut}\n                bgcolor='background.paper'\n                justifyContent='center'\n                alignItems='center'\n                borderRadius='8px'\n                borderColor='grey.300'\n                display='flex'\n                border={1}\n                boxShadow={isHover ? 4 : 1}\n                minHeight={340}\n                p={1}\n                color={blue[900]}\n                fontSize='h4.fontSize'\n                fontFamily='fontFamily'\n                flexDirection='row'\n                onClick={(e) => { setIsCollapsed(true); setIsFadeOut(false); e.preventDefault(); e.stopPropagation(); }}\n                position='relative'\n            >\n                <Grid\n                    container\n                    direction='row'\n                    justifyContent='center'\n                    alignItems='center'\n                >\n                    <Grid item xs={12}>\n                        <Box\n                            alignItems='center'\n                            mt={2}\n                            mb={4}\n                            justifyContent='center'\n                            display={{ xs: 'none', sm: 'flex' }}\n                        >\n                            <img\n                                style={{\n                                    maxWidth: '100%',\n                                    height: 'auto',\n                                    objectFit: 'contain',\n                                    minWidth: '150px',\n                                    minHeight: '150px',\n                                }}\n                                src={Configurations.app.context\n                                    + icon}\n                                alt={title}\n                                aria-hidden='true'\n                            />\n                        </Box>\n                    </Grid>\n                    {title}\n                </Grid>\n                <Box\n                    position='absolute'\n                    top={5}\n                    left={5}\n                    height='97%'\n                    bgcolor='#f8f8fb'\n                    textAlign='center'\n                    width='97%'\n                    className={classes.overlayBox}\n                    visibility={isFadeOut && 'hidden'}\n                >\n                    <Fade\n                        onExited={() => setIsFadeOut(true)}\n                        timeout={{ enter: 500, exit: 150 }}\n                        in={isCollapsed}\n                    >\n                        <Box>\n                            <IconButton\n                                className={classes.overlayCloseButton}\n                                onClick={(e) => {\n                                    setIsCollapsed(false);\n                                    e.preventDefault(); e.stopPropagation();\n                                }}\n                                size='large'>\n                                <CloseIcon />\n                            </IconButton>\n                            <Grid\n                                container\n                                direction='row'\n                                justifyContent='flex-start'\n                                alignItems='center'\n                                spacing={3}\n                            >\n                                {/* Menu links or buttons */}\n                                {isCollapsed? children: null}\n                            </Grid>\n                        </Box>\n                    </Fade>\n                </Box>\n            </Box>\n        </StyledGrid>\n    );\n};\n\nexport default LandingMenu;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nconst APICreateMenuSection = (props) => {\n    const {\n        title, children,\n    } = props;\n\n\n    return (\n        <Grid\n            item\n            xs={11}\n            sm={5}\n            md={2}\n        >\n            <Box mb={2}>\n                <Typography\n                    variant='h6'\n                    align='left'\n                >\n                    {title}\n                </Typography>\n            </Box>\n            <Grid\n                container\n                direction='row'\n                justifyContent='flex-start'\n                alignItems='center'\n                spacing={4}\n            >\n                {/* Menu links or buttons */}\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default APICreateMenuSection;\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Alert from 'AppComponents/Shared/MuiAlert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @return {*}\n */\nexport default function TaskState(props) {\n    const complianceErrorCode = 903300;\n    const {\n        pending, completed, errors, inProgress, children, pendingMessage, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (pending) {\n        severity = 'pending';\n        if (pendingMessage) {\n            message = pendingMessage;\n        }\n    } else if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'waiting';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            if (body.code === complianceErrorCode) {\n                message = (\n                    <>\n                        <b>Governance Policy Violation</b>\n                        {': '}\n                        <FormattedMessage\n                            id='Apis.Listing.TaskState.governance.violation'\n                            defaultMessage={'One or more governance polices have been violated.'\n                                + ' Please check the configurations.'}\n                        />\n                    </>\n                );\n            } else {\n                message = (\n                    <>\n                        <b>\n                            [\n                            {body.code}\n                            ]\n                        </b>\n                        {' '}\n                        :\n                        {body.description}\n                    </>\n                );\n            }\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { Redirect, Link as RouterLink } from 'react-router-dom';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport TaskState from 'AppComponents/Apis/Listing/SampleAPI/components/TaskState';\nimport Link from '@mui/material/Link';\nimport Button from '@mui/material/Button';\nimport { getSampleAPIData, getSampleOpenAPI } from 'AppData/SamplePizzaShack';\n\nconst PREFIX = 'SampleAPI';\n\nconst classes = {\n    wrapper: `${PREFIX}-wrapper`,\n};\n\nconst StyledModal = styled(Modal)(({ theme }) => ({\n    '&': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    [`& .${classes.wrapper}`]: {\n        width: theme.spacing(35),\n        borderRadius: theme.spacing(1),\n        outline: 'none',\n        padding: theme.spacing(1),\n    },\n}));\n\n\nconst initialTaskStates = {\n    create: { inProgress: true, completed: false, pending: false, errors: false },\n    update: { inProgress: false, completed: false, pending: false, errors: false },\n    revision: { inProgress: false, completed: false, pending: false, errors: false },\n    deploy: { inProgress: false, completed: false, pending: false, errors: false },\n    publish: { inProgress: false, completed: false, pending: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n\n/**\n * Handle deploying a sample API (Create, Deploy and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\n\nconst SampleAPI = (props) => {\n    const { dense } = props;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const [newSampleAPI, setNewSampleAPI] = useState();\n\n    const { data: publisherSettings, isLoading } = usePublisherSettings();\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n            throw errors;\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        if (taskResult.body?.[0]?.status === 'CREATED') {\n            tasksStatusDispatcher({ name, status: { pending: true} });\n        }\n\n        return taskResult;\n    };\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof SampleAPI\n     */\n    const handleDeploySample = async () => {\n        const { defaultAdvancePolicy, defaultSubscriptionPolicy } = publisherSettings;\n        const internalGateways = publisherSettings && publisherSettings.environment.filter((p) => p.provider\n        && p.provider.toLowerCase().includes('wso2'));\n\n        setShowStatus(true);\n        const restApi = new API();\n\n        const sampleAPIObj = new API(getSampleAPIData(defaultAdvancePolicy || 'Unlimited',\n            defaultSubscriptionPolicy || 'Unlimited'));\n        // Creat the sample API -- 1st API call\n        const sampleAPI = await taskManager(sampleAPIObj.save(), 'create');\n        setNewSampleAPI(sampleAPI);\n        if (!sampleAPI) {\n            throw new Error('Error while creating sample API');\n        }\n        // Update the sample API -- 2nd API call\n        await taskManager(sampleAPI\n            .updateSwagger(\n                getSampleOpenAPI(defaultAdvancePolicy || 'Unlimited'),\n            ), 'update');\n\n        if (!AuthManager.isNotPublisher()) {\n            const revisionPayload = {\n                description: 'Initial Revision',\n            };\n\n            // Creat a revision of sample API -- 3rd API call\n            const sampleAPIRevision = await taskManager(\n                restApi.createRevision(sampleAPI.id, revisionPayload),\n                'revision',\n            );\n            const envList = internalGateways.map((env) => env.name);\n            const deployRevisionPayload = [];\n            const getFirstVhost = (envName) => {\n                const env = internalGateways.find(\n                    (ev) => ev.name === envName && ev.vhosts.length > 0,\n                );\n                return env && env.vhosts[0].host;\n            };\n            if (envList && envList.length > 0) {\n                if (envList.includes('Default') && getFirstVhost('Default')) {\n                    deployRevisionPayload.push({\n                        name: 'Default',\n                        displayOnDevportal: true,\n                        vhost: getFirstVhost('Default'),\n                    });\n                } else if (getFirstVhost(envList[0])) {\n                    deployRevisionPayload.push({\n                        name: envList[0],\n                        displayOnDevportal: true,\n                        vhost: getFirstVhost(envList[0]),\n                    });\n                }\n            }\n            const revisionId = sampleAPIRevision.body.id;\n\n            // Deploy a revision of sample API -- 4th API call\n            await taskManager(restApi.deployRevision(sampleAPI.id,\n                revisionId, deployRevisionPayload), 'deploy');\n\n            // Deploy a revision of sample API -- 5th API call\n            await taskManager(sampleAPI.publish(), 'publish');\n        }\n    };\n\n    const allDone = !AuthManager.isNotPublisher() ? Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done) : (tasksStatus.create.completed && newSampleAPI);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n    if (allDone && !anyErrors) {\n        const url = '/apis/' + newSampleAPI.id + '/overview';\n        return <Redirect to={url} />;\n    }\n    return (\n        <>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-deploy-sample'\n                onClick={handleDeploySample}\n                disabled={!publisherSettings || isLoading}\n                component='button'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.d.sample.content'\n                        defaultMessage={`Sample Pizza Shack\n                                    API`}\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id={'Apis.Listing.SampleAPI.SampleAPI.'\n                        + 'rest.d.sample.title'}\n                    defaultMessage='Deploy Sample API'\n                />\n            </LandingMenuItem>\n            <StyledModal\n                aria-labelledby='transition-modal-title'\n                aria-describedby='transition-modal-description'\n                open={showStatus}\n                closeAfterTransition\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        className={classes.wrapper}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justifyContent='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.create.completed}\n                                errors={tasksStatus.create.errors}\n                                inProgress={tasksStatus.create.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.create.complete'\n                                        defaultMessage='API created successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.create.inprogress'\n                                        defaultMessage='Creating sample API ...'\n                                    />\n                                )}\n                            >\n                                Create API\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.update.completed}\n                                errors={tasksStatus.update.errors}\n                                inProgress={tasksStatus.update.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.update.complete'\n                                        defaultMessage='API updated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.popup.update.inprogress'\n                                        defaultMessage='Updating sample API ...'\n                                    />\n                                )}\n                            >\n                                Update API\n                            </TaskState>\n                            {!AuthManager.isNotPublisher() && (\n                                <>\n                                    <TaskState\n                                        completed={tasksStatus.revision.completed}\n                                        errors={tasksStatus.revision.errors}\n                                        inProgress={tasksStatus.revision.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.revision.complete'\n                                                defaultMessage='API revision created successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.revision.inprogress'\n                                                defaultMessage='Creating a revision of sample API ...'\n                                            />\n                                        )}\n                                    >\n                                        Revision API\n                                    </TaskState>\n                                    <TaskState\n                                        pending={tasksStatus.deploy.pending}\n                                        completed={tasksStatus.deploy.completed}\n                                        errors={tasksStatus.deploy.errors}\n                                        inProgress={tasksStatus.deploy.inProgress}\n                                        pendingMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.deploy.pending'\n                                                defaultMessage='API revision deployment request sent'\n                                            />\n                                        )}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.deploy.complete'\n                                                defaultMessage='API deployed successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.deploy.inprogress'\n                                                defaultMessage='Deploying sample API ...'\n                                            />\n                                        )}\n                                    >\n                                        Deploying API\n                                    </TaskState>\n                                    <TaskState\n                                        completed={tasksStatus.publish.completed}\n                                        errors={tasksStatus.publish.errors}\n                                        inProgress={tasksStatus.publish.inProgress}\n                                        completedMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.publish.complete'\n                                                defaultMessage='API published successfully!'\n                                            />\n                                        )}\n                                        inProgressMessage={(\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.popup.publish.inprogress'\n                                                defaultMessage='Publishing sample API to developer portal ...'\n                                            />\n                                        )}\n                                    >\n                                        Publish API\n                                    </TaskState>\n                                </>\n                            )}\n                            {anyErrors && (\n                                <Grid container justifyContent='flex-end' gap={2}\n                                    paddingRight={1} paddingBottom={1} alignItems='center'>\n                                    <Grid item>\n                                        <Button\n                                            onClick={() => {\n                                                setShowStatus(false);\n                                                tasksStatusDispatcher({ name: 'reset' });\n                                            }}\n                                            variant='outlined'\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Listing.SampleAPI.continue.on.close'\n                                                defaultMessage='Close'\n                                            />\n                                        </Button>\n                                    </Grid>\n                                    {newSampleAPI && (\n                                        <Grid item>\n                                            <Link\n                                                variant='body2'\n                                                underline='none'\n                                                component={RouterLink}\n                                                to={`/apis/${newSampleAPI.id}/overview`}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Listing.SampleAPI.continue.on.error'\n                                                    defaultMessage='Continue'\n                                                />\n                                            </Link>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </StyledModal>\n        </>\n    );\n};\n\nexport default SampleAPI;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport queryString from 'query-string';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport SampleAPI from 'AppComponents/Apis/Listing/SampleAPI/SampleAPI';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport Configurations from 'Config';\nimport API from 'AppData/api';\n\nconst RestAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const { data: settings } = usePublisherSettings();\n    const noRegularGw = settings && !settings.gatewayTypes.includes('Regular');\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    const { alwaysShowDeploySampleButton } = Configurations.apis;\n    const [showSampleDeploy, setShowSampleDeploy] = useState(false);\n\n    useEffect(() => {\n        if (isCreateMenu) {\n            const composeQuery = '?query=name:PizzaShackAPI version:1.0 context:pizzashack';\n            const composeQueryJSON = queryString.parse(composeQuery);\n            composeQueryJSON.limit = 1;\n            composeQueryJSON.offset = 0;\n            API.search(composeQueryJSON).then((resp) => {\n                const data = JSON.parse(resp.data);\n                setShowSampleDeploy(data.count === 0);\n            });\n        } else {\n            setShowSampleDeploy(true);\n        }\n    }, []);\n\n    return (\n        <Component\n            id='itest-rest-api-create-menu'\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api'\n                    defaultMessage='REST API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-landing-rest-create-default'\n                linkTo='/apis/create/rest'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.api.scratch.content'\n                        defaultMessage='Design and prototype a new REST API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api.scratch.title'\n                    defaultMessage='Start From Scratch'\n                />\n            </LandingMenuItem>\n\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-landing-upload-oas'\n                linkTo='/apis/create/openapi'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.rest.api.import.open.content'\n                        defaultMessage='Import OAS 3 or Swagger 2.0 definition'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.rest.api.import.open.title'\n                    defaultMessage='Import Open API'\n                />\n            </LandingMenuItem>\n\n            {(!isCreateMenu || (isCreateMenu && alwaysShowDeploySampleButton)) && showSampleDeploy &&\n                !noRegularGw && (\n                <>\n                    <Box width={1} sx={{ pt: 2, pr: 2, pl: 2, ml: 2 }}>\n                        <Divider variant='middle' />\n                    </Box>\n                    <SampleAPI dense={dense} />\n                </>\n            )}\n        </Component>\n    );\n};\n\nexport default RestAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst SoapAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.soap.api'\n                    defaultMessage='SOAP API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-soap-api'\n                linkTo='/apis/create/wsdl'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.soap.import.wsdl.content'\n                        defaultMessage='Generate REST or create a pass-through API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.soap.import.wsdl.title'\n                    defaultMessage='Import WSDL'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default SoapAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst GraphqlAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.graphql.api'\n                    defaultMessage='GraphQL'\n                />\n            )}\n            icon={icon}\n            id='itest-graphql-api-create-menu'\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-graphql-api'\n                linkTo='/apis/create/graphQL'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.graphql.import.sdl.content'\n                        defaultMessage='Use an existing schema or endpoint'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.graphql.import.sdl.title'\n                    defaultMessage='Create GraphQL API'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default GraphqlAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst StreamingAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.api'\n                    defaultMessage='Streaming API'\n                />\n            )}\n            icon={icon}\n            id='itest-streaming-api-create-menu'\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-ws'\n                linkTo='/apis/create/streamingapi/ws'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.design.new.ws.content'\n                        defaultMessage='Create a Web Socket API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.design.new.title'\n                    defaultMessage='Web Socket API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-web-hook'\n                linkTo='/apis/create/streamingapi/websub'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.websub.content'\n                        defaultMessage='Create a Webhook/WebSub API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.websub.title'\n                    defaultMessage='Webhook API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-sse'\n                linkTo='/apis/create/streamingapi/sse'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.sse.content'\n                        defaultMessage='Create a Server-Sent Events API'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.sse.title'\n                    defaultMessage='SSE API'\n                />\n            </LandingMenuItem>\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-streaming-api-import'\n                linkTo='/apis/create/asyncapi'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.streaming.import.content'\n                        defaultMessage='Upload a file or provide an Async API URL'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.streaming.import.title'\n                    defaultMessage='Import an AsyncAPI'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default StreamingAPIMenu;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Box, Button, Typography, useTheme } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { app } from 'Settings';\nimport { isRestricted } from 'AppData/AuthManager';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst DesignAssistantMenu = () => {\n    const theme = useTheme();    \n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const isMediumScreen = useMediaQuery(theme.breakpoints.between('md', 'lg'));\n\n    return (\n        <Paper\n            square={false}\n            elevation={4}\n            sx={{\n                maxWidth: isSmallScreen ? 250 : isMediumScreen ? 400 : 500,\n                height: isSmallScreen ? 140 : isMediumScreen ? 150 : 140, \n                display: 'flex',\n                justifyContent: 'center', alignItems: 'center',\n                transition: 'all 0.3s ease-in-out',\n                padding: isSmallScreen ? 1 : 2,\n                borderRadius: isSmallScreen ? 2 : 4,\n            }}\n        >\n            <Box p={1} border={0} borderRadius={1}\n                sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <img\n                    alt='API Design Assistant'\n                    src={`${app.context}/site/public/images/ai/APIchatassistantImageWithColour.svg`}\n                    style={{ width: '90px', height: 'auto' }}\n                />\n                <Box p={2} border={0} borderRadius={2}\n                    sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <Typography variant='h6' sx={{ color: '#1a3c73', textAlign: 'center', mt: 2 }}>\n                        Not sure which API to create?<br />\n                        We got you!\n                    </Typography>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        component={Link}\n                        disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                        to='/apis/design-assistant'\n                        sx={{ whiteSpace: 'nowrap', mt: 2 }}\n                    >\n                        <FormattedMessage\n                            id='Apis.Listing.components.TopMenu.create.api.with.ai'\n                            defaultMessage='Create API with AI'\n                        />\n                        <img \n                            alt='API Design Assistant'\n                            src={`${app.context}/site/public/images/ai/DesignAssistant.svg`}\n                            style={{ marginLeft: 8, width: 15, height: 15 }}\n                        />\n                    </Button>\n                </Box>\n            </Box>\n        </Paper>\n    );\n};\n\nexport default DesignAssistantMenu;\n","/*\n * Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\nconst AIAPIMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n\n    return (\n        <Component\n            id='itest-rest-api-create-menu'\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.AIAPI.ai.api'\n                    defaultMessage='AI/LLM API'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-landing-create-ai-api'\n                linkTo='/apis/create/ai-api'\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPI.SampleAPI.ai.api.import.content'\n                        defaultMessage='Create AI/LLM APIs by importing service provider APIs'\n                    />\n                )}\n            >\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.ai.api.create.title'\n                    defaultMessage='Create AI/LLM API'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default AIAPIMenu;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport { styled } from '@mui/material/styles';\nimport { useTheme, Divider, Box, Grid  } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport RestAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/RestAPIMenu';\nimport SoapAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/SoapAPIMenu';\nimport GraphqlAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/GraphqlAPIMenu';\nimport StreamingAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/StreamingAPIMenu';\nimport DesignAssistantMenu from './Menus/DesignAssistantMenu';\nimport AIAPIMenu from './Menus/AIAPIMenu';\n\nconst PREFIX = 'APILanding';\n\nconst classes = {\n    root: `${PREFIX}-root`\n};\n\nconst Root = styled('div')({\n    [`& .${classes.root}`]: {\n        flexGrow: 1,\n    },\n});\n\nconst APILanding = () => {\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n    const { data: settings } = usePublisherSettings();\n    const [gateway, setGatewayType] = useState(true);\n\n    const getGatewayType = () => {\n        if (settings != null) {\n            if (settings.gatewayTypes && settings.gatewayTypes.includes('Regular')) {\n                setGatewayType(true);\n            } else {\n                setGatewayType(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        getGatewayType();\n    }, [settings]);\n\n    const {\n        graphqlIcon,\n        restApiIcon,\n        aiApiIcon,\n        soapApiIcon,\n        streamingApiIcon,\n    } = theme.custom.landingPage.icons;\n\n    return (\n        <Root className={classes.root}>\n            <Grid\n                container\n                direction='column'\n                justifyContent='center'\n            >\n                <Grid item xs={12}>\n                    <Box pt={isXsOrBelow ? 2 : 7} />\n                </Grid>\n                <Grid item md={12}>\n                    <Typography id='itest-apis-welcome-msg' display='block' gutterBottom align='center' variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPI.create.new'\n                            defaultMessage='Let’s get started !'\n                        />\n                        {settings && settings.portalConfigurationOnlyModeEnabled ? (\n                            <Box color='text.secondary' pt={1}>\n                                <Typography display='block' gutterBottom align='center' variant='body1'>\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.SampleAPI.no.apis.deployed'\n                                        defaultMessage='No APIs have been deployed yet '\n                                    />\n                                </Typography>\n                            </Box>\n                        ) : (\n                            <Box color='text.secondary' pt={1}>\n                                <Typography display='block' gutterBottom align='center' variant='body1'>\n                                    <FormattedMessage\n                                        id='Apis.Listing.SampleAPI.SampleAPI.create.new.description'\n                                        defaultMessage='Choose your option to create an API'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Typography>\n                </Grid>\n\n                {settings && !settings.portalConfigurationOnlyModeEnabled && (\n                    <Grid item xs={12} md={2} lg={2} xl={2}>\n                        <Box pt={isXsOrBelow ? 1 : 6} pb={4} >\n                            <Grid\n                                container\n                                direction='column'\n                                justifyContent='center'\n                                alignItems='flex-start'\n                                spacing={3}\n                            >\n                                <Grid\n                                    container\n                                    direction='row'\n                                    justifyContent='center'\n                                    alignItems='flex-start'\n                                    spacing={3}\n                                >\n                                    <RestAPIMenu icon={restApiIcon} />\n                                    {gateway &&\n                                        <SoapAPIMenu icon={soapApiIcon} />\n                                    }\n                                    <GraphqlAPIMenu icon={graphqlIcon} />\n                                    {gateway &&\n                                        <StreamingAPIMenu icon={streamingApiIcon} />\n                                    }\n                                    <AIAPIMenu icon={aiApiIcon} />\n                                </Grid>\n                                {settings.designAssistantEnabled && (\n                                    <Divider \n                                        variant='middle' \n                                        sx={{\n                                            backgroundColor: '#A0A5A3', \n                                            height: 1,\n                                            width: '85%',\n                                            mt: '30px', \n                                            mb: '10px', \n                                            marginX: 'auto',\n                                        }}\n                                    />\n                                )}\n                                {settings.designAssistantEnabled && (\n                                    <Grid\n                                        item\n                                        sx={{ \n                                            display: 'flex', \n                                            justifyContent: 'center', \n                                            width: '100%',\n                                        }}\n                                    >\n                                        <DesignAssistantMenu />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Box>\n                    </Grid>\n                )}\n\n            </Grid>\n        </Root>\n    );\n};\n\nexport default APILanding;","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// **** DEPRECATED ****\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LandingMenuItem from 'AppComponents/Apis/Listing/Landing/components/LandingMenuItem';\nimport LandingMenu from 'AppComponents/Apis/Listing/Landing/components/LandingMenu';\nimport APICreateMenuSection from 'AppComponents/Apis/Listing/components/APICreateMenuSection';\n\n/**\n * NOTE: This is no longer in use and deprecated !!!!\n * @param {Object} props Component interface\n * @returns\n */\nconst ServiceCatalogMenu = (props) => {\n    const { icon, isCreateMenu } = props;\n    const Component = isCreateMenu ? APICreateMenuSection : LandingMenu;\n    const dense = isCreateMenu;\n    return (\n        <Component\n            id='itest-rest-api-create-menu'\n            openList={dense}\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPI.service.catalog.api'\n                    defaultMessage='Service Catalog'\n                />\n            )}\n            icon={icon}\n        >\n            <LandingMenuItem\n                dense={dense}\n                id='itest-id-create-from-service-catalog'\n                linkTo='/service-catalog'\n            >\n                <FormattedMessage\n                    id='Apis.Listing.import.from.service.catalog.title'\n                    defaultMessage='Import From Service Catalog'\n                />\n            </LandingMenuItem>\n        </Component>\n    );\n};\n\nexport default ServiceCatalogMenu;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\n\nconst PREFIX = 'MenuButton';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    paper: `${PREFIX}-paper`,\n    position: `${PREFIX}-position`\n};\n\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.root}`]: {\n        display: 'flex',\n    },\n\n    [`& .${classes.paper}`]: {\n        marginRight: theme.spacing(2),\n    },\n\n    [`& .${classes.position}`]: {\n        display: 'inherit',\n        zIndex: theme.zIndex.apiCreateMenu,\n    }\n}));\n\n/**\n * Button with dropdown menu\n *\n * @class MenuButton\n * @extends {React.Component}\n */\nclass MenuButton extends React.Component {\n    /**\n     *Creates an instance of MenuButton.\n     * @param {Object} props @inheritdoc\n     * @memberof MenuButton\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof MenuButton\n     */\n    handleToggle(event) {\n        this.setState((state) => ({ open: !state.open }));\n        this.anchorEl = event.currentTarget;\n    }\n\n    /**\n     *\n     *\n     * @param {React.SyntheticEvent} event\n     * @memberof MenuButton\n     */\n    handleClose(event) {\n        if (this.anchorEl.contains(event.target)) {\n            return;\n        }\n        this.setState({ open: false });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof MenuButton\n     */\n    render() {\n        const { children, menuList, buttonProps } = this.props;\n        const { open } = this.state;\n        return (\n            (<Root>\n                <Button\n                    id='itest-id-createapi'\n                    aria-owns={open ? 'menu-list-grow' : null}\n                    aria-haspopup='true'\n                    onClick={this.handleToggle}\n                    {...buttonProps}\n                >\n                    {children}\n                    {' '}\n                    ▼\n                </Button>\n                <Popper\n                    open={open}\n                    placement='bottom-start'\n                    anchorEl={this.anchorEl}\n                    transition\n                    disablePortal\n                    modifiers={{\n                        flip: {\n                            enabled: true,\n                        },\n                        preventOverflow: {\n                            enabled: true,\n                            boundariesElement: 'scrollParent',\n                        },\n                    }}\n                    className={classes.position}\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            id='menu-list-grow'\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={this.handleClose}>{menuList}</ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </Root>)\n        );\n    }\n}\n\nMenuButton.propTypes = {\n    classes: PropTypes.shape({ position: PropTypes.shape({}) }).isRequired,\n    menuList: PropTypes.element.isRequired,\n    children: PropTypes.shape({}).isRequired,\n    buttonProps: PropTypes.shape({}).isRequired,\n};\n\nexport default (MenuButton);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\nimport RestAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/RestAPIMenu';\nimport SoapAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/SoapAPIMenu';\nimport GraphqlAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/GraphqlAPIMenu';\nimport StreamingAPIMenu from 'AppComponents/Apis/Listing/Landing/Menus/StreamingAPIMenu';\nimport ServiceCatalogMenu from 'AppComponents/Apis/Listing/Landing/Menus/ServiceCatalogMenu';\nimport MenuButton from 'AppComponents/Shared/MenuButton';\nimport AIAPIMenu from '../Landing/Menus/AIAPIMenu';\n\nconst PREFIX = 'APICreateMenu';\n\nconst classes = {\n    dividerCls: `${PREFIX}-dividerCls`,\n    popover: `${PREFIX}-popover`,\n    popoverAPK: `${PREFIX}-popoverAPK`,\n};\n\nconst Root = styled('div')(({ theme }) => {\n    return {\n        [`& .${classes.dividerCls}`]: {\n            height: '180px',\n            position: 'absolute',\n            top: '50%',\n            '-ms-transform': 'translateY(-50%)',\n            transform: 'translateY(-50%)',\n            margin: 'auto',\n        },\n        [`& .${classes.popover}`]: {\n            [theme.breakpoints.down('md')]: {\n                width: '95vw',\n            },\n            [theme.breakpoints.up('md')]: {\n                width: '85vw',\n            },\n            [theme.breakpoints.up('lg')]: {\n                width: '65vw',\n            },\n            padding: theme.spacing(2),\n        },\n        [`& .${classes.popoverAPK}`]: {\n            [theme.breakpoints.down('sm')]: {\n                width: '55vw',\n            },\n            [theme.breakpoints.up('md')]: {\n                width: '75vw',\n            },\n            [theme.breakpoints.up('lg')]: {\n                width: '65vw',\n            },\n            padding: theme.spacing(2),\n        },\n    };\n});\n\nconst APICreateMenu = () => {\n    const theme = useTheme();\n    const { data: settings } = usePublisherSettings();\n    const [gateway, setGatewayType] = useState(false);\n    \n    const getGatewayType = () => {\n        if (settings != null) {\n            if (settings.gatewayTypes && settings.gatewayTypes.includes('Regular')) {\n                setGatewayType(true);\n            } else {\n                setGatewayType(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        getGatewayType();\n    }, [settings]);\n    \n\n    const {\n        graphqlIcon,\n        restApiIcon,\n        soapApiIcon,\n        streamingApiIcon,\n    } = theme.custom.landingPage.icons;\n    return (\n        !AuthManager.isNotCreator() && (settings && !settings.portalConfigurationOnlyModeEnabled) &&(\n            <Root>\n                <MenuButton\n                    buttonProps={{\n                        id: 'itest-create-api-menu-button',\n                        color: 'primary',\n                        variant: 'contained',\n                        'aria-label': 'View create API options',\n                    }}\n                    menuList=\n                        {gateway ? (\n                            <Grid\n                                className={classes.popover}\n                                container\n                                direction='row'\n                                justify='space-around'\n                                alignItems='flex-start'\n                                spacing={2}\n                                mt={1}\n                            >\n                                <RestAPIMenu isCreateMenu icon={restApiIcon} />\n                                <SoapAPIMenu isCreateMenu icon={soapApiIcon} />\n                                <GraphqlAPIMenu isCreateMenu icon={graphqlIcon} />\n                                <StreamingAPIMenu isCreateMenu icon={streamingApiIcon} />\n                                <AIAPIMenu isCreateMenu icon={restApiIcon} />\n                                <Box display={{ xs: 'none', md: 'block' }}>\n                                    <Divider className={classes.dividerCls} orientation='vertical' \n                                        variant='inset' />\n                                </Box>\n                                <ServiceCatalogMenu isCreateMenu icon={streamingApiIcon} />\n                            </Grid>\n                        ) : (\n                            <Grid\n                                className={classes.popoverAPK}\n                                container\n                                direction='row'\n                                justifyContent='flex-start'\n                                alignItems='flex-start'\n                                spacing={2}\n                            >\n                                <RestAPIMenu isCreateMenu icon={restApiIcon} />\n                                <GraphqlAPIMenu isCreateMenu icon={graphqlIcon} />\n                                <AIAPIMenu isCreateMenu icon={restApiIcon} />\n                            </Grid>\n                        )\n                        }\n                    \n                >\n                    <FormattedMessage id='Apis.Listing.Components.Create.API' defaultMessage='Create API' />\n                </MenuButton>\n            </Root>\n        )\n    );\n};\nexport default APICreateMenu;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/icons-material/List';\nimport GridOn from '@mui/icons-material/GridOn';\nimport { FormattedMessage } from 'react-intl';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { app } from 'Settings';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport APICreateMenu from './APICreateMenu';\n\nconst PREFIX = 'TopMenu';\n\nconst classes = {\n    button: `${PREFIX}-button`,\n    root: `${PREFIX}-root`,\n    mainTitleWrapper: `${PREFIX}-mainTitleWrapper`,\n    APICreateMenu: `${PREFIX}-APICreateMenu`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.button}`]: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n\n    [`&.${classes.root}`]: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n    },\n\n    [`& .${classes.mainTitleWrapper}`]: {\n        paddingLeft: 35,\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n\n    [`& .${classes.APICreateMenu}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\n/**\n *\n * @param props\n * @returns {*}\n */\nfunction getTitleForArtifactType(props, count) {\n    const {\n        isAPIProduct, query,\n    } = props;\n    const isSingular = count === 1;\n    if (query) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.search.results.singular'\n                defaultMessage='Search result'\n            />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.search.results' defaultMessage='Search results' />\n        );\n    } else if (isAPIProduct) {\n        return isSingular ? (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproduct.singular'\n                defaultMessage='API product'\n            />\n        ) : (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproducts.results'\n                defaultMessage='API products'\n            />\n        );\n    } else {\n        return isSingular ? (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.api.singular' defaultMessage='API' />\n        ) : (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n        );\n    }\n}\n\n/**\n *\n * Renders the top menu\n * @param {*} props\n * @returns JSX\n */\nfunction TopMenu(props) {\n    const {\n        data, setListType, count, isAPIProduct, listType, showToggle, query,\n    } = props;\n\n    const { data: settings } = usePublisherSettings();\n    const designAssistantEnabled = settings?.designAssistantEnabled;\n      \n    if (count > 0) {\n        return (\n            <Root className={classes.root}>\n                <div className={classes.mainTitleWrapper}>\n                    {data && (\n                        <>\n                            <Typography variant='h5' className={classes.mainTitle} component='h1'>\n                                {isAPIProduct && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.apiproducts'\n                                        defaultMessage='API Products'\n                                    />\n                                )}\n                                { query && (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.unified.search'\n                                        defaultMessage='Unified search'\n                                    />\n                                )}\n                                { !query && !isAPIProduct && (\n                                    <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n                                )}\n                            </Typography>\n                            <Box\n                                fontFamily='fontFamily'\n                                fontSize='body1.fontSize'\n                                display='flex'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.displaying'\n                                    defaultMessage='Total:'\n                                />\n                                <Box\n                                    id='itest-apis-listing-total'\n                                    fontWeight='fontWeightBold'\n                                    px={0.5}\n                                    mb={0.5}\n                                >\n                                    {count}\n                                </Box>\n                                {getTitleForArtifactType(props, count)}\n                            </Box>\n                        </>\n                    )}\n                </div>\n                <VerticalDivider height={70} />\n                <div className={classes.APICreateMenu}>\n                    {isAPIProduct && (\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            component={Link}\n                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'])}\n                            to='/api-products/create'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.an.api.product'\n                                defaultMessage='Create an API Product'\n                            />\n                        </Button>\n                    )}\n                    {!query && !isAPIProduct && (\n                        <APICreateMenu>\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.api'\n                                defaultMessage='Create API'\n                            />\n                        </APICreateMenu>\n                    )} \n                    {/* Button to Create API with AI */}\n                    {!query && !isAPIProduct && !isRestricted(['apim:api_create']) && designAssistantEnabled && (\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            component={Link}\n                            to='/apis/design-assistant'\n                            sx={{ marginLeft: '10px' }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.api.with.ai'\n                                defaultMessage='Create API with AI'\n                            />\n                            <img\n                                alt='API Design Assistant'\n                                src={`${app.context}/site/public/images/ai/DesignAssistant.svg`}\n                                style={{ marginLeft: 8, width: 15, height: 15 }}\n                            />\n                        </Button>\n                    )}\n                </div>\n                {showToggle && (\n                    <Box height={32} m='auto' mr={8}>\n                        <ButtonGroup color='primary' aria-label='outlined primary button group'>\n                            <IconButton\n                                onClick={() => setListType('grid')}\n                                aria-label='Switch to Grid View'\n                                size='large'>\n                                <GridOn color={listType === 'grid' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                            <IconButton\n                                onClick={() => setListType('list')}\n                                aria-label='Switch to List View'\n                                size='large'>\n                                <List color={listType === 'list' ? 'primary' : 'disabled'} />\n                            </IconButton>\n                        </ButtonGroup>\n                    </Box>\n                )}\n            </Root>\n        );\n    } else {\n        return null;\n    }\n}\n\nTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    setListType: PropTypes.func.isRequired,\n    listType: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape(PropTypes.object)).isRequired,\n    count: PropTypes.number.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    showToggle: PropTypes.bool.isRequired,\n};\n\nexport default (TopMenu);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { useTheme } from '@mui/material';\nimport OnboardingMenuCard from 'AppComponents/Shared/Onboarding/OnboardingMenuCard';\nimport Onboarding from 'AppComponents/Shared/Onboarding/Onboarding';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl, useIntl } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nfunction SampleAPI() {\n    const theme = useTheme();\n    const intl = useIntl();\n    const { apiproductAddIcon } = theme.custom.landingPage.icons;\n    return (\n        <Onboarding\n            title={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPI.SampleAPIProduct.title'\n                    defaultMessage='Let’s get started !'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='Apis.Listing.SampleAPIProduct.description'\n                    defaultMessage='Combine multiple API resources in to a single API'\n                />\n            )}\n        >\n            <OnboardingMenuCard\n                disabled={AuthManager.isNotPublisher()}\n                id='itest-id-create-api-product'\n                to='/api-products/create'\n                name={intl.formatMessage({\n                    id: 'Apis.Listing.SampleAPIProduct.onboarding.menu.card.name',\n                    defaultMessage: 'API Product',\n                })}\n                iconName={apiproductAddIcon}\n            />\n        </Onboarding>\n    );\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(injectIntl(SampleAPI));\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@mui/material/Link';\nimport PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LetterGenerator from 'AppComponents/Apis/Listing/components/ImageGenerator/LetterGenerator';\nimport Configurations from 'Config';\n\nconst PREFIX = 'DefThumb';\n\nconst classes = {\n    card: `${PREFIX}-card`,\n    thumbHeader: `${PREFIX}-thumbHeader`\n};\n\nconst StyledLink = styled(Link)((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.card}`]: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        maxWidth: theme.spacing(16),\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        overflowWrap: 'break-word', \n    },\n    \n    [`& .${classes.defaultCardContent}`]: {\n        height: '111px',\n    },\n\n    [`& .${classes.maxCardContent}`]: {\n        height: '208px',\n    },\n    \n    [`& .${classes.minCardContent}`]: {\n        height: '187px',\n    },\n}));\n\n\nconst DefThumb = (props) => {\n    const { def } = props;\n    const [isHover, setIsHover] = useState(false);\n    const toggleMouseOver = () => setIsHover(!isHover);\n    const linkTo = def.associatedType === 'API'\n        ? `/apis/${def.apiUUID}/api-definition`\n        : `/api-products/${def.apiUUID}/api-definition`;\n\n    let thumbIcon;\n    let configValue;\n    const { tileDisplayInfo } = Configurations.apis;\n    if (tileDisplayInfo.showBusinessDetails === true && tileDisplayInfo.showTechnicalDetails === true) {\n        configValue = 2;\n    } else if (tileDisplayInfo.showBusinessDetails === true || tileDisplayInfo.showTechnicalDetails === true) {\n        configValue = 1;\n    }\n    let cardContentClassName;\n    if (configValue === 1) {\n        cardContentClassName = classes.minCardContent;\n    } else if (configValue === 2) {\n        cardContentClassName = classes.maxCardContent;\n    } else {\n        cardContentClassName = classes.defaultCardContent;\n    }\n    return (\n        <StyledLink\n            underline='none'\n            component={RouterLink}\n            to={linkTo}\n            aria-hidden='true'\n        >\n            <Card\n                onMouseOver={toggleMouseOver}\n                onFocus={toggleMouseOver}\n                onMouseOut={toggleMouseOver}\n                onBlur={toggleMouseOver}\n                elevation={isHover ? 4 : 1}\n                className={classes.card}\n            >\n                <CardMedia\n                    width={240}\n                    component={LetterGenerator}\n                    height={140}\n                    title='Thumbnail'\n                    artifact={{ name: 'Def' }}\n                    charLength={3}\n                    ThumbIcon={thumbIcon}\n                />\n                <CardContent className={cardContentClassName}>\n                    <Grid\n                        container\n                        direction='column'\n                        justifyContent='space-evenly'\n                        alignItems='flex-start'\n                    >\n                        <Grid item>\n                            <Box display='flex' alignItems='center' flexDirection='row' fontFamily='fontFamily'>\n                                <Box\n                                    className={classes.thumbHeader}\n                                    color='text.primary'\n                                    fontSize='h4.fontSize'\n                                    ml={1}\n                                >\n                                    {def.name}\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item>\n                            <Box mt={3} fontFamily='fontFamily'>\n                                <Box color='primary.main'>\n                                    {def.associatedType}\n                                </Box>\n                                <Box color='text.primary' fontSize='h6.fontSize'>\n                                    {def.apiName}\n                                </Box>\n                                <Box color='text.secondary' fontSize='body1.fontSize'>\n                                    Version:\n                                    {' '}\n                                    {def.apiVersion}\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </StyledLink>\n    );\n};\n\nDefThumb.propTypes = {\n    def: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default DefThumb;\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nconst PREFIX = 'DefThumbPlain';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    bullet: `${PREFIX}-bullet`,\n    title: `${PREFIX}-title`,\n    pos: `${PREFIX}-pos`,\n    thumbHeader: `${PREFIX}-thumbHeader`,\n    contextBox: `${PREFIX}-contextBox`,\n    caption: `${PREFIX}-caption`,\n    imageDisplay: `${PREFIX}-imageDisplay`\n};\n\nconst StyledCard = styled(Card)((\n    {\n        theme\n    }\n) => ({\n    [`&.${classes.root}`]: {\n        minWidth: 200,\n        marginTop: 10,\n        marginRight: 10,\n        marginBottom: 10,\n    },\n\n    [`& .${classes.bullet}`]: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n\n    [`& .${classes.title}`]: {\n        fontSize: 14,\n    },\n\n    [`& .${classes.pos}`]: {\n        marginBottom: 12,\n    },\n\n    [`& .${classes.thumbHeader}`]: {\n        width: '150px',\n        color: '#444',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        overflowWrap: 'break-word', \n    },\n\n    [`& .${classes.contextBox}`]: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n\n    [`& .${classes.caption}`]: {\n        color: theme.palette.grey[700],\n    },\n\n    [`& .${classes.imageDisplay}`]: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    }\n}));\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nfunction DefThumbPlain(props) {\n\n    const { def } = props;\n    const linkTo = def.associatedType === 'API'\n        ? `/apis/${def.apiUUID}/api-definition`\n        : `/api-products/${def.apiUUID}/api-definition`;\n    return (\n        <StyledCard className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={linkTo} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: '#ccc' }}>\n                                    description\n                                </Icon>\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={def.name}\n                                className={classes.thumbHeader}\n                            >\n                                {def.name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                <Box mt={2}>\n                    <Typography variant='subtitle1' className={classes.contextBox}>\n                        {def.apiName}\n                    </Typography>\n                    <Typography\n                        variant='caption'\n                        gutterBottom\n                        align='right'\n                        className={classes.caption}\n                        Component='div'\n                    >\n                        <FormattedMessage\n                            id='Apis.Listing.components.ImageGenerator.DefThumb.apiName'\n                            defaultMessage='API Name'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {def.apiVersion}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DefThumb.apiVersion'\n                                defaultMessage='API Version'\n                            />\n                        </Typography>\n                    </Box>\n                </Box>\n\n\n            </CardContent>\n        </StyledCard>\n    );\n}\n\nexport default DefThumbPlain;\n","/*\n * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport DefThumbClassic from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DefThumbClassic';\nimport DefThumbPlain from 'AppComponents/Apis/Listing/components/ImageGenerator/APICards/DefThumbPlain';\n\n/**\n * Render a thumbnail\n * @param {JSON} props required pros.\n * @returns {JSX} Thumbnail rendered output.\n */\nexport default function DefThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    const { classes, def } = props;\n\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <DefThumbClassic classes={classes} def={def} />\n        );\n    }\n    return (\n        <DefThumbPlain def={def} />\n    );\n}\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme, styled, useTheme } from '@mui/material/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@mui/material/Icon';\nimport ApiThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/ApiThumb';\nimport DocThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/DocThumb';\nimport { Progress } from 'AppComponents/Shared';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APILanding from 'AppComponents/Apis/Listing/Landing';\nimport TopMenu from 'AppComponents/Apis/Listing/components/TopMenu';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport SampleAPIProduct from 'AppComponents/Apis/Listing/SampleAPI/SampleAPIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport DefThumb from '../components/ImageGenerator/DefThumb';\n\nconst PREFIX = 'TableView';\n\nconst classes = {\n    contentInside: `${PREFIX}-contentInside`,\n    apiNameLink: `${PREFIX}-apiNameLink`\n};\n\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.contentInside}`]: {\n        padding: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        '& > .MuiPaper-root': {\n            boxShadow: 'none',\n            backgroundColor: 'transparent',\n        },\n    },\n\n    [`& .${classes.apiNameLink}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(),\n        },\n        '& span.material-icons': {\n            marginLeft: 0,\n            color: '#444',\n            marginRight: theme.spacing(),\n            fontSize: 18,\n        },\n    }\n}));\n\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass TableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable toggle buttons\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[defaultApiView.length - 1];\n        } else {\n            defaultApiView = localStorage.getItem('publisher.listType') || defaultApiView;\n        }\n        const prevRowsPerPage = parseInt(localStorage.getItem('publisher.rowsPerPage'), 10) || 10;\n        this.state = {\n            apisAndApiProducts: null,\n            notFound: true,\n            listType: defaultApiView,\n            loading: true,\n            totalCount: -1,\n            rowsPerPage: prevRowsPerPage,\n            page: 0,\n        };\n        this.setListType = this.setListType.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        const { rowsPerPage, page } = this.state;\n        this.getData(rowsPerPage, page);\n        const userRowsPerPage = parseInt(localStorage.getItem('publisher.rowsPerPage'), 10);\n        if (userRowsPerPage) {\n            this.setState({ rowsPerPage: userRowsPerPage });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isAPIProduct, query } = this.props;\n        const { rowsPerPage, page } = this.state;\n        if (isAPIProduct !== prevProps.isAPIProduct || query !== prevProps.query) {\n            this.getData(rowsPerPage, page);\n        }\n    }\n\n    componentWillUnmount() {\n        // The foollowing is resetting the styles for the mui-datatables\n        const { theme } = this.props;\n        const themeAdditions = {\n            overrides: {\n                MUIDataTable: {\n                    tableRoot: {\n                        display: 'table',\n                        '& tbody': {\n                            display: 'table-row-group',\n                        },\n                        '& thead': {\n                            display: 'table-header-group',\n                        },\n                    },\n                },\n            },\n        };\n        Object.assign(theme, themeAdditions);\n    }\n\n    getMuiTheme = () => {\n        const { listType, totalCount } = this.state;\n        const { theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                    },\n                    tableRoot: {\n                        '& tbody': {\n                            backgroundColor: '#fff',\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                },\n            },\n        };\n        if (listType === 'grid') {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                backgroundColor: 'transparent',\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                    MuiTableBody: {\n                        root: {\n                            justifyContent: totalCount > 4 ? 'center' : 'flex-start',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(theme, muiTheme, themeAdditions);\n        return createTheme(adaptV4Theme(muiTheme));\n    };\n\n    // get apisAndApiProducts\n    getData = (rowsPerPage, page) => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        return this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            const { total } = pagination;\n            this.setState({\n                totalCount: total,\n                apisAndApiProducts: list,\n                notFound: false,\n                rowsPerPage,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        }).finally(() => {\n            this.setState({ loading: false });\n        });\n    };\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    setListType = (value) => {\n        localStorage.setItem('publisher.listType', value);\n        this.setState({ listType: value });\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        const { rowsPerPage } = this.state;\n        this.setState({ loading: true });\n        this.xhrRequest(rowsPerPage, page).then((data) => {\n            const { body } = data;\n            const { list, pagination } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n                totalCount: pagination.total,\n                page,\n            });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = (rowsPerPage, page) => {\n        const { isAPIProduct, query } = this.props;\n        if (query) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return API.search(composeQuery);\n        }\n        if (isAPIProduct) {\n            return APIProduct.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return API.all({ limit: rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    /**\n     *\n     * Update APIs list if an API get deleted in card or table view\n     * @param {String} apiUUID UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    updateData() {\n        const { rowsPerPage, page, totalCount } = this.state;\n        let newPage = page;\n        if (totalCount - 1 === rowsPerPage * page && page !== 0) {\n            newPage = page - 1;\n        }\n        this.getData(rowsPerPage, newPage);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TableView\n     */\n    render() {\n        const { intl, isAPIProduct, query } = this.props;\n        const {\n            loading, totalCount, rowsPerPage, apisAndApiProducts, notFound, listType, page,\n        } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[1];\n                            const apiId = tableMeta.rowData[0];\n                            if (isAPIProduct) {\n                                return (\n                                    <Link to={'/api-products/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api-product' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents/' + apiId + '/details'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.doc.flag'\n                                                defaultMessage=' [Doc]'\n                                            />\n                                            <span>{apiName}</span>\n                                        </Link>\n                                    );\n                                } else if (artifact.type === 'DEFINITION') {\n                                    const linkTo = artifact.associatedType === 'API'\n                                        ? `/apis/${artifact.apiUUID}/api-definition`\n                                        : `/api-products/${artifact.apiUUID}/api-definition`;\n                                    return (\n                                        <Link\n                                            to={linkTo}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>code</Icon>\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.def.flag'\n                                                defaultMessage=' [Def]'\n                                            />\n                                            <span>{artifact.name}</span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link to={'/apis/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n        ];\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            search: false,\n            count: totalCount,\n            serverSide: true,\n            page,\n            onChangePage: this.changePage,\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (newNumberOfRows) => {\n                let newPage;\n                if (page * newNumberOfRows > totalCount) {\n                    newPage = 0;\n                } else if (totalCount - 1 === newNumberOfRows * page && page !== 0) {\n                    newPage = page - 1;\n                }\n                localStorage.setItem('publisher.rowsPerPage', newNumberOfRows);\n                this.getData(newNumberOfRows, newPage);\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                    displayRows: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.rows',\n                        defaultMessage: 'of',\n                    }),\n                },\n                toolbar: {\n                    downloadCsv: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.tool.download.csv',\n                        defaultMessage: 'Download CSV',\n                    }),\n                    print: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.tool.print',\n                        defaultMessage: 'Print',\n                    }),\n                    viewColumns: intl.formatMessage({\n                        id: 'Mui.data.table.pagination.display.tool.view.columns',\n                        defaultMessage: '\"View Columns\"',\n                    }),\n                },\n            },\n        };\n        if (listType === 'grid') {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                const artifact = tableViewObj.state.apisAndApiProducts[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <DocThumb doc={artifact} />;\n                    } else if (artifact.type === 'DEFINITION') {\n                        return <DefThumb def={artifact} />;\n                    } else if (artifact.type === 'APIPRODUCT') {\n                        artifact.state = 'PUBLISHED';\n                        return <ApiThumb api={artifact} isAPIProduct updateData={this.updateData} />;\n                    } else {\n                        return (\n                            <ApiThumb api={artifact} isAPIProduct={isAPIProduct} updateData={this.updateData} />\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.customRowRender = null;\n            options.title = true;\n            options.filter = false;\n            options.print = true;\n            options.download = true;\n            options.viewColumns = true;\n        }\n        if (page === 0 && totalCount <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (!apisAndApiProducts) {\n            return <Progress per={90} message='Loading APIs ...' />;\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (apisAndApiProducts.length === 0 && !query) {\n            return (\n                (<Root>\n                    <TopMenu\n                        data={apisAndApiProducts}\n                        count={totalCount}\n                        setListType={this.setListType}\n                        isAPIProduct={isAPIProduct}\n                        listType={listType}\n                        showToggle={this.showToggle}\n                    />\n                    {isAPIProduct ? (\n                        <SampleAPIProduct />\n                    ) : (\n                        <APILanding />\n                    )}\n                </Root>)\n            );\n        }\n\n        return <>\n            <Root>\n                <TopMenu\n                    data={apisAndApiProducts}\n                    count={totalCount}\n                    setListType={this.setListType}\n                    isAPIProduct={isAPIProduct}\n                    listType={listType}\n                    showToggle={this.showToggle}\n                    query={query}\n                />\n                <div className={classes.contentInside}>\n                    {loading ? (\n                        <Progress\n                            per={96}\n                            message='Updating page ...'\n                        />\n                    )\n                        : (\n                            <StyledEngineProvider injectFirst>\n                                <ThemeProvider theme={this.getMuiTheme()}>\n                                    <MUIDataTable title='' data={apisAndApiProducts} columns={columns} \n                                        options={options} />\n                                </ThemeProvider>\n                            </StyledEngineProvider>\n                        )}\n                </div>\n            </Root>\n        </>;\n    }\n}\n\nTableView.propTypes = {\n    intl: PropTypes.shape({ formatMessage: PropTypes.func.isRequired }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    query: PropTypes.string,\n};\n\nTableView.defaultProps = {\n    query: '',\n};\n\nexport default injectIntl((props) => {\n    const theme = useTheme();\n    return <TableView {...props} theme={theme} />;\n});","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: DO we need this component ? this is a pure proxy just passing the props through this to children ? ~tmkb\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TableView from './TableView/TableView';\n\nconst PREFIX = 'Listing';\n\nconst classes = {\n    content: `${PREFIX}-content`\n};\n\nconst Root = styled('div')({\n    [`&.${classes.content}`]: {\n        flexGrow: 1,\n    },\n});\n\n/**\n * Render the APIs Listing page, This is the Default Publisher Landing page as well\n *\n * @function Listing\n * @returns {React.Component} @inheritdoc\n */\nfunction Listing(props) {\n    const { isAPIProduct, theme, location: { search } } = props;\n    // TODO: need to handle this search case separately ~tmkb\n    return (\n        <Root className={classes.content}>\n            <TableView isAPIProduct={isAPIProduct} theme={theme} query={search} />\n        </Root>\n    );\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({\n        content: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({}),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default (Listing);\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\n// @ts-ignore\nimport { app } from 'Settings';\nimport { styled } from '@mui/material/styles';\n\nconst PREFIX = 'ApiChatBanner';\n\nconst classes = {\n    tryAiBannerCont: `${PREFIX}-tryAiBannerCont`,\n    tryAiBannerImgWrap: `${PREFIX}-tryAiBannerImgWrap`,\n    tryAiBannerContentWrap: `${PREFIX}-tryAiBannerContentWrap`,\n    tryAiBannerContent: `${PREFIX}-tryAiBannerContent`,\n    tryAiBannerTriangle: `${PREFIX}-tryAiBannerTriangle`,\n};\n\nconst Root = styled('div')(({ theme }: any) => ({\n    [`& .${classes.tryAiBannerCont}`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingLeft: theme.spacing(1),\n        gridGap: theme.spacing(1.5),\n        maxWidth: theme.spacing(85),\n    },\n    [`& .${classes.tryAiBannerImgWrap}`]: {\n        flex: `0 0 ${theme.spacing(15)}px`,\n        maxWidth: theme.spacing(15),\n        fontSize: theme.spacing(15),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.tryAiBannerContentWrap}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.tryAiBannerContent}`]: {\n        background: theme.palette.grey[100],\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(0, 2, 2, 2),\n        position: 'relative',\n    },\n    [`& .${classes.tryAiBannerTriangle}`]: {\n        position: 'absolute',\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        top: 0,\n        left: theme.spacing(-3),\n        overflow: 'hidden',\n        '&:before': {\n            content: '\"\"',\n            display: 'block',\n            width: '200%',\n            height: '200%',\n            position: 'absolute',\n            borderRadius: '50%',\n            top: 0,\n            right: 0,\n            boxShadow: `${theme.spacing(2.5)} ${theme.spacing(-3.75)} 0 0 ${theme.palette.grey[100]}`,\n        },\n    },\n}));\n\nconst ApiChatBanner: React.FC = () => {\n    const intl = useIntl();\n    return (\n        <Root>\n            <Stack spacing={2} sx={{ maxWidth: '100%', alignItems: 'center', textAlign: 'center' }}>\n                <Box>\n                    <img\n                        alt='API Design Assistant'\n                        src={`${app.context}/site/public/images/ai/APIchatassistantImageWithColour.svg`}\n                        style={{ width: '200px', height: 'auto' }}\n                    />\n                </Box>\n                <Box className={classes.tryAiBannerContentWrap}>\n                    <Typography sx={{ fontSize: '1.0rem', fontWeight: 'bold' }}>\n                        Turn your ideas into reality in minutes with our Assistant!\n                    </Typography>\n                </Box>\n            </Stack>\n        </Root>\n    );\n};\n\nexport default ApiChatBanner;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { forwardRef } from 'react';\nimport {\n    Box,\n    InputBase,\n    Typography,\n} from '@mui/material';\nimport clsx from 'clsx';\nimport { styled, alpha } from '@mui/material/styles';\n\nconst PREFIX = 'TextInput';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    rootSmall: `${PREFIX}-rootSmall`,\n    rootLarge: `${PREFIX}-rootLarge`,\n    readOnlyDefault: `${PREFIX}-readOnlyDefault`,\n    readOnlyPlain: `${PREFIX}-readOnlyPlain`,\n    rounded: `${PREFIX}-rounded`,\n    focused: `${PREFIX}-focused`,\n    error: `${PREFIX}-error`,\n    textInput: `${PREFIX}-textInput`,\n    textInputLarge: `${PREFIX}-textInputLarge`,\n    inputAdornedEnd: `${PREFIX}-inputAdornedEnd`,\n    inputAdornedEndAlignTop: `${PREFIX}-inputAdornedEndAlignTop`,\n    textarea: `${PREFIX}-textarea`,\n    inputGroup: `${PREFIX}-inputGroup`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.root}`]: {\n        padding: theme.spacing(1.5, 1.5),\n        width: '100%',\n        minHeight: theme.spacing(5),\n        backgroundColor: theme.palette.common.white,\n        border: `1px solid ${alpha(theme.palette.primary.main, 0.5)}`,\n        borderRadius: 5,\n        '&$multiline': {\n            height: 'auto',\n            resize: 'auto',\n        },\n        '&$multilineReadonly': {\n            height: 'auto',\n            resize: 'none',\n            '& $textarea': {\n                height: 'auto',\n                resize: 'none',\n            },\n        },\n        '&$multilineResizeIndicator': {\n            height: 'auto',\n            resize: 'none',\n            '& $textarea': {\n                height: 'auto',\n                resize: 'none',\n            },\n        },\n        '&$rounded': {\n            paddingLeft: theme.spacing(2),\n        },\n        '&:hover': {\n            borderColor: `${alpha(theme.palette.primary.main, 0.5)}`,\n        },\n    },\n    [`& .${classes.rootSmall}`]: {\n        minHeight: theme.spacing(4),\n    },\n    [`& .${classes.rootLarge}`]: {\n        minHeight: theme.spacing(7),\n        borderRadius: 12,\n        padding: theme.spacing(1, 1, 1, 3),\n    },\n    [`& .${classes.readOnlyDefault}`]: {\n        boxShadow: `0 0 0 1px ${alpha(\n            theme.palette.common.black,\n            0.05,\n        )}, inset 0 2px 2px ${alpha(theme.palette.common.black, 0.05)}`,\n        border: 'none',\n        backgroundColor: theme.palette.secondary.light,\n    },\n    [`& .${classes.readOnlyPlain}`]: {\n        boxShadow: 'none',\n        border: 'none',\n        backgroundColor: theme.palette.common.white,\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    [`& .${classes.rounded}`]: {\n        borderRadius: theme.spacing(2.5),\n    },\n    [`& .${classes.focused}`]: {\n        borderColor: theme.palette.primary.light,\n        borderWidth: 1,\n    },\n    [`& .${classes.error}`]: {\n        background: theme.palette.error.light,\n        borderColor: theme.palette.error.main,\n        boxShadow: `0 0 0 1px ${theme.palette.error.light}, inset 0 2px 2px ${alpha(\n            theme.palette.error.light,\n            0.07,\n        )}`,\n        '&:hover': {\n            borderColor: theme.palette.error.main,\n        },\n    },\n    [`& .${classes.textInput}`]: {\n        minHeight: theme.spacing(2.5),\n        padding: theme.spacing(0.125, 0),\n        fontSize: theme.typography.body1.fontSize,\n        fontWeight: theme.typography.body1.fontWeight,\n        lineHeight: theme.typography.body1.lineHeight,\n    },\n    [`& .${classes.textInputLarge}`]: {\n        fontSize: theme.typography.overline.fontSize,\n        fontWeight: theme.typography.overline.fontWeight,\n        lineHeight: theme.typography.overline.lineHeight,\n    },\n    [`& .${classes.inputAdornedEnd}`]: {\n        '& .MuiInputAdornment-root': {\n            marginRight: theme.spacing(-1),\n        },\n    },\n    [`& .${classes.inputAdornedEndAlignTop}`]: {\n        '& .MuiInputAdornment-root': {\n            alignSelf: 'flex-end',\n            height: 'auto',\n            marginBottom: theme.spacing(0.25),\n        },\n    },\n    [`& .${classes.textarea}`]: {\n        resize: 'both',\n    },\n    [`& .${classes.inputGroup}`]: {\n        position: 'relative',\n    },\n}));\n\nconst TextInput = (\n    props,\n    ref,\n) => {\n    const {\n        label,\n        width,\n        readOnly,\n        error,\n        helperText,\n        rows,\n        multiline,\n        optional,\n        loading,\n        tooltip,\n        inputTooltip,\n        size = 'medium',\n        info,\n        actions,\n        testId,\n        variant = 'default',\n        rounded = false,\n        resizeIndicator = true,\n        ...rest\n    } = props;\n\n    return (\n        <Root>\n            <Box width={width}>\n                <Box className={classes.inputGroup}>\n                    <InputBase\n                        ref={ref}\n                        classes={{\n                            root: clsx({\n                                [classes.root]: true,\n                                [classes.rootSmall]: size === 'small',\n                                [classes.rootLarge]: size === 'large',\n                                [classes.readOnlyDefault]: readOnly && variant === 'default',\n                                [classes.readOnlyPlain]: readOnly && variant === 'plain',\n                                [classes.multiline]: multiline,\n                                [classes.multilineReadonly]: multiline && readOnly,\n                                [classes.multilineResizeIndicator]:\n                                    multiline && !resizeIndicator,\n                                [classes.rounded]: rounded,\n                            }),\n                            focused: classes.focused,\n                            error: classes.error,\n                            inputMultiline: classes.textarea,\n                            input: clsx({\n                                [classes.textInput]: true,\n                                [classes.textInputLarge]: size === 'large',\n                            }),\n                            adornedEnd: clsx({\n                                [classes.inputAdornedEnd]: true,\n                                [classes.inputAdornedEndAlignTop]: multiline,\n                            }),\n                        }}\n                        readOnly={readOnly}\n                        {...rest}\n                        error={error}\n                        rows={rows}\n                        multiline={multiline}\n                        data-cyid={testId}\n                    />\n                </Box>\n                {helperText && (\n                    <Box display='flex' alignItems='center' ml={1}>\n                        <Typography variant='body2' component='p'>\n                            {helperText}\n                        </Typography>\n                    </Box>\n                )}\n            </Box>\n        </Root>\n    );\n};\n\nexport default forwardRef(TextInput);\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport Button from '@mui/material/Button';\nimport { Box, Typography } from '@mui/material';\nimport Send from '@mui/icons-material/SendOutlined';\nimport { styled } from '@mui/system';\nimport TextInput from './TextInput/TextInput';\nimport { createPortal } from 'react-dom';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\n\nconst PREFIX = 'ApiChatExecute';\n\nconst CHARACTERS: string[] = []; \n\nconst classes = {\n    tryAiBottom: `${PREFIX}-tryAiBottom`,\n    tryAiBottomInner: `${PREFIX}-tryAiBottomInner`,\n    reExecuteWrap: `${PREFIX}-reExecuteWrap`,\n    tryAiBottomTextInputWrap: `${PREFIX}-tryAiBottomTextInputWrap`,\n    disclaimerText: `${PREFIX}-disclaimerText`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.tryAiBottom}`]: {\n        position: 'sticky',\n        left: 0,\n        right: 0,\n        marginLeft: theme.spacing(-1),\n        marginRight: theme.spacing(-1),\n    },\n    [`& .${classes.tryAiBottomInner}`]: {\n        padding: theme.spacing(0.25, 1),\n    },\n    [`& .${classes.reExecuteWrap}`]: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    [`& .${classes.tryAiBottomTextInputWrap}`]: {\n        maxWidth: '100%',\n        overflow: 'hidden',\n    },\n    [`& .${classes.disclaimerText}`]: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\nconst ExecuteQuery = styled(Send)({\n    transform: 'rotate(-40deg)',\n    marginBottom: '5px',\n});\n\nconst MentionMenu = ({\n    chars,\n    index,\n    top,\n    left,\n    complete,\n}: {\n    chars: string[];\n    index: number;\n    top: number;\n    left: number;\n    complete: (index: number) => void;\n}) => {\n    return (\n        <div\n            style={{\n                position: 'fixed',\n                top: top + 120,\n                left: left + 100,\n                width: '250px',\n                maxHeight: '100px',\n                fontSize: '14px',\n                fontFamily: 'Open Sans',\n                border: 'solid 1px #E0E0E0',\n                borderRadius: '8px',\n                background: 'white',\n                boxShadow: '0 4px 6px rgba(0,0,0,0.1)',\n                cursor: 'pointer',\n                zIndex: 1000,\n                overflowY: 'auto',\n                overflowX: 'hidden',\n            }}\n        >\n            {chars.map((c, i) => (\n                <div\n                    key={c}\n                    style={{\n                        padding: '10px 15px',\n                        transition: 'background-color 0.2s ease',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        ...(index === i \n                            ? {\n                                color: 'white',\n                                background: '#2A6AD3',\n                            } \n                            : {\n                                '&:hover': {\n                                    backgroundColor: '#F5F5F5',\n                                }\n                            }\n                        ),\n                    }}\n                    onMouseDown={(e) => {\n                        e.preventDefault();\n                        complete(i);\n                    }}\n                >\n                    {c}\n                </div>\n            ))}\n        </div>\n    );\n};\n\ninterface ApiChatExecuteProps {\n    lastQuery: string;\n    inputQuery: string;\n    handleQueryChange: (\n      event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => void;\n    handleExecute: () => Promise<void>;\n    paths?: string[]; \n    loading?: boolean;\n}\n\nconst ApiChatExecute: React.FC<ApiChatExecuteProps> = ({\n    lastQuery,\n    inputQuery,\n    handleQueryChange,\n    handleExecute,\n    paths = [],\n    loading = false,\n}) => {\n    const intl = useIntl();\n    const QUERY_CHARACTER_LIMIT = 500;\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    const [mentionPos, setMentionPos] = useState<{\n        top: number;\n        left: number;\n        caret: number;\n    } | null>(null);\n    const [mentionIndex, setMentionIndex] = useState<number>(0);\n    const [dynamicCharacters, setDynamicCharacters] = useState<string[]>([]);\n    const { data: settings }: any = usePublisherSettings();\n    const aiAuthTokenProvided = settings?.aiAuthTokenProvided;\n    const designAssistantEnabled = settings?.designAssistantEnabled;\n\n    useEffect(() => {\n        const transformedPaths = paths.map(path => \n            path.startsWith('/') ? path : `/${path}`\n        );\n        setDynamicCharacters(transformedPaths);\n    }, [paths]);\n\n    const MAX_LIST_LENGTH = 8;\n    const MENTION_REG = /\\B\\/([\\-+\\w]*)$/;\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const value = event.target.value;\n        handleQueryChange(event);\n    \n        if (textareaRef.current) {\n            const selectionStart = textareaRef.current.selectionStart;\n            const textBeforeCursor = value.slice(0, selectionStart);\n            const match = textBeforeCursor.match(MENTION_REG);\n    \n            if (match) {\n                const rect = textareaRef.current.getBoundingClientRect();\n                \n                setMentionPos({\n                    top: rect.top - 80,\n                    left: rect.left + 20,\n                    caret: selectionStart\n                });\n                setMentionIndex(0);\n            } else {\n                setMentionPos(null);\n                setMentionIndex(0);\n            }\n        }\n    };\n\n    const filteredCharacters = useMemo(() => {\n        if (!mentionPos) return [];\n        const targetText = inputQuery.slice(0, mentionPos.caret);\n        const match = targetText.match(MENTION_REG);\n        const name = match?.[1] ?? \"\";\n        \n        return dynamicCharacters\n            .filter((c) =>\n                c.slice(1).toLowerCase().startsWith(name.toLowerCase())\n            )\n            .slice(0, MAX_LIST_LENGTH)\n            .map(c => c.slice(1));\n    }, [inputQuery, mentionPos, dynamicCharacters]);\n\n    const completeMention = (i: number) => {\n        if (!textareaRef.current || !mentionPos) return;\n\n        const selected = filteredCharacters[i];\n        const match = inputQuery.slice(0, mentionPos.caret).match(MENTION_REG);\n\n        const newValue = inputQuery + (match ? selected : '');\n\n        handleQueryChange({ \n            target: { \n                value: newValue \n            } \n        } as React.ChangeEvent<HTMLTextAreaElement>);\n\n        setMentionPos(null);\n        setMentionIndex(0);\n\n        if (textareaRef.current) {\n            const newLength = newValue.length;\n            textareaRef.current.setSelectionRange(newLength, newLength);\n        }\n    };\n    \n    const handleKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (!mentionPos || !filteredCharacters.length) return;\n\n        switch (event.code) {\n            case \"ArrowUp\":\n                event.preventDefault();\n                const nextIndex = mentionIndex <= 0 ? filteredCharacters.length - 1 : mentionIndex - 1;\n                setMentionIndex(nextIndex);\n                break;\n            case \"ArrowDown\":\n                event.preventDefault();\n                const prevIndex = mentionIndex >= filteredCharacters.length - 1 ? 0 : mentionIndex + 1;\n                setMentionIndex(prevIndex);\n                break;\n            case \"Enter\":\n                event.preventDefault();\n                completeMention(mentionIndex);\n                break;\n            case \"Escape\":\n                event.preventDefault();\n                setMentionPos(null);\n                setMentionIndex(0);\n                break;\n        }\n    };\n\n    return (\n        <Root>\n            <Box className={classes.tryAiBottom}>\n                <Box className={classes.tryAiBottomInner}>\n                    <Box className={classes.tryAiBottomTextInputWrap} pl={2} pr={2}>\n                        <TextInput\n                            ref={textareaRef}\n                            fullWidth\n                            name='query'\n                            value={inputQuery}\n                            placeholder={intl.formatMessage({\n                                id: 'Apis.Details.ApiChat.components.ApiChatExecute.queryInput.placeholder',\n                                defaultMessage: 'Describe your API design requirements...',\n                            })}\n                            onChange={handleInputChange}\n                            onKeyDown={handleKeyDown}\n                            testId='nl-query-input'\n                            multiline\n                            disabled={!aiAuthTokenProvided||!designAssistantEnabled}\n                            sx={{\n                                '& .TextInput-textarea': {\n                                    resize: 'none',\n                                },\n                            }}\n                            resizeIndicator={false}\n                            onKeyPress={(event: { key: string; preventDefault: () => void; }) => {\n                                if (event.key === 'Enter') {\n                                    event.preventDefault();\n                                    handleExecute();\n                                }\n                            }}\n                            endAdornment={(\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={handleExecute}\n                                    id='run-agent-button'\n                                    disabled={loading}\n                                >\n                                <ExecuteQuery />\n                                </Button>\n                            )}\n                            inputProps={{\n                                maxLength: QUERY_CHARACTER_LIMIT,\n                            }}\n                        />\n                        <Box display='flex' justifyContent='flex-end' mt={1} mr={2} >\n                            <Typography variant='caption'>\n                                {inputQuery.length}\n                                /\n                                {QUERY_CHARACTER_LIMIT}\n                            </Typography>\n                        </Box>\n                        <Box className={classes.disclaimerText}>\n                            <Typography variant='body2' color='textSecondary' component='p'>\n                                {intl.formatMessage({\n                                    id: 'Apis.Details.ApiChat.components.ApiChatExecute.disclaimer.label',\n                                    defaultMessage:\n                    'It is prudent to exercise a degree of caution and thoughtfulness, as language models'\n                    + ' may exhibit some degree of unpredictability at times.',\n                                })}\n                            </Typography>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n\n            {mentionPos && filteredCharacters.length > 0 && createPortal(\n                <MentionMenu\n                    top={mentionPos.top}\n                    left={mentionPos.left}\n                    chars={filteredCharacters}\n                    index={mentionIndex}\n                    complete={completeMention}\n                />,\n                document.body\n            )}\n        </Root>\n    );\n};\n\nexport default ApiChatExecute;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion, { AccordionProps } from '@mui/material/Accordion';\nimport MuiAccordionSummary, {\n  AccordionSummaryProps,\n} from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\ninterface CustomizedAccordionsProps {\n  title: string;\n  description: string;\n  onAdd: (title: string) => void;\n  onRemove: (title: string) => void;\n}\n\nconst Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  width: '100%',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&::before': {\n    display: 'none',\n  },\n}));\n\nconst AccordionSummary = styled((props: AccordionSummaryProps & { active: boolean }) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme, active }) => ({\n  backgroundColor: active ? '#bbe7f0' : 'rgba(0, 0, 0, .03)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  marginLeft: 'auto',\n}));\n\nconst CustomizedAccordions: React.FC<CustomizedAccordionsProps> = ({ title, description, onAdd, onRemove }) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const [isAdded, setIsAdded] = React.useState(false);\n\n  const handleToggleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleButtonClick = () => {\n    if (isAdded) {\n      onRemove(title);\n    } else {\n      onAdd(title);\n    }\n    setIsAdded(!isAdded);\n  };\n\n  return (\n    <div>\n      <Accordion expanded={expanded} onChange={handleToggleExpand}>\n        <AccordionSummary active={isAdded}>\n          <Typography>{title}</Typography>\n          <StyledButton\n            variant=\"contained\"\n            color={isAdded ? 'error' : 'primary'}\n            onClick={(event) => {\n              event.stopPropagation();\n              handleButtonClick();\n            }}\n          >\n            {isAdded ? 'REMOVE' : 'ADD'}\n          </StyledButton>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>{description}</Typography>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default CustomizedAccordions;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Box from '@mui/material/Box';\nimport { styled, alpha } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\nimport xmlFormat from 'xml-formatter';\nimport CustomizedAccordions from './CustomizedAccordions';\nimport Button from '@mui/material/Button';\nimport AutoAwesomeIcon from '@mui/icons-material/AutoAwesome';\n\nconst PREFIX = 'ApiChatResponse';\nconst CONTENT_TYPE: string = 'Content-Type';\nconst APPLICATION_JSON: string = 'application/json';\nconst APPLICATION_XML: string = 'application/xml';\nconst TEXT_PLAIN: string = 'text/plain';\n\nconst classes = {\n    finalOutcomeContent: `${PREFIX}-finalOutcomeContent`,\n    lastQueryWrap: `${PREFIX}-lastQueryWrap`,\n    queryProcessLoader: `${PREFIX}-queryProcessLoader`,\n    responseBannerContentWrap: `${PREFIX}-responseBannerContentWrap`,\n    responseBannerContent: `${PREFIX}-responseBannerContent`,\n    responseBannerTriangle: `${PREFIX}-responseBannerTriangle`,\n    queryBannerTriangle: `${PREFIX}-queryBannerTriangle`,\n    queryBannerContent: `${PREFIX}-queryBannerContent`,\n    queryBannerContentWrap: `${PREFIX}-queryBannerContentWrap`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.finalOutcomeContent}`]: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        textAlign: 'justify',\n    },\n    [`& .${classes.lastQueryWrap}`]: {\n        margin: theme.spacing(1, 4),\n    },\n    [`& .${classes.queryProcessLoader}`]: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    [`& .${classes.responseBannerContentWrap}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    [`& .${classes.queryBannerContentWrap}`]: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        marginBottom:'40px',\n    },\n    [`& .${classes.responseBannerContent}`]: {\n        width: '100%',\n        background: theme.palette.grey[100],\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(0, 2, 2, 2),\n        position: 'relative',\n    },\n    [`& .${classes.queryBannerContent}`]: {\n        background: `${alpha(theme.palette.primary.main, 0.1)}`,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(2, 0, 2, 2),\n        position: 'relative',\n    },\n    [`& .${classes.queryBannerTriangle}`]: {\n        color: 'red',\n        position: 'absolute',\n        width: theme.spacing(33),\n        height: theme.spacing(33),\n        top: 0,\n        right: theme.spacing(-2),\n        overflow: 'hidden',\n        '&:before': {\n            content: '\"\"',\n            display: 'block',\n            width: '200%',\n            height: '200%',\n            position: 'absolute',\n            borderRadius: '50%',\n            top: 0,\n            left: 0,\n        },\n    },\n    [`& .${classes.responseBannerTriangle}`]: {\n        position: 'absolute',\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        top: 0,\n        left: theme.spacing(-2),\n        overflow: 'hidden',\n        '&:before': {\n            content: '\"\"',\n            display: 'block',\n            width: '200%',\n            height: '200%',\n            position: 'absolute',\n            borderRadius: '50%',\n            top: 0,\n            right: 0,\n        },\n    },\n}));\n\n\n  interface Message {\n    role: 'user' | 'system'; \n    content: string | Record<string, { title: string; description: string }>;\n    suggestions: boolean;\n  }\n  \n  interface ApiChatResponse {\n    messages: Message[];\n    lastQuery: string;\n    executionResults: any;\n    finalOutcome: Record<string, { title: string, description: string }> | string;\n    onTitlesSelected: (titles: string[]) => void;\n  }\n  \n\n  /**\n * Renders the API Chat results view.\n * @returns {TSX} API Chat results view to render.\n */\n  const ApiChatResponse: React.FC<ApiChatResponse> = ({ \n    messages,\n    lastQuery,\n    executionResults,\n    finalOutcome,\n    onTitlesSelected,\n }) => {\n\n    const intl = useIntl();\n    const [user, setUser] = useState('You');\n    const [selectedTitles, setSelectedTitles] = useState<string[]>([]);\n\n    const copyText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.ApiChatResponse.CopyToClipboard.copyText',\n        defaultMessage: 'Copy cURL to Clipboard',\n    });\n    const copiedText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.ApiChatResponse.CopyToClipboard.copiedText',\n        defaultMessage: 'Copied',\n    });\n\n    const [copyBtnText, setCopyBtnText] = useState(copyText);\n\n    const handleTooltipClose = () => {\n        setCopyBtnText(copyText);\n    };\n\n    /**\n     * Infer the content type of the response.\n     *\n     * @param {string} str Response body.\n     * @returns {string} Content type of the response.\n     */\n    const inferContentType = (str: string) => {\n        const trimmedStr = str.trim();\n        const xmlRegex = /^\\s*<[^>]+>/;\n        const jsonRegex = /^[\\\\{\\\\[](.*?)[\\\\}\\]]$/;\n\n        if (xmlRegex.test(trimmedStr)) {\n            return APPLICATION_XML;\n        }\n        if (jsonRegex.test(trimmedStr)) {\n            try {\n                JSON.parse(trimmedStr);\n                return APPLICATION_JSON;\n            } catch (error) {\n                // Handle potential invalid JSON structure\n            }\n        }\n        return TEXT_PLAIN;\n    };\n\n    /**\n     * Renders the execution result body.\n     *\n     * @param {any} executionResult Execution result to render.\n     * @returns {JSX.Element} Execution result body to render.\n     */\n    const renderExecutionResultBody = (executionResult: any) => {\n        // Determine content type\n        let contentType = APPLICATION_JSON;\n        const noContentType = executionResult.headers && Object.keys(executionResult.headers).length === 0;\n        if (noContentType) {\n            contentType = inferContentType(executionResult.body);\n        } else {\n            contentType = executionResult.headers[CONTENT_TYPE];\n        }\n\n        if (contentType.includes(APPLICATION_JSON) && executionResult.body !== '') {\n        } else if (contentType.includes(APPLICATION_XML) && executionResult.body !== '') {\n            const formattedMessage = xmlFormat(executionResult.body);\n        } else {\n            return (\n                <Typography variant='body1'>\n                    {executionResult.body}\n                </Typography>\n            );\n        }\n    };\n\n    const capitalizeWords = (text: string): string => {\n        if (typeof text !== 'string') return text;\n        return text\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1)) \n            .join(' ');\n    };\n\n    const handleAddTitle = (title: string) => {\n        setSelectedTitles((prevTitles) => [...prevTitles, title]);\n    };\n\n    const handleRemoveTitle = (title: string) => {\n        setSelectedTitles((prevTitles) => prevTitles.filter((t) => t !== title));\n    };\n\n    const handleApplyChanges = () => {\n        onTitlesSelected(selectedTitles);\n    };\n\n    return (\n        <Box>\n            {messages.map((message, index) => (\n                <Box key={index} display=\"flex\" justifyContent={message.role === 'user' ? 'flex-end' : 'flex-start'}>\n                    {message.role === 'system' ? (\n                        <Box ml={2} mr={6} mt={-2.5}>\n                            <Box \n                                sx={{ \n                                    display: 'flex', \n                                    alignItems: 'center', \n                                    justifyContent: 'flex-start', \n                                    gap: 1,\n                                    mb: 1,\n                                    mt: 3\n                                }}\n                            >\n                                <AutoAwesomeIcon fontSize='large' sx={{ color: '#10597f', fontSize: 22 }} />\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                                    Assistant\n                                </Typography>\n                            </Box>\n\n                            <Box\n                                sx={{\n                                    backgroundColor: '#f0f0f0',\n                                    padding: 2,\n                                    borderRadius: '10px',\n                                    position: 'relative',\n                                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n                                    maxWidth: '60%',\n                                    mt: 2,\n                                    mb: 2,\n                                }}\n                            >\n                                <Box\n                                    sx={{\n                                        width: 0,\n                                        height: 0,\n                                        borderLeft: '10px solid transparent',\n                                        borderRight: '10px solid transparent',\n                                        borderBottom: '10px solid #f0f0f0',\n                                        position: 'absolute',\n                                        top: '-10px',\n                                        left: '10px',\n                                    }}\n                                />\n                                {message.suggestions ? (\n                                    <>\n                                        <Typography variant=\"body1\" sx={{ padding: 2, whiteSpace: 'pre-line' }}>\n                                            I have successfully generated your API! To further enhance its functionality and\n                                            performance, here are a few expert recommendations to elevate your API to the next\n                                            level.{\"\\n\"}{\"\\n\"}If everything looks good, you can click the{\" \"}\n                                            <span style={{ color: '#3764b3', fontWeight: 'bold' }}>Create API</span> button\n                                            on the right-side panel to proceed.\n                                        </Typography>\n\n                                        <Typography variant=\"body1\">\n                                            {(() => {\n                                                let parsedContent;\n\n                                                // Attempt to parse the message content\n                                                if (typeof message.content === 'string') {\n                                                    try {\n                                                        parsedContent = JSON.parse(message.content);\n                                                    } catch (error) {\n                                                        console.error('Failed to parse message content:', error);\n                                                        return (\n                                                            <Typography variant=\"body2\" color=\"error\">\n                                                                Unable to display suggestions due to a formatting issue in the content.\n                                                            </Typography>\n                                                        );\n                                                    }\n                                                } else {\n                                                    parsedContent = message.content;\n                                                }\n\n                                                // Check if parsed content is a valid object\n                                                if (\n                                                    typeof parsedContent === 'object' &&\n                                                    parsedContent !== null &&\n                                                    !Array.isArray(parsedContent)\n                                                ) {\n                                                    return Object.keys(parsedContent).map((key) => {\n                                                        const item = parsedContent[key];\n\n                                                        // Validate item structure\n                                                        if (item && item.title && item.description) {\n                                                            return (\n                                                                <CustomizedAccordions\n                                                                    key={key}\n                                                                    title={capitalizeWords(item.title)}\n                                                                    description={capitalizeWords(item.description)}\n                                                                    onAdd={handleAddTitle}\n                                                                    onRemove={handleRemoveTitle}\n                                                                />\n                                                            );\n                                                        } else {\n                                                            console.warn(`Invalid item structure for key: ${key}`, item);\n                                                            return null;\n                                                        }\n                                                    });\n                                                } else {\n                                                    console.error('Parsed content is not a valid object:', parsedContent);\n                                                    return (\n                                                        <Typography variant=\"body2\" color=\"error\">\n                                                            Unable to render suggestions due to invalid content format.\n                                                        </Typography>\n                                                    );\n                                                }\n                                            })()}\n                                        </Typography>\n\n                                        <Box marginTop={2}>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={handleApplyChanges}>\n                                                APPLY CHANGES\n                                            </Button>\n                                        </Box>\n                                    </>\n                                ) : (\n                                    <Typography variant=\"body1\" style={{ whiteSpace: 'pre-wrap' }}>\n                                        {message.content}\n                                    </Typography>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box\n                            sx={{\n                                maxWidth: '60%',\n                                textAlign: 'right',\n                                mt: 2,\n                                mb: 2,\n                                mr: 3,\n                            }}\n                        >\n                            <Box \n                                sx={{ \n                                    display: 'flex', \n                                    alignItems: 'center', \n                                    justifyContent: 'flex-end', \n                                    gap: 1,\n                                    mb: 1 \n                                }}\n                            >\n                                <AccountCircleIcon fontSize='large' sx={{ color: '#10597f', fontSize: 25 }} />\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                                    You\n                                </Typography>\n                            </Box>\n                            <Box sx={{ position: 'relative' }}>\n                                <Box\n                                    sx={{\n                                        width: 0,\n                                        height: 0,\n                                        borderLeft: '10px solid transparent',\n                                        borderRight: '10px solid transparent',\n                                        borderBottom: '10px solid #e3f5fa',\n                                        position: 'absolute',\n                                        top: '-10px',\n                                        right: '10px',\n                                    }}\n                                />\n                                <Box\n                                    sx={{\n                                        backgroundColor: '#e3f5fa',\n                                        padding: 2,\n                                        borderRadius: '10px',\n                                        color: '#000',\n                                        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n                                        display: 'inline-block',\n                                    }}\n                                >\n                                    <Typography variant=\"body1\">{message.content}</Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                    )}\n                </Box>\n            ))}\n        </Box>\n    );\n};\n\nexport default ApiChatResponse;\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\n\nconst PREFIX = 'SampleQueryCard';\n\nconst classes = {\n    sampleQuery: `${PREFIX}-sampleQuery`,\n    sampleQueryCard: `${PREFIX}-SampleQueryCard`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`& .${classes.sampleQuery}`]: {\n        maxHeight: '25px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        width: '250px',\n    },\n}));\n\nexport interface SampleQuery {\n    scenario: string;\n    query: string;\n}\n\ninterface SampleQueryCardProps {\n  onExecuteClick: (query: string) => void;\n  queryHeading: string;\n  queryData: string;\n}\n\nconst SampleQueryCard: React.FC<SampleQueryCardProps> = ({\n    onExecuteClick,\n    queryHeading,\n    queryData,\n}) => {\n    const intl = useIntl();\n\n    const copyText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.CopyToClipboard.copyText',\n        defaultMessage: 'Copy to Clipboard',\n    });\n    const copiedText = intl.formatMessage({\n        id: 'Apis.Details.ApiChat.components.CopyToClipboard.copiedText',\n        defaultMessage: 'Copied',\n    });\n\n    const [copyBtnText, setCopyBtnText] = useState(copyText);\n\n    const handleTooltipClose = () => {\n        setCopyBtnText(copyText);\n    };\n\n    const handleCopyClick = (query: string) => {\n        setCopyBtnText(copiedText);\n    };\n\n    const { data: settings }: any = usePublisherSettings();\n    const aiAuthTokenProvided = settings?.aiAuthTokenProvided;\n    const designAssistantEnabled = settings?.designAssistantEnabled;\n\n    return (\n        <Root>\n            <Card \n                className={classes.sampleQueryCard}\n                sx={{ \n                    '&:hover': {\n                        backgroundColor: 'transparent',\n                        cursor: 'default'\n                    },\n                    border: 'none',\n                }}\n            >\n                <CardContent sx={{ '&:last-child': { paddingBottom: '16px' } }}>\n                    <Box display=\"flex\" flexDirection=\"row\" height={1} alignItems=\"center\" justifyContent=\"space-between\">\n                        <Box>\n                            <Typography variant=\"body1\">\n                                {queryHeading}\n                            </Typography>\n                        </Box>\n                        <Box>\n                            <Button\n                                size=\"small\"\n                                id=\"sample-query-execute\"\n                                variant=\"outlined\"\n                                onClick={() => onExecuteClick(queryHeading)}\n                                disabled={!designAssistantEnabled || !aiAuthTokenProvided}\n                            >\n                                {intl.formatMessage({\n                                    id: 'Apis.Details.ApiChat.components.SampleQueryCard.executeButton',\n                                    defaultMessage: 'Try It',\n                                })}\n                            </Button>\n                        </Box>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Root>\n    );\n};\n\nexport default SampleQueryCard;\n","\n      import API from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js!./swagger-ui-overrides.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js!./swagger-ui-overrides.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './swagger-ui-overrides.css';\nimport SwaggerUILib from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\n\n\n// Plugins to disable specific features in Swagger UI\nconst disableAuthorizeAndInfoPlugin = function () {\n    return {\n        wrapComponents: {\n            info: () => () => null,\n            authorizeBtn: () => () => null\n        },\n    };\n};\n\nconst disableTryItOutPlugin = function () {\n    return {\n        statePlugins: {\n            spec: {\n                wrapSelectors: {\n                    allowTryItOutFor: () => () => false,\n                },\n            },\n        },\n    };\n};\n\n/**\n * SwaggerUI component to render the OpenAPI spec.\n * \n * @param {Object} props - Component props\n * @param {Object} props.spec - The OpenAPI spec in JSON or YAML format\n */\nconst SwaggerUI = ({ spec }) => {\n    const componentProps = {\n        spec,\n        validatorUrl: null,\n        docExpansion: 'list',\n        defaultModelsExpandDepth: -1,\n        plugins: [disableAuthorizeAndInfoPlugin, disableTryItOutPlugin],\n    };\n\n    return (\n        <div\n            style={{\n                height: '100%',\n                maxHeight: '70vh',\n                overflowY: 'auto',\n            }}\n        >\n            <SwaggerUILib {...componentProps} />\n        </div>\n    );\n};\n\nSwaggerUI.propTypes = {\n    spec: PropTypes.object.isRequired,\n};\n\nexport default SwaggerUI;\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Editor as MonacoEditor } from '@monaco-editor/react';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport SwaggerUI from './swaggerUIChatbot/SwaggerUI';\nimport { Typography } from '@mui/material';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport 'swagger-ui-react/swagger-ui.css';\nimport CloudDownloadRounded from '@mui/icons-material/CloudDownloadRounded';\n\ninterface DisplayCodeProps {\n  finalOutcomeCode: string;\n  apiType: string;\n  sessionId: string;\n}\n\nconst DisplayCode: React.FC<DisplayCodeProps> = ({ finalOutcomeCode, apiType, sessionId }) => {\n  const [showCode, setShowCode] = useState(false);\n\n  const handleDownload = () => {\n    const fileExtension = apiType === 'GraphQL' ? 'graphql' : 'yaml';\n    const blob = new Blob([finalOutcomeCode], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `api-source.${fileExtension}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <Box sx={{ width: '100%', height: '85vh' }}>\n      <Stack spacing={0} sx={{ height: '100%', mt: 2 }}>\n        <Box\n          sx={{\n            height: '5%',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'flex-end',\n            paddingRight: '0px',\n            paddingBottom: '10px',\n          }}\n        >\n            {apiType === 'REST' && (\n\n                  <FormControlLabel\n                  label={\n                    <Typography sx={{ fontSize: 16}} >\n                      View Source\n                    </Typography>\n                  }\n                  control={\n                      <Switch\n                        checked={showCode}\n                        onChange={() => setShowCode((prevState) => !prevState)}\n                      />\n                  }\n                  labelPlacement='start'\n                  sx={{ marginRight: '20px' }}\n                  />\n            )}\n            <Button\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleDownload}\n                sx={{ marginRight: '0px', minWidth: '100px', height: '35px', px: 2, }}\n            >\n                Download\n                <CloudDownloadRounded sx={{ marginLeft: '8px' }} />\n            </Button>\n        </Box>\n\n        {apiType === 'REST' ? (\n            <Box sx={{ height: '100%', display: 'flex', flex:1, minHeight: 0}}>\n               { showCode ? (\n                <MonacoEditor\n                  width=\"100%\"\n                  height=\"100%\"\n                  language=\"yaml\"\n                  theme=\"vs-dark\"\n                  value={finalOutcomeCode}\n                  options={{\n                    readOnly: true,\n                    minimap: { enabled: false },\n                    scrollBeyondLastLine: false,\n                    wordWrap: 'on',\n                  }}\n                />\n              ) : (\n                <Box sx={{ width: '100%', height: '100%', overflow: 'auto', flex: 1 }}>\n                  <SwaggerUI spec={finalOutcomeCode} />\n                </Box>\n              )}\n            </Box>\n        ) : (\n          <Box sx={{ height: '100%', display: 'flex', flex:1, minHeight: 0 }}>\n            <MonacoEditor\n              width=\"100%\"\n              height=\"100%\"\n              language=\"yaml\"\n              theme=\"vs-dark\"\n              value={finalOutcomeCode}\n              options={{\n                readOnly: true,\n                minimap: { enabled: false },\n                scrollBeyondLastLine: false,\n                wordWrap: 'on',\n              }}\n            />\n          </Box>\n        )}\n\n        <Box\n          sx={{\n            height: '5%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default DisplayCode;\n","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as React from 'react';\nimport { Button, CircularProgress} from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport YAML from 'js-yaml';\nimport API from 'AppData/api';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\n\ninterface AlertDialogProps {\n  loading?: boolean;\n  taskStatus: string;\n  spec: string;\n  apiType: string;\n  settings: any;\n  multiGateway: any;\n}\n\nconst AlertDialog: React.FC<AlertDialogProps> = ({loading = false, taskStatus, spec, apiType, settings, multiGateway}) => {\n  const [open, setOpen] = React.useState(false);\n  const [showProgress, setShowProgress] = React.useState(false);\n  const intl = useIntl();\n  const history = useHistory();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  /**\n   * Method to handle error scenarios\n   * \n   * @param messageId messageId\n   * @param defaultMessage defaultMessage\n   */\n    const handleError = (messageId: string, defaultMessage: string) => {\n      Alert.error(intl.formatMessage({ id: messageId, defaultMessage }));\n      throw new Error(defaultMessage);\n    };\n\n  /**\n   * Validate the provided GraphQL schema as a file\n   * \n   * @param definition API definition for graphql API returned from LLM\n   * @returns validation response object\n   */\n  async function validateGraphQLSchema(definition: any) { \n    try {\n      const response = await API.validateGraphQLFile(definition);\n      if (response != null) {\n        return response.obj;\n      }\n      throw new Error(\"Invalid response received while validating GraphQL schema\");\n    } catch (error) {\n        console.error(\"Error validating the GraphQL schema: \", error);\n        throw error;\n    }\n  }\n\n  /**\n   * Validate the provided OpenAPI definition as a file\n   * \n   * @param definition API definition for REST API returned from LLM\n   * @returns validation response object\n   */\n  async function validateOpenAPIDefinition(definition: any) { \n    try {\n      const response = await API.validateOpenAPIByFile(definition);\n      if (response != null) {\n        return response.obj;\n      }\n      throw new Error(\"Invalid response received while validating OpenAPI definition\");\n    } catch (error) {\n        console.error(\"Error validating the OpenAPI definition: \", error);\n        throw error;\n    }\n  }\n\n  /**\n   * Validate the provided AsyncAPI definition as a file\n   * \n   * @param definition API definition for AsyncAPI returned from LLM\n   * @returns validation response object\n   */\n  async function validateAsyncAPIDefinition(definition: any) { \n    try {\n      const response = await API.validateAsyncAPIByFile(definition);\n      if (response != null) {\n        return response.obj;\n      }\n      throw new Error(\"Invalid response received while validating AsyncAPI definition\");\n    } catch (error) {\n        console.error(\"Error validating the AsyncAPI definition: \", error);\n        throw error;\n    }\n  }\n\n  /**\n   * Method used to create a file object of the API definitions\n   * \n   * @param spec The API spec\n   * @param type The content type\n   * @returns \n   */\n  const createBlobAndFile = (spec: string, type: string) => {\n    const blob = new Blob([spec], { type });\n    return new File([blob], `apiDefinition.${type === 'text/plain' ? 'graphql' : 'yaml'}`, { type: `${type};charset=utf-8` });\n  };\n\n  /**\n   * Handles redirecting the user to create an API\n   * @returns if an error occurs\n   */\n  const handleCreate = async () => {\n    setShowProgress(true);\n\n    try {\n      \n      const endpointValue = (apiType === 'WebSocket' ? 'ws://localhost:9099' : 'http://localhost:8080');\n      let apiName = (apiType === 'REST' ? 'Banking Transaction API' : 'Live Streaming API');\n      let apiVersion = '1.0.0';\n      let apiContext = '/apiContext';\n\n      interface Info {\n        title: string;\n        version: string;\n      }\n      \n      interface ParsedYAML {\n        info: Info;\n      }\n\n      const createData = (type: string, file: File, graphQLInfo?: any) => ({\n        name: apiName,\n        version: apiVersion,\n        context: apiContext,\n        gatewayType: 'wso2/synapse',\n        gatewayVendor: 'wso2',\n        endpoint: endpointValue,\n        protocol: type,\n        asyncTransportProtocols: type,\n        source: 'DesignAssistant',\n        file,\n        graphQLInfo\n      });\n\n      let validationResponse: any;\n      let definition: File;\n      let graphQLInfo: any;\n  \n      if (apiType === 'REST') {\n        const jsonContent: ParsedYAML = YAML.load(spec) as ParsedYAML;\n\n        if (jsonContent && jsonContent.info) {\n          apiName = jsonContent.info.title? jsonContent.info.title : apiName;\n          apiVersion = jsonContent.info.version? jsonContent.info.version : apiVersion;\n          apiContext = apiName ? ('/' + apiName.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, '')) : apiContext;\n        }\n\n        definition = createBlobAndFile(spec, 'text/yaml');\n        validationResponse = await validateOpenAPIDefinition(definition);\n  \n        if (!validationResponse?.isValid) {\n          handleError('CreateAPIWithAI.components.AlertDialog.error.create.http.API', 'The provided OpenAPI definition is invalid. Please try again.');\n        }\n        const data = createData(apiType, definition);\n        history.push('/apis/create/openapi', {\n            data: data,\n            settings: settings,\n            multiGateway: multiGateway\n        });\n      } else if (['SSE', 'WebSocket', 'WebSub'].includes(apiType)) {\n        const jsonContent: ParsedYAML = YAML.load(spec) as ParsedYAML;\n\n        if (jsonContent && jsonContent.info) {\n          apiName = jsonContent.info.title? jsonContent.info.title : apiName;\n          apiVersion = jsonContent.info.version? jsonContent.info.version : apiVersion;\n          apiContext = apiName ? ('/' + apiName.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, '')) : apiContext;\n        }\n\n        definition = createBlobAndFile(spec, 'text/yaml');\n        validationResponse = await validateAsyncAPIDefinition(definition);\n  \n        if (!validationResponse?.isValid) {\n          handleError('CreateAPIWithAI.components.AlertDialog.error.create.async.API', 'The provided AsyncAPI definition is invalid. Please try again.');\n        }\n        const data = createData(apiType, definition);\n        history.push('/apis/create/asyncapi', {\n          data: data,\n          settings: settings,\n          multiGateway: multiGateway\n        });\n      } else if (apiType === 'GraphQL') {\n        definition = createBlobAndFile(spec, 'text/plain');\n        validationResponse = await validateGraphQLSchema(definition);\n        apiName = 'GraphQLAPI';\n        apiContext = '/graphqlapi';\n        if (validationResponse?.isValid) {\n          graphQLInfo = validationResponse.graphQLInfo;\n          const data = createData(apiType, definition, graphQLInfo);\n          history.push('/apis/create/graphQL', {\n             data: data,\n             settings: settings,\n             multiGateway: multiGateway\n          });\n        } else {\n          handleError('CreateAPIWithAI.components.AlertDialog.error.create.graphql.API', 'The provided GraphQL schema is invalid. Please try again.');\n        }\n      } \n      setShowProgress(false);\n    } catch (error) {\n      setShowProgress(false);\n      console.error('Error during API creation:', error);\n      Alert.error(intl.formatMessage({ id: 'CreateAPIWithAI.components.AlertDialog.error.create.API', defaultMessage: 'Error Creating API' }));\n      throw error;\n    }\n  };\n\n  return (\n    <React.Fragment>      \n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        sx={{ marginRight: '10px', minWidth: '120px',  height: '35px', display: 'flex', gap:1, alignItems: 'center'}}  \n        disabled={loading || taskStatus === '' || spec === ''}\n      >\n        {intl.formatMessage({\n          id: 'Apis.Create.Default.APICreateDefault.create.btn',\n          defaultMessage: 'Create API'\n        })}\n        {' '}\n        {showProgress &&  <CircularProgress size={16} color='inherit'/> }\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Create API\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you ready to create your API and move to the API Creation Wizard?\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose}>\n            NO\n          </Button>\n          <Button\n            onClick={handleCreate}\n            sx={{\n              border: '1px solid #1C7EA7'\n            }}\n            autoFocus\n          >\n            YES\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default AlertDialog;","/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.handleTooltipClose\n */\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Chip from '@mui/material/Chip';\nimport Box from '@mui/material/Box';\n\nconst WelcomeMessage = () => {    \n    return (\n      <Stack spacing={2} sx={{ alignItems: 'center', textAlign: 'center' }}>\n          <Box display='flex'>\n              <Typography sx={{ color: '#212020', fontWeight: 'bold', fontSize: '2rem', marginTop: '20px', paddingTop: '10px'}}>\n              Welcome to the\n                <Typography component='span' sx={{ color: '#004d99', fontWeight: 'bold', fontSize: '2rem' }}>\n                    {' API Design Assistant!'}\n                </Typography>\n                <Chip\n                    label='Experimental'\n                    variant='outlined'\n                    size='small'\n                    color='primary'\n                    sx={{\n                      ml: 1,\n                      mb:'40px',\n                    }}\n                />\n              </Typography>\n          </Box>\n    \n            <Typography sx={{ whiteSpace: 'pre-line', fontSize: '1.0rem'  }}>\n                        Provide API details or choose a template to get started!\n            </Typography>\n      </Stack>\n    );\n};\nexport default WelcomeMessage\n","/* eslint-disable */\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nconst LoadingDots: React.FC = () => {\n  const dotStyle: React.CSSProperties = {\n    width: '8px',\n    height: '8px',\n    backgroundColor: '#374d70',\n    borderRadius: '50%',\n    animation: 'loading-dots 1.4s infinite ease-in-out',\n  };\n\n  const containerStyle: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'left',\n    gap: '10px',\n  };\n\n  const dotsStyle: React.CSSProperties = {\n    display: 'flex',\n    gap: '5px',\n  };\n\n  const textStyle: React.CSSProperties = {\n    fontSize: '15px',\n    color: '#34445e',\n    fontWeight: '600',\n    marginLeft: '16px',\n    fontFamily: 'Arial, sans-serif',\n  };\n\n  const keyframesStyle = `\n    @keyframes loading-dots {\n      0%, 80%, 100% {\n        transform: scale(0);\n      }\n      40% {\n        transform: scale(1);\n      }\n    }\n  `;\n\n  return (\n    <>\n      <style>\n        {keyframesStyle}\n      </style>\n      <div style={{ ...containerStyle, display: 'flex', alignItems: 'center', justifyContent: 'flex-start', marginLeft: '16px' }}>\n        <span style={textStyle}>Generating a response</span>\n        <div style={dotsStyle}>\n          <span style={{ ...dotStyle, animationDelay: '-0.32s' }}></span>\n          <span style={{ ...dotStyle, animationDelay: '-0.16s' }}></span>\n          <span style={{ ...dotStyle, animationDelay: '0s' }}></span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoadingDots;\n","/*eslint-disable*/\nconst predefinedAnswers = {\n    hi: 'Hello there!, How can I assist you today?',\n    hiii: 'Hello there!, How can I assist you today?',\n    hello: 'Hi! How can I assist you today?',\n    hey: 'Hey! How can I help you?',\n    greetings: 'Greetings! What can I assist you with?',\n    thanks: 'You\\'re welcome!',\n    bye: 'Goodbye! Have a great day!',\n    goodbye: 'Goodbye! Have a great day!',\n    'thank you': 'You\\'re welcome!',\n    'thank you for your help': 'You\\'re welcome!',\n    'good morning': 'Good morning! How can I assist you today?',\n    'good afternoon': 'Good afternoon! What can I do for you?',\n    'good evening': 'Good evening! How can I help?',\n    'hey there': 'Hey! What can I assist you with?',\n    'hi there': 'Hello! How may I assist you?',\n    'hello there': 'Hello! How can I assist you today?',\n    'how are you': 'I\\'m doing well, thank you! How can I help you?',\n    'can you help me': 'You can ask me to create an API you want!',\n    'what can I ask you': 'You can ask me to create an API you want!',\n    'what can you do': 'I can help you with creating APIs based on the information you share with me',\n    'what do you do': 'I can help you create APIs based on the information you share with me!',\n    'what do you know': 'I know a lot about creating APIs! What API are you looking to create?',\n    'what are you': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'what are u': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'who are you': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'who are u': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'what is your name': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n    'whats ur name': 'I am the API Design Assistant. I can help you create APIs based on the information you share with me!',\n};\n\nconst calculateStringSimilarity = (string1, string2) => {\n    const str1 = string1.toLowerCase();\n    const str2 = string2.toLowerCase();\n\n    if (str1.length < 2 || str2.length < 2) return 0;\n\n    const subsequenceMap = new Map();\n    for (let i = 0; i < str1.length - 1; i++) {\n        const subsequence = str1.substr(i, 2);\n        subsequenceMap.set(subsequence, subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) + 1 : 1);\n    }\n\n    let matchCount = 0;\n    for (let j = 0; j < str2.length - 1; j++) {\n        const subsequence = str2.substr(j, 2);\n        const count = subsequenceMap.has(subsequence) ? subsequenceMap.get(subsequence) : 0;\n        if (count > 0) {\n            subsequenceMap.set(subsequence, count - 1);\n            matchCount++;\n        }\n    }\n\n    return (matchCount * 2) / (str1.length + str2.length - 2);\n};\n\nconst findBestMatchingAnswer = (inputString) => {\n    let bestMatch = null;\n    let bestScore = -1;\n\n    const searchString = inputString.toLowerCase();\n\n    if (searchString.length < 2) return null;\n\n    for (const [key] of Object.entries(predefinedAnswers)) {\n        const comparisonString = key.toLowerCase();\n\n        const score = calculateStringSimilarity(searchString, comparisonString);\n\n        if (score > bestScore) {\n            bestScore = score;\n            bestMatch = key;\n        }\n    }\n\n    if (bestScore < 0.8) return null;\n\n    return predefinedAnswers[bestMatch];\n};\n\nexport default findBestMatchingAnswer;\n","/*eslint-disable*/\n/*\n * Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { Typography } from '@mui/material';\nimport ApiChatBanner from './components/ApiChatBanner';\nimport ApiChatExecute from './components/ApiChatExecute';\nimport ApiChatResponse from './components/ApiChatResponse';\nimport SampleQueryCard from './components/SampleQueryCard';\nimport DisplayCode from './components/DisplayCode';\nimport AlertDialog from './components/AlertDialog';\nimport WelcomeMessage from './components/WelcomeMessage';\nimport LoadingDots from './components/LoadingDots';\nimport { useHistory } from 'react-router-dom';\nimport API from 'AppData/api';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport { FormattedMessage } from 'react-intl';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Alert from '@mui/material/Alert';\nimport findBestMatchingAnswer from './components/SimilaritySearch';\n\n/**\n * Renders the Create API with AI UI.\n * @returns {JSX} Create API with AI page to render.\n */\nconst ApiCreateWithAI = () => {\n    const [sessionId, setSessionId] = useState(null);\n    const [inputQuery, setInputQuery] = useState('');\n    const [lastQuery, setLastQuery] = useState('');\n    const [finalOutcome, setFinalOutcome] = useState('');\n    const [apiType, setApiType] = useState('');\n    const [finalOutcomeCode, setFinalOutcomeCode] = useState('');\n    const [executionResults, setExecutionResults] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [taskId, setTaskId] = useState('');\n    const [taskStatus, setTaskStatus] = useState('');\n    const [loading, setLoading] = useState(false); \n    const [isSuggestion, setIsSuggestion] = useState('');\n    const [selectedTitles, setSelectedTitles] = useState([]);\n    const [paths, setPaths] = useState([]);\n    const [apiTypeSuggestion, setApiTypeSuggestion] = useState('');\n    const [missingValues, setMissingValues] = useState('');\n    const history = useHistory();\n    const [lastRenderedComponent, setLastRenderedComponent] = useState(<ApiChatBanner />);\n    const { data: settings, isLoading } = usePublisherSettings();\n    const [specEnrichmentError, setSpecEnrichmentError] = useState('');\n    const [specEnrichmentErrorLevel, setSpecEnrichmentErrorLevel] = useState('');\n    const [multiGateway, setMultiGateway] = useState([]);\n\n    const gatewayDetails = {\n        'wso2/synapse': {\n            value: 'wso2/synapse',\n            name: 'Universal Gateway',\n            description: 'API gateway embedded in APIM runtime.',\n            isNew: false\n        },\n        'wso2/apk': {\n            value: 'wso2/apk',\n            name: 'Kubernetes Gateway',\n            description: 'API gateway running on Kubernetes.',\n            isNew: false\n        },\n        'AWS': {\n            value: 'AWS',\n            name: 'AWS Gateway',\n            description: 'API gateway offered by AWS cloud.',\n            isNew: true\n        }\n    };\n\n    const chatContainerRef = useRef(null);\n    useEffect(() => {\n        if (chatContainerRef.current) {\n            const element = chatContainerRef.current;\n            element.scrollTop = element.scrollHeight;\n        }\n    }, [messages]);\n\n    useEffect(() => {\n        if (taskStatus === 'COMPLETE') {\n            setLastRenderedComponent(\n                <DisplayCode \n                    finalOutcomeCode={finalOutcomeCode}\n                    apiType={apiType}\n                    sessionId={sessionId}\n                />\n            );\n        } else if (taskStatus === null) {\n            setLastRenderedComponent(<ApiChatBanner />);\n        }\n    }, [taskStatus]);\n\n    useEffect(() => {\n        if (!isLoading) {\n            const apiTypes = settings.gatewayFeatureCatalog.apiTypes;\n            const data = settings.gatewayTypes;\n            const gatewayTypes = data.map(item => {\n                if (item === \"Regular\") return \"wso2/synapse\";\n                if (item === \"APK\") return \"wso2/apk\";\n                return item;\n            });\n            setMultiGateway(apiTypes?.rest.filter(t=>gatewayTypes.includes(t)).map(type => gatewayDetails[type]));\n\n        }\n    }, [isLoading]);\n\n    const handleQueryChange = (event) => {\n        const { value } = event.target;\n        setInputQuery(value);\n    };\n\n    const handleExecute = async () => {\n        if (inputQuery.length !== 0) {\n            const query = inputQuery;\n            setInputQuery('');\n            setLastQuery(inputQuery);    \n            setTaskStatus('IN_PROGRESS');\n\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { role: 'user', content: query },\n            ]);\n\n            if (!sessionId) {\n                const newSessionId = generateSessionId();\n                setSessionId(newSessionId);\n                sendInitialRequest(query, newSessionId);\n            } else {\n                sendInitialRequest(query, sessionId);\n            }\n        }\n    };\n\n    const handleExecuteSampleQuery = async (query) => {\n        setInputQuery('');\n        setLastQuery(query);\n        setTaskStatus('IN_PROGRESS');\n\n        setMessages((prevMessages) => [\n            ...prevMessages,\n            { role: 'user', content: query }\n        ]);\n\n        if (!sessionId) {\n            const newSessionId = generateSessionId();\n            setSessionId(newSessionId);\n            sendInitialRequest(query, newSessionId);\n        } else {\n            sendInitialRequest(query, sessionId);\n        }\n    };\n\n    const generateSessionId = () => {\n        const uuid = (function() {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                const r = Math.random() * 16 | 0;\n                const v = c === 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n        })();\n    \n        const dateTime = new Date().toISOString();\n        const sessionId = `${uuid}-${dateTime}`;\n        const encodedSessionId = btoa(sessionId);\n        const modifiedSessionId = encodedSessionId.slice(0, -2);\n    \n        return encodedSessionId;\n    };\n    \n    const authTokenNotProvidedWarning = (\n        <FormattedMessage\n            id='Apis.Details.ApiChat.warning.authTokenMissing'\n            defaultMessage={'You must provide a token to start using API Design Assistant. To obtain one, '\n                + 'follow the steps provided under {apiAiChatDocLink} '}\n            values={{\n                apiAiChatDocLink: (\n                    <a\n                        id='api-chat-doc-link'\n                        href='https://apim.docs.wso2.com/en/4.5.0/design/create-api/create-api-with-ai/'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        Create APIs with AI\n                        <LaunchIcon\n                            style={{ marginLeft: '2px' }}\n                            fontSize='small'\n                        />\n                    </a>\n                ),\n            }}\n        />\n    );\n\n    const handleSelectedTitles = (titles) => { \n        const titlesString = 'Modify this API to include the following features as well:\\n' + \n        titles.map(title => `- ${title}`).join('\\n');\n        setSelectedTitles(titlesString); \n        setLastQuery(titlesString);\n        setTaskStatus('IN_PROGRESS');\n\n        setMessages((prevMessages) => [\n            ...prevMessages,\n            { role: 'user', content: titlesString }\n        ]);\n\n        sendInitialRequest(titlesString, sessionId);\n    };\n    \n    async function sendQuery(query, sessionId) { \n        try {\n            const queryDesignAssistant = new API();\n            const response = await queryDesignAssistant.sendChatAPIDesignAssistant(query, sessionId);\n    \n            if (!response || typeof response !== 'object') {\n                throw new Error('Invalid response received from API.');\n            }\n    \n            return response;\n        } catch (error) {\n            console.error('Error in sendQuery:', error);\n            throw error;\n        }\n    }\n    \n    const sendInitialRequest = async (query, currentSessionId) => {\n        setFinalOutcome('');\n        setLoading(true);\n\n        try {\n            const queryText = query.trim().toLowerCase();\n            const response = findBestMatchingAnswer(queryText);\n\n            if (response) {\n                setMessages((prevMessages) => [\n                    ...prevMessages,\n                    { role: 'system', content: response, suggestions: false }\n                ]);\n            } else {\n                const jsonResponse = await sendQuery(query, currentSessionId);\n                \n                const {\n                    backendResponse,\n                    isSuggestions,\n                    typeOfApi,\n                    code,\n                    paths,\n                    apiTypeSuggestion,\n                    missingValues,\n                    state\n                } = jsonResponse;\n\n                setFinalOutcome(backendResponse);\n                setIsSuggestion(isSuggestions);\n                setApiType(typeOfApi);\n                setFinalOutcomeCode(code);\n                setPaths(paths);\n                setApiTypeSuggestion(apiTypeSuggestion);\n                setMissingValues(missingValues);\n                setTaskStatus(state);\n\n                if (backendResponse) {\n                    setMessages((prevMessages) => [\n                        ...prevMessages,\n                        { role: 'system', content: backendResponse, suggestions: isSuggestions }\n                    ]);\n                }\n\n                if (apiTypeSuggestion) {\n                    setMessages((prevMessages) => [\n                        ...prevMessages,\n                        { role: 'system', content: apiTypeSuggestion, suggestions: false }\n                    ]);\n                }\n\n                if (missingValues) {\n                    setMessages((prevMessages) => [\n                        ...prevMessages,\n                        { role: 'system', content: missingValues, suggestions: false }\n                    ]);\n                }\n            }\n\n        } catch (error) {\n            console.error('Error:', error);\n\n            let content;\n            try {\n                switch (error.response.status) {\n                    case 401: // Unauthorized\n                        content = 'Apologies for the inconvenience. It appears that your token is invalid or expired. Please'\n                        + ' provide a valid token or upgrade your subscription plan.';\n                        break;\n                    case 429: // Token limit exceeded\n                        content = 'Apologies for the inconvenience. It appears that the token limit has been exceeded.';\n                        break;\n                    case 504: // Handle gateway timeout scenario\n                        content = 'Apologies for the inconvenience. The request has timed out. Please try again.';\n                        break;\n                    default:\n                        content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                        + ' API Design Assistant. Please try again.';\n                        break;\n                }\n\n            } catch (err) {\n                content = 'Apologies for the inconvenience. It seems that something went wrong with the'\n                + ' API Design Assistant. Please try again.';\n            }\n\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { role: 'system', content: content, isSuggestions: false }\n            ]);\n\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleBack = () => {\n        if (window.history.length > 1) {\n            history.goBack();\n        } else {\n            history.push('/apis');\n        }\n\n    };\n    \n    return (\n        <div>\n            <Stack \n                direction='column' \n                sx={{ width: '100%', height: 'calc(100vh - 99px)', minHeight: 'calc(100vh - 99px)' }}>\n                <Box sx={{\n                    display: 'flex',\n                    flex: 9,\n                    flexDirection: 'row',\n                    paddingTop:'10px',\n                    marginTop:'10px',\n                    overflow: 'auto',\n                }}>\n                    <Stack\n                        direction='row'\n                        sx={{ width: '100%', height: '100%', overflow: 'auto' }}\n                    >\n                        <Box \n                            sx={{\n                                flex: 1,\n                                display: 'flex',\n                                flexDirection: 'column',\n                                paddingTop:'10px',\n                                paddingBottom:'10px',\n                                marginLeft: '20px',\n                                borderLeft: '1px solid #dee0e8',\n                                borderBottom: '1px solid #dee0e8',\n                                borderTop: '1px solid #dee0e8',\n                                borderRight: '1px solid #dee0e8',\n                                minwidth:'50%'\n                            }}\n                        >\n                            <Stack\n                                direction='column' \n                                sx={{ width: '100%', height: '100%', overflowY: 'auto', overflowX: 'hidden' }}\n                            >\n                                {!lastQuery && (\n                                    <Box>\n                                        <WelcomeMessage/>\n                                        <Stack \n                                            direction=\"column\" \n                                            spacing={2} \n                                            justifyContent=\"center\"\n                                            sx={{ \n                                                width: '420px', \n                                                display: 'flex', \n                                                marginTop: '40px', \n                                                marginLeft: 'auto', \n                                                marginRight: 'auto', \n                                                marginBottom: '0' \n                                            }}\n                                        >\n                                            <SampleQueryCard \n                                                onExecuteClick={handleExecuteSampleQuery} \n                                                queryHeading='Create an API for a banking transaction' \n                                                sx={{ textAlign: 'left' }} \n                                            />\n                                            <SampleQueryCard \n                                                onExecuteClick={handleExecuteSampleQuery} \n                                                queryHeading='Create a GraphQL API to query patient data' \n                                                sx={{ textAlign: 'left' }} \n                                            />  \n                                            <SampleQueryCard \n                                                onExecuteClick={handleExecuteSampleQuery} \n                                                queryHeading='Create an API for live sports scores' \n                                                sx={{ textAlign: 'left' }} \n                                            />                                          \n                                        </Stack>\n                                    </Box>\n                                )}\n                                <Box \n                                    ref={chatContainerRef} \n                                    sx={{ \n                                        flexGrow: 1, \n                                        textAlign: 'left', \n                                        overflowY: 'auto', \n                                        overflowX: 'auto', \n                                        scrollBehavior: 'smooth' }}\n                                >\n                                    {(lastQuery || finalOutcome) && (\n                                        <ApiChatResponse \n                                            messages={messages} \n                                            onTitlesSelected={handleSelectedTitles}\n                                            taskStatus={taskStatus}\n                                        />\n                                    )}\n                                    {loading && <LoadingDots />}\n                                </Box>\n                                <Box>\n                                    <Box \n                                        display='flex' \n                                        alignItems='center' \n                                        flexDirection='column' \n                                        marginTop={1} \n                                        marginBottom={2}\n                                    >\n                                        {/* Handle prepare call failed scenario */}\n                                        {specEnrichmentError && specEnrichmentErrorLevel && (\n                                            <Alert severity={specEnrichmentErrorLevel}>\n                                                <Typography variant='body1'>\n                                                    {specEnrichmentError}\n                                                </Typography>\n                                            </Alert>\n                                        )}\n                                        {/* Handle auth token not provided scenario */}\n                                        {settings && !settings?.aiAuthTokenProvided && (\n                                            <Alert severity='warning'>\n                                                <Typography variant='body1'>\n                                                    {authTokenNotProvidedWarning}\n                                                </Typography>\n                                            </Alert>\n                                        )}\n                                    </Box>\n                                    <Box>\n                                        <ApiChatExecute\n                                            lastQuery={lastQuery}\n                                            inputQuery={inputQuery}\n                                            handleExecute={handleExecute}\n                                            handleQueryChange={handleQueryChange}\n                                            paths={paths} \n                                            loading={loading}\n                                        />\n                                    </Box>\n                                </Box>\n                                \n                            </Stack>\n                        </Box>\n                        <Box \n                            sx={{\n                                flex: 1,\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                textAlign: 'left',\n                                borderLeft: '1px solid #dee0e8',\n                                borderRight: '1px solid #dee0e8',\n                                borderBottom: '1px solid #dee0e8',\n                                borderTop: '1px solid #dee0e8',\n                                paddingLeft: '10px',\n                                paddingRight: '10px',\n                                backgroundColor: '#fff',\n                                marginRight: '20px',\n                                minwidth:'50%',\n                                overflowY: 'hidden',\n                                overflowX: 'hidden'\n                            }}\n                        >\n                            {lastRenderedComponent}\n                        </Box>\n                    </Stack>\n                </Box>\n                <Box\n                    sx={{ \n                        display: 'flex',\n                        flex: 1,\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end',\n                        padding:'10px 20px',\n                    }}\n                >\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={handleBack}\n                        sx={{ marginRight: '10px', minWidth: '100px',  height: '35px',}}\n                    >\n                        Cancel\n                    </Button>\n                    <AlertDialog \n                        sessionId={sessionId}\n                        loading={loading}\n                        taskStatus={taskStatus}\n                        spec={finalOutcomeCode}\n                        apiType={apiType}\n                        settings={settings}\n                        multiGateway={multiGateway}\n                    />\n                </Box>\n            </Stack>\n        </div>\n    );\n};\n\nexport default ApiCreateWithAI;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy} from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Progress from 'AppComponents/Shared/Progress';\nimport AuthManager from 'AppData/AuthManager';\n\nimport Listing from './Listing/Listing';\nimport APICreateWithAI from './Create/CreateAPIWithAI/APICreateWithAI';\n\n/* if needs to pre fetch use 'webpackPrefetch: true' */\n\nconst Details = lazy(() => import('./Details/index' /* webpackChunkName: \"DeferredDetails\" */));\nconst DeferredDetails = (props) => (\n    <Suspense fallback={<Progress per={50} message='Loading Details component ...' />}>\n        <Details {...props} />\n    </Suspense>\n);\n\nconst APICreateRoutes = lazy(\n    () => import(/* webpackPrefetch: true */ './Create/APICreateRoutes' /* webpackChunkName: \"APICreateRoutes\" */),\n);\nconst DeferredAPICreateRoutes = (props) => (\n    <Suspense fallback={<Progress per={70} message='Loading API Create component ...' />}>\n        <APICreateRoutes {...props} />\n    </Suspense>\n);\n\nconst DefferedAIApiCreateRoutes = (props) => (\n    <Suspense fallback={<Progress per={70} message='Loading AI API Create component ...' />}>\n        <APICreateWithAI {...props} />\n    </Suspense>\n);\n\n/**\n * Have used key={Date.now()} for `Route` element in `/apis` and `/api-products`\n */\nconst Apis = () => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/apis'\n                key={Date.now()}\n                render={(props) => <Listing {...props} isAPIProduct={false} />}\n            />\n            <Route\n                exact\n                path='/api-products'\n                key={Date.now()}\n                render={(props) => {\n                    return <Listing {...props} isAPIProduct />;\n                }}\n            />\n            <Route path='/apis/search' render={(props) => <Listing {...props} isAPIProduct={false} />} />\n            <Route path='/apis/create' component={DeferredAPICreateRoutes} />\n            <Route path='/apis/design-assistant' component={DefferedAIApiCreateRoutes} />\n            <Route\n                path='/api-products/create'\n                render={() => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredAPICreateRoutes />;\n                    }\n                }}\n            />\n            <Route path='/apis/:apiUUID/' render={(props) =><DeferredDetails {...props} isAPIProduct={false} />} />\n            <Route\n                path='/api-products/:apiProdUUID/'\n                render={(props) => {\n                    return <DeferredDetails {...props} isAPIProduct />;\n                }}\n            />\n        </Switch>\n    );\n};\n\nexport default Apis;\n","import React from 'react';\n\nimport { styled } from '@mui/material/styles';\n\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport IconButton from '@mui/material/IconButton';\nimport API from 'AppData/api';\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst PREFIX = 'DeleteApiButton';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    backLink: `${PREFIX}-backLink`,\n    backIcon: `${PREFIX}-backIcon`,\n    backText: `${PREFIX}-backText`,\n    deleteWrapper: `${PREFIX}-deleteWrapper`,\n    delete: `${PREFIX}-delete`,\n    linkText: `${PREFIX}-linkText`,\n    inlineBlock: `${PREFIX}-inlineBlock`,\n    flexBox: `${PREFIX}-flexBox`\n};\n\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.root}`]: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${classes.backLink}`]: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n\n    [`& .${classes.backIcon}`]: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n\n    [`& .${classes.backText}`]: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n\n    [`& .${classes.deleteWrapper}`]: {\n        flex: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: theme.spacing(2),\n    },\n\n    [`& .${classes.delete}`]: {\n        color: theme.custom.apis.listing.deleteButtonColor,\n        cursor: 'pointer',\n        padding: theme.spacing(0.4),\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n    },\n\n    [`& .${classes.linkText}`]: {\n        fontSize: theme.typography.fontSize,\n    },\n\n    [`& .${classes.inlineBlock}`]: {\n        display: 'inline-block',\n        paddingRight: 10,\n    },\n\n    [`& .${classes.flexBox}`]: {\n        display: 'flex',\n        paddingRight: 10,\n    }\n}));\n\n/**\n * Handle Delete an API from API Overview/Details page\n *\n * @class DeleteApiButton\n * @extends {React.Component}\n */\nclass DeleteApiButton extends React.Component {\n    /**\n     *Creates an instance of DeleteApiButton.\n     * @param {*} props @inheritDoc\n     * @memberof DeleteApiButton\n     */\n    constructor(props) {\n        super(props);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.state = { openMenu: false };\n    }\n\n    /**\n     * Handle Delete button close event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n     * Handle Delete button onClick event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Send API delete REST API request\n     * @param {*} e\n     * @memberof DeleteApiButton\n     */\n    handleApiDelete() {\n        const {\n            api: { id, name }, setLoading, updateData, isAPIProduct, history, intl,\n        } = this.props;\n        if (isAPIProduct) {\n            const promisedDelete = API.deleteProduct(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info(intl.formatMessage({\n                            id: 'Apis.Details.components.api.product.delete.error',\n                            defaultMessage: 'Something went wrong while deleting the API Product!',\n                        }));\n                        return;\n                    }\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.components.api.product.delete.success',\n                        defaultMessage: 'API Product {name} deleted Successfully',\n                    },\n                    {\n                        name,\n                    }));\n                    if (updateData) {\n                        updateData(id);\n                        setLoading(false);\n                    } else {\n                        history.push('/api-products');\n                    }\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Details.components.api.product.delete.error',\n                            defaultMessage: 'Something went wrong while deleting the API Product!',\n                        }));\n                    }\n                    setLoading(false);\n                });\n        } else {\n            const promisedDelete = API.delete(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info(intl.formatMessage({\n                            id: 'Apis.Details.components.api.delete.error',\n                            defaultMessage: 'Something went wrong while deleting the API!',\n                        }));\n                        return;\n                    }\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.components.api.delete.success',\n                        defaultMessage: 'API {name} deleted Successfully',\n                    },\n                    {\n                        name,\n                    }));\n                    if (updateData) {\n                        updateData(id);\n                        setLoading(false);\n                    } else {\n                        history.push('/apis');\n                    }\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Details.components.api.delete.error',\n                            defaultMessage: 'Something went wrong while deleting the API!',\n                        }));\n                    }\n                    setLoading(false);\n                });\n        }\n    }\n\n    /**\n     *\n     * @inheritDoc\n     * @returns {React.Component} inherit docs\n     * @memberof DeleteApiButton\n     */\n    render() {\n        const { api, onClick, updateData } = this.props;\n        const type = api.apiType === API.CONSTS.APIProduct ? 'API Product ' : 'API ';\n        const version = api.apiType === API.CONSTS.APIProduct ? null : '-' + api.version;\n        const deleteHandler = onClick || this.handleApiDelete;\n\n        let path = resourcePath.SINGLE_API;\n\n        if (api.apiType === API.CONSTS.APIProduct) {\n            path = resourcePath.SINGLE_API_PRODUCT;\n        }\n\n        return (\n            <Root>\n                {/* allowing delete based on scopes */}\n                <ScopeValidation resourceMethod={resourceMethod.DELETE} resourcePath={path}>\n                    <Box\n                        className={classNames({ [classes.inlineBlock]: updateData, [classes.flexBox]: !updateData })}\n                    >\n                        {!updateData && (<VerticalDivider height={70} />)}\n                        <Box className={classes.delete}>\n                            <IconButton\n                                id='itest-id-deleteapi-icon-button'\n                                onClick={this.handleRequestOpen}\n                                className={classes.delete}\n                                disabled={isRestricted(['apim:api_delete'], api)}\n                                aria-label='delete'\n                                disableFocusRipple\n                                disableRipple\n                                size='large'>\n                                <DeleteIcon />\n                            </IconButton>\n                            <Box\n                                fontFamily='fontFamily'\n                                fontSize='caption.fontSize'\n                                onClick={this.handleRequestOpen}\n                            >\n\n                                <FormattedMessage\n                                    id='Apis.Details.components.DeleteApiButton.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </ScopeValidation>\n                <Dialog open={this.state.openMenu}>\n                    <DialogTitle>\n                        <FormattedMessage\n                            id='Apis.Details.components.DeleteApiButton.title'\n                            defaultMessage='Delete {type}'\n                            values={{ type }}\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.text.description'\n                                defaultMessage='{type} <b> {name} {version} </b> will be deleted permanently.'\n                                values={{\n                                    b: (msg) => <b>{msg}</b>,\n                                    type,\n                                    name: api.name,\n                                    version,\n                                }}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button dense onClick={this.handleRequestClose}>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            id='itest-id-deleteconf'\n                            onClick={() => {\n                                deleteHandler();\n                                this.handleRequestClose();\n                            }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.delete'\n                                defaultMessage='Delete'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Root>\n        );\n    }\n}\n\nDeleteApiButton.defaultProps = {\n    setLoading: () => {},\n};\n\nDeleteApiButton.propTypes = {\n    api: PropTypes.shape({\n        delete: PropTypes.func,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    setLoading: PropTypes.func,\n};\n\nexport default withRouter(injectIntl(DeleteApiButton));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst getIcon = (key, category, theme, api) => {\n    let IconElement;\n\n    // Creating the icon\n    if (key && category) {\n        IconElement = key;\n    } else if (api.type === 'DOC') {\n        IconElement = theme.custom.thumbnail.document.icon;\n    } else {\n        IconElement = 'settings';\n    }\n    return IconElement;\n};\n\nexport default getIcon;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\nconst PREFIX = 'Background';\n\nconst classes = {\n    svgImage: `${PREFIX}-svgImage`\n};\n\nconst Root = styled('svg')({\n    [`&.${classes.svgImage}`]: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n});\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <Root width={width} height={height} className={classes.svgImage} aria-hidden='true'>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </Root>\n    );\n}\n\nBackground.propTypes = {\n    width: PropTypes.shape({}).isRequired,\n    height: PropTypes.shape({}).isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default (Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Icon from '@mui/material/Icon';\nimport Background from './Background';\n\nimport getIcon from './APICards/ImageUtils';\n\nconst PREFIX = 'ImageGenerator';\n\nconst classes = {\n    icon: `${PREFIX}-icon`,\n    iconWrapper: `${PREFIX}-iconWrapper`\n};\n\nconst Root = styled('div')({\n    [`& .${classes.icon}`]: {},\n    [`&.${classes.iconWrapper}`]: {\n        position: 'relative',\n        '& span': {\n            position: 'absolute',\n            left: '50%',\n        },\n    },\n});\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const { api, width, height, theme, fixedIcon } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        if (!str) str = 'default';\n        let colorPair;\n        let randomBackgroundIndex;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        const iconElement = getIcon(key, category, theme, api);\n\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (typeof backgroundIndex === 'number' && colorPairs.length > backgroundIndex) {\n            // Obtain or generate background color pair\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <Root className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height, marginLeft: -height / 2, color }}>\n                    {iconElement}\n                </Icon>\n                {(!theme.custom.thumbnailTemplates || !theme.custom.thumbnailTemplates.active) && (\n                    <Background width={width} height={height} colorPair={colorPair} />\n                )}\n            </Root>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    iconSettings: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default ((props) => {\n    const { theme } = useTheme();\n    return <ImageGenerator {...props} theme={theme} />;\n});\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { Link } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\n\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport ImageGenerator from './ImageGenerator';\nimport LetterGenerator from './LetterGenerator';\n\nconst PREFIX = 'BaseThumbnail';\n\nconst classes = {\n    suppressLinkStyles: `${PREFIX}-suppressLinkStyles`,\n    thumbButton: `${PREFIX}-thumbButton`,\n    thumbBackdrop: `${PREFIX}-thumbBackdrop`,\n    thumb: `${PREFIX}-thumb`,\n    media: `${PREFIX}-media`\n};\n\nconst Root = styled('div')((\n    {\n        theme\n    }\n) => ({\n    [`& .${classes.suppressLinkStyles}`]: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n\n    [`& .${classes.thumbButton}`]: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#0002',\n        color: '#000',\n        padding: 50,\n        borderRadius: 5,\n    },\n\n    [`& .${classes.thumbBackdrop}`]: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n    },\n\n    [`& .${classes.thumb}`]: {\n        '&:hover': {\n            zIndex: 1,\n            '& $thumbBackdrop': {\n                opacity: 0.2,\n            },\n        },\n    },\n\n    [`& .${classes.media}`]: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    }\n}));\n\nconst windowURL = window.URL || window.webkitURL;\n\nconst BaseThumbnail = (props) => {\n    const {\n        api, width, height, thumbnail: thumbnailPop,\n        selectedIcon: selectedIconProp,\n        color: colorProp,\n        backgroundIndex: backgroundIndexProp,\n        category: categoryProp,\n        isEditable,\n        onClick,\n        imageUpdate,\n    } = props;\n    const {\n        apiType, id, type,\n    } = api;\n\n    const [iconJson, setIconJson] = useState({});\n    const {\n        key,\n        color,\n        backgroundIndex,\n        category,\n    } = iconJson;\n    const [thumbnail, setThumbnail] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const theme = useTheme();\n    const { variant } = theme.custom.thumbnailTemplates;\n    useEffect(() => {\n        setIconJson({\n            selectedIcon: selectedIconProp,\n            color: colorProp,\n            backgroundIndex: backgroundIndexProp,\n            category: categoryProp,\n        });\n    }, [selectedIconProp, colorProp, backgroundIndexProp, categoryProp]);\n\n    useEffect(() => {\n        setThumbnail(thumbnailPop);\n    }, [thumbnailPop]);\n    /**\n     * Load the image from the backend and keeps in the component state\n     */\n    useEffect(() => {\n        if (type !== 'DOC') {\n            if ((api.hasThumbnail !== null && api.hasThumbnail)\n                || (apiType === Api.CONSTS.APIProduct)) {\n                const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n                    ? new APIProduct().getAPIProductThumbnail(id)\n                    : new Api().getAPIThumbnail(id);\n\n                promisedThumbnail.then((response) => {\n                    if (response && response.data) {\n                        if (response.headers['content-type'] === 'application/json') {\n                            setThumbnail(null);\n                            setIconJson(response.body);\n                        } else if (response.headers['content-type'] === 'image/svg+xml') {\n                            const blob = new Blob([response.data], { type: 'image/svg+xml' });\n                            const url = windowURL.createObjectURL(blob);\n                            setThumbnail(url);\n                        } else if (response && response.data.size > 0) {\n                            const url = windowURL.createObjectURL(response.data);\n                            setThumbnail(url);\n                        }\n                    } else if (response && response.data === '') {\n                        setThumbnail(null);\n                        setIconJson({ key: null });\n                    }\n                }).finally(() => {\n                    setImageLoaded(true);\n                });\n            } else {\n                setThumbnail(null);\n                setIconJson({ key: null });\n                setImageLoaded(true);\n            }\n        } else {\n            setImageLoaded(true);\n        }\n    }, [imageUpdate]);\n    if (!imageLoaded) {\n        return (\n            <Root className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </Root>\n        );\n    }\n    let overviewPath = '';\n    if (apiType) {\n        overviewPath = apiType === Api.CONSTS.APIProduct\n            ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n    } else {\n        overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n    }\n    let view = (\n        <LetterGenerator\n            width={width}\n            height={height}\n            artifact={api}\n        />\n    );\n    // If configured the thumbnail variant as `image` or migrated from old thumbnail\n    if (variant === 'image' || key) {\n        view = (\n            <ImageGenerator\n                width={width}\n                height={height}\n                api={api}\n                fixedIcon={{\n                    key: key || selectedIconProp,\n                    color,\n                    backgroundIndex,\n                    category,\n                    api,\n                }}\n            />\n        );\n    }\n\n    return (\n        <Root>\n            {isEditable ? (\n                <ButtonBase\n                    focusRipple\n                    className={classes.thumb}\n                    onClick={onClick}\n                    aria-label='edit api thumbnail'\n                    data-testid='edit-api-thumbnail-button'\n                >\n                    {thumbnail\n                        ? (\n                            <img\n                                height={height}\n                                width={width}\n                                src={thumbnail}\n                                alt='API Thumbnail'\n                                className={classes.media}\n                            />\n                        )\n                        : view}\n                    <span className={classes.thumbBackdrop} />\n                    <span className={classes.thumbButton}>\n                        <Typography component='span' variant='subtitle1' color='inherit'>\n                            <EditIcon />\n                        </Typography>\n                    </span>\n                </ButtonBase>\n            ) : (\n                <Link className={classes.suppressLinkStyles} to={overviewPath} aria-label={api.name + ' Thumbnail'}>\n                    {thumbnail\n                        ? (\n                            <img\n                                height={height}\n                                width={width}\n                                src={thumbnail}\n                                alt='API Thumbnail'\n                                className={classes.media}\n                            />\n                        )\n                        : view}\n                </Link>\n            )}\n        </Root>\n    );\n};\nBaseThumbnail.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n};\nBaseThumbnail.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    imageUpdate: PropTypes.number.isRequired,\n};\nexport default BaseThumbnail;\n","/**\n * Note: This component was taken from MUI Lab until it's moved to core components and we migrate to 5.x\n * https://github.com/mui-org/material-ui/tree/master/packages/material-ui-lab/src/Alert\n * For component documentation see https://material-ui.com/components/alert\n * `outlinedWaiting` Style added separately\n */\nimport * as React from 'react';\nimport { styled, lighten, darken } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport { capitalize } from '@mui/material/utils';\nimport SuccessOutlinedIcon from '@mui/icons-material/CheckCircleOutlineOutlined';\nimport ReportProblemOutlinedIcon from '@mui/icons-material/ReportProblemOutlined';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutlineOutlined';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst PREFIX = 'MuiAlert';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    standardSuccess: `${PREFIX}-standardSuccess`,\n    standardInfo: `${PREFIX}-standardInfo`,\n    standardWarning: `${PREFIX}-standardWarning`,\n    standardError: `${PREFIX}-standardError`,\n    outlinedSuccess: `${PREFIX}-outlinedSuccess`,\n    outlinedInfo: `${PREFIX}-outlinedInfo`,\n    outlinedWarning: `${PREFIX}-outlinedWarning`,\n    outlinedError: `${PREFIX}-outlinedError`,\n    filledSuccess: `${PREFIX}-filledSuccess`,\n    filledInfo: `${PREFIX}-filledInfo`,\n    filledWarning: `${PREFIX}-filledWarning`,\n    filledError: `${PREFIX}-filledError`,\n    icon: `${PREFIX}-icon`,\n    message: `${PREFIX}-message`,\n    action: `${PREFIX}-action`,\n    plainWaiting: `${PREFIX}-plainWaiting`,\n    plainSuccess: `${PREFIX}-plainSuccess`,\n    plainInfo: `${PREFIX}-plainInfo`,\n    plainWarning: `${PREFIX}-plainWarning`,\n    plainError: `${PREFIX}-plainError`\n};\n\nconst StyledPaper = styled(Paper)(({ theme }) => {\n    const getColor = theme.palette.mode === 'light' ? darken : lighten;\n    const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n\n    return {\n        /* Styles applied to the root element. */\n        [`&.${classes.root}`]: {\n            ...theme.typography.body2,\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: 'transparent',\n            display: 'flex',\n            padding: '6px 16px',\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n        [`&.${classes.standardSuccess}`]: {\n            color: getColor(theme.palette.success.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n        [`&.${classes.standardInfo}`]: {\n            color: getColor(theme.palette.info.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n        [`&.${classes.standardWarning}`]: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n        [`&.${classes.standardError}`]: {\n            color: getColor(theme.palette.error.main, 0.6),\n            backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n        [`&.${classes.outlinedSuccess}`]: {\n            color: getColor(theme.palette.success.main, 0.6),\n            border: `1px solid ${theme.palette.success.main}`,\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n        [`&.${classes.outlinedInfo}`]: {\n            color: getColor(theme.palette.info.main, 0.6),\n            border: `1px solid ${theme.palette.info.main}`,\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n        [`&.${classes.outlinedWarning}`]: {\n            color: getColor(theme.palette.warning.main, 0.6),\n            border: `1px solid ${theme.palette.warning.main}`,\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n        [`&.${classes.outlinedError}`]: {\n            color: getColor(theme.palette.error.main, 0.6),\n            border: `1px solid ${theme.palette.error.main}`,\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n        [`&.${classes.filledSuccess}`]: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.success.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n        [`&.${classes.filledInfo}`]: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.info.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n        [`&.${classes.filledWarning}`]: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.warning.main,\n        },\n        /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n        [`&.${classes.filledError}`]: {\n            color: '#fff',\n            fontWeight: theme.typography.fontWeightMedium,\n            backgroundColor: theme.palette.error.main,\n        },\n        /* Styles applied to the root element if `variant=\"plain\"` and `color=\"info\"`. */\n        [`&.${classes.plainInfo}`]: {\n            color: theme.palette.info.main,\n            '& $icon': {\n                color: theme.palette.info.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"plain\"` and `color=\"warning\"`. */\n        [`&.${classes.plainWarning}`]: {\n            color: theme.palette.warning.main,\n            '& $icon': {\n                color: theme.palette.warning.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"plain\"` and `color=\"success\"`. */\n        [`&.${classes.plainSuccess}`]: {\n            color: theme.palette.success.main,\n            '& $icon': {\n                color: theme.palette.success.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"plain\"` and `color=\"error\"`. */\n        [`&.${classes.plainError}`]: {\n            color: theme.palette.error.main,\n            '& $icon': {\n                color: theme.palette.error.main,\n            },\n        },\n        /* Styles applied to the root element if `variant=\"plain\"` and `color=\"waiting\"`. */\n        [`&.${classes.plainWaiting}`]: {\n            color: theme.palette.text.secondary,\n            '& $icon': {\n                color: theme.palette.text.secondary,\n            },\n        },\n        /* Styles applied to the icon wrapper element. */\n        [`& .${classes.icon}`]: {\n            marginRight: 12,\n            padding: '7px 0',\n            display: 'flex',\n            fontSize: 22,\n            opacity: 0.9,\n        },\n        /* Styles applied to the message wrapper element. */\n        [`& .${classes.message}`]: {\n            padding: '8px 0',\n        },\n        /* Styles applied to the action wrapper element if `action` is provided. */\n        [`& .${classes.action}`]: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 'auto',\n            paddingLeft: 16,\n            marginRight: -8,\n        },\n    };\n});\n\nexport {};\n\nconst defaultIconMapping = {\n    success: <SuccessOutlinedIcon fontSize='inherit' />,\n    warning: <ReportProblemOutlinedIcon fontSize='inherit' />,\n    error: <ErrorOutlineIcon fontSize='inherit' />,\n    info: <InfoOutlinedIcon fontSize='inherit' />,\n    waiting: <MoreHorizIcon fontSize='inherit' />,\n};\n\nconst Alert = React.forwardRef((props, ref) => {\n    const {\n        action,\n        children,\n        className,\n        closeText = 'Close',\n        color,\n        icon,\n        iconMapping = defaultIconMapping,\n        onClose,\n        role = 'alert',\n        severity = 'success',\n        variant = 'standard',\n        ...other\n    } = props;\n    const clsName = `${PREFIX}-${variant}${capitalize(color || severity)}`;\n    return (\n        <StyledPaper\n            role={role}\n            square\n            elevation={0}\n            className={clsx(\n                classes.root, \n                clsName,\n                className,\n            )}\n            ref={ref}\n            {...other}\n        >\n            {icon !== false ? (\n                <div className={classes.icon}>\n                    {icon || iconMapping[severity] || defaultIconMapping[severity]}\n                </div>\n            ) : null}\n            <div className={classes.message}>{children}</div>\n            {action != null ? <div className={classes.action}>{action}</div> : null}\n            {action == null && onClose ? (\n                <div className={classes.action}>\n                    <IconButton\n                        size='small'\n                        aria-label={closeText}\n                        title={closeText}\n                        color='inherit'\n                        onClick={onClose}\n                    >\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            ) : null}\n        </StyledPaper>\n    );\n});\nexport default (Alert);\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nimport API from 'AppData/api';\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of an API Product\n */\nclass APIProduct extends Resource {\n    constructor(name, version, context, kwargs) {\n        super();\n        let properties = kwargs;\n        if (name instanceof Object) {\n            properties = name;\n        } else {\n            this.name = name;\n            this.version = version;\n            this.context = context;\n            this.isDefaultVersion = false;\n            this.transport = ['http', 'https'];\n            this.visibility = 'PUBLIC';\n            this.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: '',\n                },\n                production_endpoints: {\n                    url: '',\n                },\n            };\n        }\n        this._data = properties;\n        for (const key in properties) {\n            if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                this[key] = properties[key];\n            }\n        }\n        this.apiType = API.CONSTS.APIProduct;\n        this.getType = this.getType.bind(this);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getSettings() {\n        const promisedSettings = this.client.then(client => {\n            return client.apis['Settings'].getSettings();\n        });\n        return promisedSettings.then(response => response.body);\n    }\n\n    getMonetization(id, callback = null) {\n        const promiseMonetization = this.client.then(client => {\n            return client.apis['API Monetization'].getAPIMonetization(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseMonetization.then(response => response.body);\n    }\n\n    configureMonetizationToApiProduct(apiId, body) {\n        const promised_status = this.client.then(client => {\n            return client.apis['API Monetization'].addAPIMonetization(\n                { apiId },\n                { requestBody: body },\n            );\n        });\n        return promised_status;\n    }\n\n    getSubscriptionPolicies(id, callback = null) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['APIs'].getAPISubscriptionPolicies(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    getMonetizationInvoice(id, callback = null) {\n        const promiseInvoice = this.client.then(client => {\n            return client.apis['API Monetization'].getSubscriptionUsage(\n                {\n                    subscriptionId: id\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseInvoice.then(response => response.body);\n    }\n\n    /**\n     * Create an API Product with the given parameters in template\n     * @param {Object} api_product_data - APIProduct data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating API Product\n     */\n    saveProduct() {\n        const promisedAPIResponse = this.client.then(client => {\n            const properties = client.spec.components.schemas.APIProduct.properties;\n            const data = {};\n\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    if (apiAttribute != 'apiType') {\n                        data[apiAttribute] = this[apiAttribute];\n                    }\n                }\n            });\n            const payload = {\n                'Content-Type': 'application/json',\n            };\n            const requestBody = {\n                requestBody: data\n            }\n            return client.apis['API Products'].createAPIProduct(payload, requestBody, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n    /**\n     * Create an API Product with the given parameters in template and call the callback method given optional.\n     * @param {Object} apiData - API data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    create(apiData) {\n        let payload;\n        let promise_create;\n\n        payload = {\n            body: apiData,\n            'Content-Type': 'application/json',\n        };\n        promise_create = this.client.then(client => {\n            return client.apis['API Products'].createAPIProduct(payload, this._requestMetaData());\n        });\n\n        return promise_create;\n    }\n    /**\n     *\n     * Instance method of the API class to provide raw JSON object\n     * which is API body friendly to use with REST api requests\n     * Use this method instead of accessing the private _data object for\n     * converting to a JSON representation of an API object.\n     * Note: This is shallow coping\n     * Basically this is the revers operation in constructor.\n     * This method simply iterate through all the object properties\n     * and copy their values to new object excluding the properties in excludes list.\n     * So use this method sparingly!!\n     * @memberof API\n     * @param {Array} [userExcludes=[]] List of properties that are need to be excluded from the generated JSON object\n     * @returns {JSON} JSON representation of the API\n     */\n    toJSON(resource = this, userExcludes = []) {\n        var copy = {},\n            excludes = ['_data', 'client', 'type', ...userExcludes];\n        for (var prop in resource) {\n            if (!excludes.includes(prop)) {\n                copy[prop] = resource[prop];\n            }\n        }\n        return copy;\n    }\n\n    /**\n     * Get details of a given APIProduct\n     * @param id {string} UUID of the api-product.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        const promisedAPIProduct = apiClient\n            .then(client => {\n                return client.apis['API Products'].getAPIProduct(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return promisedAPIProduct.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     *\n     * Static method for get all API Products for current environment user.\n     * @param {Object} params API Products filtering parameters i:e { \"name\": \"MyBank Product\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     */\n    static all(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        const promisedProducts = apiClient\n            .then(client => {\n                return client.apis['API Products'].getAllAPIProducts(params, Resource._requestMetaData());\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedProducts.then(response => {\n            response.obj.apiType = API.CONSTS.APIProduct;\n            return response;\n        });\n    }\n\n    /**\n     * Update an api Product via PUT HTTP method, Need to give the updated API Product object as the argument.\n     * @param apiProduct {Object} Updated API Product object(JSON) which needs to be updated\n     */\n    update(updatedProperties) {\n        const updatedAPI = { ...this.toJSON(), ...this.toJSON(updatedProperties) };\n\n        // Create a copy and remove visibleOrganizations\n        const apiWithoutVisibleOrgs = { ...updatedAPI };\n        delete apiWithoutVisibleOrgs.visibleOrganizations;\n\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: updatedAPI.id,\n            };\n            const requestBody = {\n                requestBody: apiWithoutVisibleOrgs,\n            }\n            return client.apis['API Products'].updateAPIProduct(payload, requestBody);\n        });\n        return promisedUpdate.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     * Get the thumnail of an API Product\n     *\n     * @param id {string} UUID of the api product\n     */\n    getAPIProductThumbnail(id) {\n        const promisedAPIThumbnail = this.client\n            .then(client => {\n                return client.apis['API Products'].getAPIProductThumbnail(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAPIThumbnail;\n    }\n\n    /**\n     * Add new thumbnail image to an API Product\n     *\n     * @param {String} id id of the API Product\n     * @param {File} imageFile thumbnail image to be uploaded\n     */\n    addAPIProductThumbnail(id, imageFile) {\n        const promisedAddAPIThumbnail = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    'Content-Type': imageFile.type,\n                };\n                return client.apis['API Products'].updateAPIProductThumbnail(\n                    payload,\n                    {\n                        requestBody: {\n                            file: imageFile,\n                        }\n                    },\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n                return new Promise.reject(error);\n            });\n\n        return promisedAddAPIThumbnail;\n    }\n\n    /**\n     *\n     * Delete an API Product given its UUID\n     * @static\n     * @param {String} id API Product UUID\n     */\n    static delete(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        return apiClient\n            .then(client => {\n                return client.apis['API Products'].deleteAPIProduct(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    /**\n     * Add document to API Product\n     * @param {*} id API Product ID to which the document should be attached\n     * @param {*} body\n     */\n    addDocument(id, body) {\n        const promisedAddDocument = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis['API Product Documents'].addAPIProductDocument(\n                    payload,\n                    {\n                        requestBody: body,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedAddDocument;\n    }\n\n    /**\n     * Returns documents attached to a given API Product\n     *\n     * @param {String} id API Product UUID\n     */\n    getDocuments(id, limit = 1000) {\n        const promisedDocuments = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].getAPIProductDocuments(\n                    {\n                        apiProductId: id,\n                        limit,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocuments;\n    }\n\n    /**\n     * Updates a product document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} body\n     */\n    updateDocument(productId, docId, body) {\n        const promisedUpdateDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents']\n                .updateAPIProductDocument(\n                    payload,\n                    {\n                        requestBody: body,\n                    },\n                    this._requestMetaData()\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdateDocument;\n    }\n\n    /**\n     * Get specified document attached to specified product\n     * @param {*} productId\n     * @param {*} docId\n     */\n    getDocument(productId, docId) {\n        const promisedDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].getAPIProductDocument(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocument;\n    }\n\n    /**\n     * Add inline content to a INLINE type document\n     * @param {*} apiProductId API Product ID\n     * @param {*} documentId Document ID\n     * @param {*} sourceType\n     * @param {*} inlineContent Content to be added to document\n     */\n    addInlineContentToDocument(apiProductId, documentId, sourceType, inlineContent) {\n        const promise = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId,\n                    sourceType,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].addAPIProductDocumentContent(\n                    payload,\n                    {\n                        requestBody: {\n                            inlineContent: inlineContent\n                        }\n                    },\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promise;\n    }\n\n    /**\n     * Get the inline content of a given document\n     * @param {*} apiProductId\n     * @param {*} docId\n     */\n    getInlineContentOfDocument(apiProductId, docId) {\n        const promisedDocContent = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId: docId,\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].getAPIProductDocumentContent(payload);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocContent;\n    }\n\n    /**\n     * Delete specified document\n     * @param {*} productId\n     * @param {*} docId\n     */\n    deleteDocument(productId, docId) {\n        const promiseDeleteDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].deleteAPIProductDocument(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseDeleteDocument;\n    }\n\n    /**\n     * Add a File resource to a document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} fileToDocument\n     */\n    addFileToDocument(productId, docId, fileToDocument) {\n        const promiseAddFileToDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].addAPIProductDocumentContent(\n                payload,\n                {\n                    requestBody: {\n                        file: fileToDocument\n                    }\n                },\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promiseAddFileToDocument;\n    }\n\n    /**\n     * Get list of revisions.\n     *\n     * @param {string} apiProductId Id of the API.\n     * */\n    getProductRevisions(apiProductId) {\n        const promiseGetRevision = this.client\n            .then(client => {\n                   return client.apis['API Product Revisions'].getAPIProductRevisions( {\n                    apiProductId: apiProductId,\n                },\n            );\n        });\n        return promiseGetRevision;\n    }\n\n    /**\n     * Get list of revisions with environments.\n     *\n     * @param {string} apiProductId Id of the API.\n     * */\n    getProductRevisionsWithEnv(apiProductId) {\n        const promiseGetRevisionWithEnv = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].getAPIProductRevisions( \n                    {\n                        apiProductId: apiProductId,\n                        query: 'deployed:true',\n                    },\n            );\n        });\n        return promiseGetRevisionWithEnv;    \n    }\n\n    /**\n     * Add revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    createProductRevision(apiProductId, body) {\n        const promiseAddRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].createAPIProductRevision(\n                    {apiProductId: apiProductId},\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            }); \n        return promiseAddRevision;\n    }\n    /**\n     * Delete revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    deleteProductRevision(apiProductId, revisionId) {\n        const promiseDeleteRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].deleteAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return  promiseDeleteRevision;  \n    }\n\n    /**\n     * export an API Directory as A Zpi file\n     * @returns {promise} Promise Containing the ZPI file of the selected API\n     */\n     export() {\n        const apiZip = this.client.then((client) => {\n            return client.apis['Import Export'].exportAPIProduct({\n                name: this.name,\n                version: this.version\n            },  this._requestMetaData({\n                    'accept': 'application/zip'\n                })\n            );\n        });\n        return apiZip;\n    }\n\n    /**\n     * Undeploy revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    undeployProductRevision(apiProductId, revisionId, body) {\n        const promiseUndeployRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].undeployAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n        return  promiseUndeployRevision;     \n    }\n\n     /**\n     * Deploy revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    deployProductRevision(apiProductId, revisionId, body) {\n        const promiseDeployRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].deployAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n        return promiseDeployRevision;  \n    }\n\n    /**\n     * Restore revision.\n     *\n     * @param {string} apiProductId Id of the API.\n     * @param {Object} body Revision Object.\n     * */\n    restoreProductRevision(apiProductId, revisionId) {\n        const promiseRestoreRevision = this.client\n            .then(client => {\n                return client.apis['API Product Revisions'].restoreAPIProductRevision(\n                    {   \n                        apiProductId: apiProductId,\n                        revisionId: revisionId\n                    },\n                    this._requestMetaData(),\n                );\n            });\n        return promiseRestoreRevision;  \n    }\n\n    /**\n    * Change displayInDevportal.\n    *\n    * @param {string} apiProductId Id of the API.\n    * @param {string} deploymentId Id of the API.\n    * @param {Object} body Revision Object.\n    * */\n    displayInDevportalProduct(apiProductId, deploymentId, body) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        return apiClient.then(\n            client => {\n                return client.apis['API Product Revisions'].updateAPIProductDeployment(\n                    {\n                        apiProductId: apiProductId,\n                        deploymentId: deploymentId\n                    },\n                    { requestBody: body},\n                    this._requestMetaData(),\n                );\n            });\n    }\n\n    /**\n     * Update an api swagger via PUT HTTP method\n     * @param {*} swagger\n     */\n    updateSwagger(swagger) {\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: this.id,\n                apiDefinition: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['API Products']\n                .put_api_products__apiProductId__swagger(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdate.then(response => {\n            return this;\n        });\n    }\n\n    /**\n     * Get the swagger of an API Product\n     * @param id {String} UUID of the API Product in which the swagger is needed\n     */\n    getSwagger(id = this.id) {\n        const promiseGet = this.client\n            .then(client => {\n                return client.apis['API Products'].getAPIProductSwagger(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseGet;\n    }\n\n    /**\n     * Change the LC Status of a given API Product\n     */\n    updateLcState(id, state, checkedItems) {\n        const payload = {\n            action: state,\n            apiProductId: id,\n            lifecycleChecklist: checkedItems,\n            'Content-Type': 'application/json',\n        }\n        const promise_lc_update = this.client\n            .then(client => {\n                return client.apis['API Product Lifecycle'].changeAPIProductLifecycle(\n                    payload,\n                    this._requestMetaData()\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promise_lc_update;\n    }\n\n    /**\n     * Get the life cycle state of an API Product by UUID\n     * @param id {string} UUID of the api product\n     */\n    getLCStateOfAPIProduct(id) {\n        const promise_lc_get = this.client.then(client => {\n            return client.apis['API Product Lifecycle'].getAPIProductLifecycleState(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promise_lc_get;\n    }\n\n    /**\n     * Get the life cycle history data of an API Product by UUID\n     * @param id {string} UUID of the api product\n     */\n    getLCHistoryOfAPIProduct(id, callback = null) {\n        return this.client.then(client => {\n            return client.apis['API Product Lifecycle'].getAPIProductLifecycleHistory(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * Get the API Product information by UUID\n     * @param id {string} UUID of the api product\n     */\n    getAPIProductByID(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT)\n            .client;\n        return apiClient.then(client => {\n                return client.apis['API Products'].getAPIProduct(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            });\n    }\n\n    /**\n     * Cleanup pending workflow state change task for API Product given its id (UUID)\n     * @param id {string} UUID of the api product\n     * @param callback {function} Callback function which needs to be executed in the success call\n     */\n    cleanupPendingTask(id, callback = null) {\n        const promise_deletePendingTask = this.client.then(client => {\n            return client.apis['API Product Lifecycle'].deleteAPIProductLifecycleStatePendingTasks(\n                {\n                    apiProductId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promise_deletePendingTask;\n    }\n\n    /**\n     * Return the deployed revisions of this API\n     * @returns\n     */\n    getDeployedRevisions(id) {\n        return this.client.then(client => {\n            return client.apis['API Product Revisions'].getAPIProductRevisionDeployments({\n                    apiProductId: id,\n                },\n            );\n        });\n    }\n\n    /**\n     * Get list of revisions with environments.\n     *\n     * @param {string} apiId Id of the API.\n     * */\n    getRevisionsWithEnv(apiId) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment(), Utils.CONST.API_CLIENT).client;\n        return apiClient.then(client => {\n            return client.apis['API Revisions'].getAPIRevisions(\n                {\n                    apiId: apiId,\n                    query: 'deployed:true',\n                },\n            );\n        });\n    }\n}\n\nexport default APIProduct;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* TODO: Move this file to components/Shared/ location ~tmkb */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport APIClient from 'AppData/APIClient';\nimport AuthManager from 'AppData/AuthManager';\n\nconst resourcePath = {\n    APIS: '/apis',\n    API_PRODUCTS: '/api-products',\n    SINGLE_API: '/apis/{apiId}',\n    SINGLE_API_PRODUCT: '/api-products/{apiProductId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_PRODUCT_COPY: '/api-products/copy-api-products',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n    SERVICES: '/services',\n    SINGLE_SERVICE: '/services/{serviceId}',\n    SINGLE_SERVICE_DEFINITION: '/services/{serviceId}/definition',\n    IMPORT_SERVICE: '/services/import',\n    EXPORT_SERVICE: '/services/export',\n};\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n    HEAD: 'head',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nexport default class ScopeValidation extends React.Component {\n    /**\n     *\n     * Get scope for resources\n     * @static\n     * @param {String} resourcePath\n     * @param {String} resourceMethod\n     * @returns Boolean\n     * @memberof AuthManager\n     */\n    static hasScopes(currentResourcePath, currentResourceMethod) {\n        const userScopes = AuthManager.getUser().scopes;\n        const validScope = APIClient.getScopeForResource(currentResourcePath, currentResourceMethod);\n        return validScope.then((scopes) => {\n            for (const scope of scopes) {\n                if (userScopes.includes(scope)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath: currentResourcePath, resourceMethod: currentResourceMethod } = this.props;\n        const hasScope = ScopeValidation.hasScopes(currentResourcePath, currentResourceMethod);\n        hasScope.then((haveScope) => {\n            this.setState({ haveScope });\n        });\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        const { haveScope } = this.state;\n        if (haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport { ScopeValidation, resourceMethod, resourcePath };\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.swagger-ui .copy-to-clipboard {\n    display: none !important;\n  }\n  \n\n.swagger-ui .authorization__btn {\n    display: none !important;\n  }\n\n.swagger-ui .servers {\n    display: none !important;\n  }\n\n.swagger-ui .scheme-container {\n    display: none !important;\n  }`, \"\",{\"version\":3,\"sources\":[\"webpack://./source/src/app/components/Apis/Create/CreateAPIWithAI/components/swaggerUIChatbot/swagger-ui-overrides.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,wBAAwB;EAC1B;;;AAGF;IACI,wBAAwB;EAC1B;;AAEF;IACI,wBAAwB;EAC1B;;AAEF;IACI,wBAAwB;EAC1B\",\"sourcesContent\":[\".swagger-ui .copy-to-clipboard {\\n    display: none !important;\\n  }\\n  \\n\\n.swagger-ui .authorization__btn {\\n    display: none !important;\\n  }\\n\\n.swagger-ui .servers {\\n    display: none !important;\\n  }\\n\\n.swagger-ui .scheme-container {\\n    display: none !important;\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["PREFIX","classes","card","concat","providerText","apiDetails","apiActions","deleteProgress","thumbHeader","imageWrapper","thumbContent","thumbLeft","thumbRight","thumbInfo","textTruncate","imageOverlap","row","textWrapper","thumbRightBy","thumbRightByLabel","ribbon","StyledCard","styled","Card","_ref","_ref2","theme","_defineProperty","margin","spacing","maxWidth","custom","thumbnail","width","transition","textTransform","padding","paddingBottom","justifyContent","height","color","green","position","marginLeft","whiteSpace","palette","text","secondary","overflow","textOverflow","cursor","backgroundColor","background","paper","display","alignItems","bottom","contentBackgroundColor","gap","textDecoration","borderRadius","paddingLeft","paddingRight","fontFamily","typography","fontSize","fontWeight","primary","main","zIndex","textAlign","popover","pointerEvents","APIThumb","_Component","props","_this","_classCallCheck","_callSuper","event","setState","businessAnchorEl","currentTarget","businessOpenPopover","technicalAnchorEl","technicalOpenPopover","state","isHover","loading","toggleMouseOver","bind","setLoading","_inherits","key","value","loadingState","this","type","lifecycleState","overviewPath","_this$props","api","isAPIProduct","updateData","_this$state","tileDisplayInfo","Configurations","apiType","id","apiUUID","API","CONSTS","APIProduct","lifeCycleStatus","status","React","onMouseOver","onFocus","onMouseOut","onBlur","elevation","className","name","version","advertiseOnly","style","CardMedia","src","component","BaseThumbnail","title","monetizedInfo","showMonetizedState","MonetizationOnIcon","CardContent","Link","to","Typography","gutterBottom","variant","align","FormattedMessage","defaultMessage","provider","context","showBusinessDetails","showTechnicalDetails","onMouseEnter","handleBusinessPopoverOpen","onMouseLeave","handleBusinessPopoverClose","businessOwner","businessOwnerEmail","Popover","sx","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","flexDirection","EmailIcon","handleTechnicalPopoverOpen","handleTechnicalPopoverClose","technicalOwner","technicalOwnerEmail","CardActions","Chip","size","root","label","transportType","undefined","gatewayVendor","isRestricted","DeleteApiButton","CircularProgress","Component","propTypes","PropTypes","isRequired","injectIntl","useTheme","_extends","bullet","pos","contextBox","caption","imageDisplay","minWidth","marginTop","marginBottom","marginRight","transform","grey","maxHeight","typo","truncate","windowURL","window","URL","webkitURL","APIThumbPlain","ImageView","showInfo","_useState2","_slicedToArray","useState","selectedIcon","category","imageConf","setImageConf","_useState4","imageObj","setIMageObj","_useState6","imageLoaded","setImageLoaded","_useState8","_useState10","setBusinessAnchorEl","_useState12","setTechnicalAnchorEl","_useState14","setBusinessOpenPopover","_useState16","setTechnicalOpenPopover","useEffect","Api","getAPIThumbnail","then","response","data","headers","iconJson","JSON","parse","createObjectURL","finally","alt","Icon","icon","getIcon","Box","mb","pl","defaultApiImage","flex","mt","defaultProps","thumbnailTemplates","active","ApiThumbClassic","StyledLink","defaultCardContent","maxCardContent","minCardContent","DocThumb","thumbIcon","configValue","doc","setIsHover","PrefixIcon","TextFieldsIcon","sourceType","PictureAsPdfIcon","DescriptionTwoToneIcon","LinkIcon","cardContentClassName","underline","RouterLink","LetterGenerator","artifact","charLength","ThumbIcon","bgColor","Grid","container","direction","item","ml","associatedType","apiName","apiVersion","DocThumbPlain","DocThumbClassic","linkRoot","StyledGrid","landingPage","menu","helperText","children","linkTo","_props$component","onClick","dense","_props$disabled","disabled","xs","toLowerCase","Button","boxTransition","overlayBox","overlayCloseButton","outline","float","isCollapsed","setIsCollapsed","isFadeOut","setIsFadeOut","sm","md","lg","bgcolor","borderColor","border","boxShadow","minHeight","p","blue","e","preventDefault","stopPropagation","objectFit","top","left","visibility","Fade","onExited","timeout","enter","exit","in","IconButton","CloseIcon","TaskState","severity","pending","completed","errors","inProgress","pendingMessage","completedMessage","inProgressMessage","message","body","code","description","Alert","thickness","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","wrapper","StyledModal","Modal","initialTaskStates","update","revision","deploy","publish","tasksReducer","action","_useReducer2","useReducer","tasksStatus","tasksStatusDispatcher","showStatus","setShowStatus","newSampleAPI","setNewSampleAPI","_usePublisherSettings","usePublisherSettings","publisherSettings","isLoading","taskManager","_ref3","_callee","promisedTask","_taskResult$body","taskResult","_context","t0","console","error","_x","_x2","handleDeploySample","_ref4","_callee2","defaultAdvancePolicy","defaultSubscriptionPolicy","internalGateways","restApi","sampleAPIObj","sampleAPI","revisionPayload","sampleAPIRevision","envList","deployRevisionPayload","getFirstVhost","revisionId","_context2","environment","includes","getSampleAPIData","save","updateSwagger","getSampleOpenAPI","AuthManager","isNotPublisher","createRevision","map","env","envName","find","ev","vhosts","host","displayOnDevportal","vhost","deployRevision","allDone","tasks","reduce","current","anyErrors","url","Redirect","LandingMenuItem","closeAfterTransition","isCreateMenu","settings","noRegularGw","gatewayTypes","APICreateMenuSection","LandingMenu","alwaysShowDeploySampleButton","showSampleDeploy","setShowSampleDeploy","composeQueryJSON","queryString","limit","offset","search","resp","count","pt","pr","Divider","SampleAPI","openList","isSmallScreen","useMediaQuery","breakpoints","down","isMediumScreen","between","Paper","square","app","Root","flexGrow","isXsOrBelow","gateway","setGatewayType","_theme$custom$landing","icons","graphqlIcon","restApiIcon","aiApiIcon","soapApiIcon","streamingApiIcon","portalConfigurationOnlyModeEnabled","xl","pb","RestAPIMenu","SoapAPIMenu","GraphqlAPIMenu","StreamingAPIMenu","AIAPIMenu","designAssistantEnabled","marginX","DesignAssistantMenu","apiCreateMenu","MenuButton","_React$Component","handleToggle","handleClose","_createClass","contains","target","_this2","menuList","buttonProps","Popper","placement","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","TransitionProps","Grow","ClickAwayListener","onClickAway","dividerCls","popoverAPK","up","isNotCreator","justify","orientation","ServiceCatalogMenu","button","mainTitleWrapper","APICreateMenu","borderBottom","A200","TopMenu","setListType","listType","showToggle","query","mainTitle","px","isSingular","getTitleForArtifactType","VerticalDivider","m","mr","ButtonGroup","GridOn","List","intl","useIntl","apiproductAddIcon","Onboarding","subTitle","OnboardingMenuCard","formatMessage","iconName","shape","func","withRouter","wordBreak","overflowWrap","DefThumb","def","DefThumbPlain","DefThumbClassic","contentInside","apiNameLink","paddingTop","TableView","totalCount","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","MUIDataTableBodyCell","flexWrap","MuiTableBody","assign","createTheme","adaptV4Theme","rowsPerPage","page","xhrRequest","list","total","pagination","apisAndApiProducts","notFound","localStorage","setItem","composeQuery","all","defaultApiView","getItem","prevRowsPerPage","parseInt","_this$state2","getData","userRowsPerPage","prevProps","_this$props2","_this$state3","_this$state4","newPage","_this$props3","_this$state5","columns","options","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","rowIndex","apiId","CustomIcon","strokeColor","sort","filterType","responsive","serverSide","onChangePage","changePage","selectableRows","onChangeRowsPerPage","newNumberOfRows","textLabels","displayRows","toolbar","downloadCsv","print","viewColumns","customRowRender","dataIndex","ApiThumb","download","customToolbar","ResourceNotFound","Progress","per","StyledEngineProvider","injectFirst","ThemeProvider","getMuiTheme","SampleAPIProduct","APILanding","content","Listing","location","tryAiBannerCont","tryAiBannerImgWrap","tryAiBannerContentWrap","tryAiBannerContent","tryAiBannerTriangle","gridGap","right","Stack","rootSmall","rootLarge","readOnlyDefault","readOnlyPlain","rounded","focused","textInput","textInputLarge","inputAdornedEnd","inputAdornedEndAlignTop","textarea","inputGroup","common","white","alpha","resize","black","light","borderWidth","body1","lineHeight","overline","alignSelf","TextInput","ref","readOnly","rows","multiline","_props$size","optional","tooltip","inputTooltip","testId","info","actions","_props$variant","_props$rounded","_props$resizeIndicato","resizeIndicator","rest","_objectWithoutProperties","_excluded","InputBase","clsx","multilineReadonly","multilineResizeIndicator","inputMultiline","input","adornedEnd","forwardRef","tryAiBottom","tryAiBottomInner","reExecuteWrap","tryAiBottomTextInputWrap","disclaimerText","ExecuteQuery","MentionMenu","chars","index","overflowY","overflowX","onMouseDown","lastQuery","inputQuery","handleQueryChange","handleExecute","paths","textareaRef","useRef","mentionPos","setMentionPos","mentionIndex","setMentionIndex","dynamicCharacters","setDynamicCharacters","aiAuthTokenProvided","transformedPaths","path","startsWith","MENTION_REG","filteredCharacters","useMemo","match","caret","completeMention","selected","newValue","newLength","setSelectionRange","fullWidth","placeholder","onChange","selectionStart","rect","getBoundingClientRect","onKeyDown","nextIndex","prevIndex","onKeyPress","endAdornment","inputProps","maxLength","createPortal","document","disableGutters","divider","expandIcon","ArrowForwardIosSharp","A","borderTop","StyledButton","onAdd","onRemove","expanded","setExpanded","isAdded","setIsAdded","messages","executionResults","finalOutcome","onTitlesSelected","user","setUser","selectedTitles","setSelectedTitles","copyText","copyBtnText","setCopyBtnText","capitalizeWords","split","word","toUpperCase","join","handleAddTitle","prevTitles","handleRemoveTitle","handleApplyChanges","role","AutoAwesome","borderLeft","borderRight","suggestions","parsedContent","warn","AccountCircle","sampleQuery","sampleQueryCard","onExecuteClick","queryHeading","queryData","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","disableAuthorizeAndInfoPlugin","wrapComponents","authorizeBtn","disableTryItOutPlugin","statePlugins","spec","wrapSelectors","allowTryItOutFor","SwaggerUI","componentProps","validatorUrl","docExpansion","defaultModelsExpandDepth","plugins","SwaggerUILib","finalOutcomeCode","sessionId","showCode","setShowCode","FormControlLabel","control","Switch","checked","prevState","labelPlacement","fileExtension","blob","Blob","createElement","href","appendChild","click","removeChild","revokeObjectURL","CloudDownloadRounded","language","minimap","scrollBeyondLastLine","wordWrap","taskStatus","multiGateway","setOpen","showProgress","setShowProgress","history","handleError","messageId","createBlobAndFile","File","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","endpointValue","apiContext","createData","file","graphQLInfo","gatewayType","endpoint","protocol","asyncTransportProtocols","source","validationResponse","definition","jsonContent","replace","validateOpenAPIByFile","obj","validateOpenAPIDefinition","isValid","validateAsyncAPIByFile","validateAsyncAPIDefinition","validateGraphQLFile","validateGraphQLSchema","autoFocus","dotStyle","animation","animationDelay","predefinedAnswers","hi","hiii","hello","hey","greetings","thanks","bye","goodbye","calculateStringSimilarity","string1","string2","str1","str2","subsequenceMap","Map","subsequence","substr","set","has","get","matchCount","j","inputString","bestMatch","bestScore","searchString","_i","_Object$entries","entries","comparisonString","score","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","setSessionId","setInputQuery","setLastQuery","setFinalOutcome","setApiType","setFinalOutcomeCode","setMessages","_useState18","_useState20","setTaskStatus","_useState22","_useState24","setIsSuggestion","_useState26","_useState28","setPaths","_useState30","setApiTypeSuggestion","_useState32","setMissingValues","useHistory","_useState34","ApiChatBanner","lastRenderedComponent","setLastRenderedComponent","_useState36","specEnrichmentError","_useState38","specEnrichmentErrorLevel","_useState40","setMultiGateway","gatewayDetails","isNew","chatContainerRef","element","scrollTop","scrollHeight","DisplayCode","apiTypes","gatewayFeatureCatalog","newSessionId","prevMessages","sendInitialRequest","generateSessionId","handleExecuteSampleQuery","uuid","Math","random","dateTime","Date","toISOString","encodedSessionId","btoa","authTokenNotProvidedWarning","apiAiChatDocLink","rel","LaunchIcon","sendQuery","_x3","_sendQuery","_callee4","queryDesignAssistant","_context4","sendChatAPIDesignAssistant","_callee3","currentSessionId","queryText","jsonResponse","backendResponse","isSuggestions","typeOfApi","_paths","_apiTypeSuggestion","_missingValues","_context3","trim","findBestMatchingAnswer","apiTypeSuggestion","missingValues","t1","t2","_x4","_x5","minwidth","WelcomeMessage","SampleQueryCard","scrollBehavior","ApiChatResponse","titles","titlesString","LoadingDots","ApiChatExecute","goBack","AlertDialog","Details","lazy","DeferredDetails","Suspense","fallback","APICreateRoutes","DeferredAPICreateRoutes","DefferedAIApiCreateRoutes","APICreateWithAI","Route","exact","now","render","backLink","backIcon","backText","deleteWrapper","delete","linkText","inlineBlock","flexBox","apis","listing","deleteButtonColor","handleApiDelete","handleRequestClose","handleRequestOpen","openMenu","_this$props$api","deleteProduct","deleteHandler","resourcePath","SINGLE_API","SINGLE_API_PRODUCT","ScopeValidation","resourceMethod","DELETE","classNames","disableFocusRipple","disableRipple","DeleteIcon","b","msg","svgImage","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","thumbnailBoxChild","rects","sub","fill","fillOpacity","x","primeColor","prime","iconWrapper","ImageGenerator","_PureComponent","fixedIcon","backgroundIndex","str","colorPairs","backgrounds","iconElement","charCodeAt","PureComponent","iconSettings","suppressLinkStyles","thumbButton","thumbBackdrop","thumb","media","opacity","thumbnailPop","selectedIconProp","colorProp","backgroundIndexProp","categoryProp","isEditable","imageUpdate","setIconJson","setThumbnail","hasThumbnail","getAPIProductThumbnail","view","ButtonBase","focusRipple","EditIcon","standardSuccess","standardInfo","standardWarning","standardError","outlinedSuccess","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","filledInfo","filledWarning","filledError","plainWaiting","plainSuccess","plainInfo","plainWarning","plainError","StyledPaper","getColor","mode","darken","lighten","getBackgroundColor","body2","success","warning","fontWeightMedium","defaultIconMapping","SuccessOutlinedIcon","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","waiting","MoreHorizIcon","_props$closeText","closeText","_props$iconMapping","iconMapping","_props$role","_props$severity","other","clsName","capitalize","_Resource","kwargs","properties","isDefaultVersion","transport","endpointConfig","endpoint_type","sandbox_endpoints","production_endpoints","_data","getType","Resource","_requestMetaData","client","getSettings","getAPIMonetization","addAPIMonetization","requestBody","_this3","getAPISubscriptionPolicies","_this4","getSubscriptionUsage","subscriptionId","_this5","components","schemas","apiAttribute","createAPIProduct","apiData","payload","_this6","resource","copy","excludes","prop","updatedProperties","updatedAPI","toJSON","apiWithoutVisibleOrgs","visibleOrganizations","apiProductId","updateAPIProduct","_this7","imageFile","_this8","updateAPIProductThumbnail","reject","_this9","addAPIProductDocument","_this10","getAPIProductDocuments","productId","docId","_this11","documentId","updateAPIProductDocument","_this12","getAPIProductDocument","inlineContent","_this13","addAPIProductDocumentContent","getAPIProductDocumentContent","_this14","deleteAPIProductDocument","fileToDocument","_this15","getAPIProductRevisions","_this16","createAPIProductRevision","_this17","deleteAPIProductRevision","_this18","exportAPIProduct","_this19","undeployAPIProductRevision","_this20","deployAPIProductRevision","_this21","restoreAPIProductRevision","deploymentId","_this22","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","CONST","API_CLIENT","updateAPIProductDeployment","swagger","_this23","apiDefinition","stringify","put_api_products__apiProductId__swagger","_this24","getAPIProductSwagger","checkedItems","_this25","lifecycleChecklist","changeAPIProductLifecycle","_this26","getAPIProductLifecycleState","_this27","getAPIProductLifecycleHistory","_this28","getAPIProduct","_this29","deleteAPIProductLifecycleStatePendingTasks","getAPIProductRevisionDeployments","getAPIRevisions","_this30","params","_Object$entries$_i","getAllAPIProducts","_this31","deleteAPIProduct","APIS","API_PRODUCTS","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_PRODUCT_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","SERVICES","SINGLE_SERVICE","SINGLE_SERVICE_DEFINITION","IMPORT_SERVICE","EXPORT_SERVICE","POST","PUT","GET","HEAD","currentResourcePath","currentResourceMethod","userScopes","getUser","scopes","APIClient","getScopeForResource","_step","_iterator","_createForOfIteratorHelper","scope","err","hasScopes","haveScope","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}